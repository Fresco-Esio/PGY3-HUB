{"version":3,"file":"static/js/213.c0413f75.chunk.js","mappings":"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","sources":["components/LiteratureModal.js"],"sourcesContent":["// Enhanced Literature Modal with tabbed interface and advanced animations\nimport React, { useState, useEffect, useMemo, useCallback } from 'react';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport { \n  X, \n  BookOpen, \n  Eye, \n  StickyNote, \n  Link2, \n  FileText, \n  Tag, \n  Calendar,\n  User,\n  Search,\n  Filter,\n  ExternalLink,\n  Download,\n  Edit3,\n  Save,\n  Trash2,\n  Plus\n} from 'lucide-react';\n\n// Animation variants for Framer Motion\nconst modalVariants = {\n  hidden: {\n    opacity: 0,\n    scale: 0.3,\n    y: 50,\n    rotate: -5,\n  },\n  visible: {\n    opacity: 1,\n    scale: 1,\n    y: 0,\n    rotate: 0,\n    transition: {\n      type: \"spring\",\n      damping: 25,\n      stiffness: 300,\n      duration: 0.6,\n    }\n  },\n  exit: {\n    opacity: 0,\n    scale: 0.7,\n    y: 30,\n    rotate: -3,\n    transition: {\n      type: \"easeInOut\",\n      duration: 0.4,\n    }\n  }\n};\n\nconst backdropVariants = {\n  hidden: { \n    opacity: 0,\n    backdropFilter: 'blur(0px)'\n  },\n  visible: { \n    opacity: 1,\n    backdropFilter: 'blur(8px)',\n    transition: {\n      duration: 0.4,\n      ease: \"easeOut\"\n    }\n  },\n  exit: { \n    opacity: 0,\n    backdropFilter: 'blur(0px)',\n    transition: {\n      duration: 0.3,\n      ease: \"easeIn\"\n    }\n  }\n};\n\nconst tabVariants = {\n  hidden: { \n    opacity: 0, \n    x: -30,\n    scale: 0.95\n  },\n  visible: { \n    opacity: 1, \n    x: 0,\n    scale: 1,\n    transition: {\n      type: \"spring\",\n      damping: 20,\n      stiffness: 300,\n      duration: 0.4\n    }\n  },\n  exit: { \n    opacity: 0, \n    x: 30,\n    scale: 0.95,\n    transition: {\n      duration: 0.3,\n      ease: \"easeInOut\"\n    }\n  }\n};\n\nconst LiteratureModal = ({ \n  isOpen, \n  onClose, \n  literatureData, \n  allNodes = [], \n  connections = [],\n  setMindMapData,\n  autoSaveMindMapData,\n  addToast,\n  onAnimationStart,\n  onAnimationEnd\n}) => {\n  const [activeTab, setActiveTab] = useState('overview');\n  const [searchQuery, setSearchQuery] = useState('');\n  const [filterType, setFilterType] = useState('all');\n  const [isAnimating, setIsAnimating] = useState(false);\n  const [isVisible, setIsVisible] = useState(false);\n  const [isEditing, setIsEditing] = useState(false);\n  const [hasInitialized, setHasInitialized] = useState(false);\n  \n  // Editable form data\n  const [formData, setFormData] = useState({\n    title: '',\n    authors: [],\n    year: '',\n    journal: '',\n    abstract: '',\n    keywords: '',\n    doi: '',\n    volume: '',\n    pages: '',\n    notes: ''\n  });\n\n  // Initialize form data when modal opens\n  useEffect(() => {\n    if (isOpen && literatureData && !hasInitialized) {\n      setFormData({\n        title: literatureData.title || '',\n        authors: Array.isArray(literatureData.authors) ? literatureData.authors : \n                (literatureData.authors ? [literatureData.authors] : []),\n        year: literatureData.year || '',\n        journal: literatureData.journal || '',\n        abstract: literatureData.abstract || '',\n        keywords: literatureData.keywords || '',\n        doi: literatureData.doi || '',\n        volume: literatureData.volume || '',\n        pages: literatureData.pages || '',\n        notes: literatureData.notes || ''\n      });\n      setActiveTab('overview');\n      setHasInitialized(true);\n      \n      // Use requestAnimationFrame to ensure DOM is ready\n      requestAnimationFrame(() => {\n        setIsVisible(true);\n      });\n    } else if (!isOpen) {\n      setIsVisible(false);\n      setHasInitialized(false);\n      setIsEditing(false);\n    }\n  }, [isOpen, literatureData, hasInitialized]);\n\n  // Save changes to literature data\n  const handleSave = useCallback(() => {\n    if (!literatureData || !setMindMapData) return;\n    \n    const updatedLiterature = {\n      ...literatureData,\n      title: formData.title,\n      authors: formData.authors,\n      year: formData.year,\n      journal: formData.journal,\n      abstract: formData.abstract,\n      keywords: formData.keywords,\n      doi: formData.doi,\n      volume: formData.volume,\n      pages: formData.pages,\n      notes: formData.notes\n    };\n\n    setMindMapData(prevData => {\n      const newData = {\n        ...prevData,\n        literature: (prevData.literature || []).map(lit => \n          lit.id === literatureData.id ? updatedLiterature : lit\n        )\n      };\n      \n      // Auto-save with the updated data\n      if (autoSaveMindMapData) {\n        autoSaveMindMapData(newData);\n      }\n      \n      return newData;\n    });\n    \n    if (addToast) {\n      addToast('Literature updated successfully!', 'success');\n    }\n    \n    setIsEditing(false);\n  }, [formData, literatureData, setMindMapData, autoSaveMindMapData, addToast]);\n\n  // Handle form field changes\n  const handleFieldChange = (field, value) => {\n    setFormData(prev => ({\n      ...prev,\n      [field]: value\n    }));\n  };\n\n  // Handle authors array changes\n  const handleAuthorsChange = (authorsString) => {\n    const authorsArray = authorsString.split(',').map(author => author.trim()).filter(Boolean);\n    setFormData(prev => ({\n      ...prev,\n      authors: authorsArray\n    }));\n  };\n\n  // Enhanced tab switching with smooth animation\n  const handleTabSwitch = (newTab) => {\n    if (newTab === activeTab || isAnimating) return;\n    \n    setIsAnimating(true);\n    if (onAnimationStart) onAnimationStart();\n    \n    // Brief pause for exit animation, then switch\n    setTimeout(() => {\n      setActiveTab(newTab);\n      // Animation completes after content loads\n      setTimeout(() => {\n        setIsAnimating(false);\n        if (onAnimationEnd) onAnimationEnd();\n      }, 350); // Total animation duration\n    }, 50);\n  };\n\n  // Enhanced close handler with proper animation sequencing\n  const handleClose = () => {\n    if (onAnimationStart) onAnimationStart();\n    setIsVisible(false);\n    setIsAnimating(true);\n    \n    // Call onClose after exit animation completes\n    setTimeout(() => {\n      onClose();\n      if (onAnimationEnd) onAnimationEnd();\n      setIsAnimating(false);\n    }, 400); // Match exit animation duration\n  };\n\n  // Get connected nodes for this literature item\n  const connectedNodes = useMemo(() => {\n    if (!literatureData || !connections) return [];\n    \n    const relatedConnections = connections.filter(conn => \n      conn.source.includes('literature') && conn.source.includes(literatureData.id) ||\n      conn.target.includes('literature') && conn.target.includes(literatureData.id)\n    );\n    \n    const nodeIds = relatedConnections.map(conn => \n      conn.source.includes(literatureData.id) ? conn.target : conn.source\n    );\n    \n    return allNodes.filter(node => nodeIds.includes(node.id));\n  }, [literatureData, connections, allNodes]);\n\n  // Extract keywords from connected nodes for search relevance\n  const extractedKeywords = useMemo(() => {\n    const keywords = new Set();\n    \n    connectedNodes.forEach(node => {\n      const data = node.data;\n      \n      if (node.type === 'case') {\n        if (data.primary_diagnosis) keywords.add(data.primary_diagnosis.toLowerCase());\n        if (data.secondary_diagnoses) {\n          data.secondary_diagnoses.forEach(diag => keywords.add(diag.toLowerCase()));\n        }\n        if (data.chief_complaint) {\n          // Extract key terms from chief complaint\n          const terms = data.chief_complaint.toLowerCase().match(/\\b\\w{4,}\\b/g) || [];\n          terms.forEach(term => keywords.add(term));\n        }\n      } else if (node.type === 'topic') {\n        if (data.title) keywords.add(data.title.toLowerCase());\n        if (data.category) keywords.add(data.category.toLowerCase());\n        if (data.tags) {\n          data.tags.forEach(tag => keywords.add(tag.toLowerCase()));\n        }\n      }\n    });\n    \n    return Array.from(keywords).filter(keyword => keyword.length > 3);\n  }, [connectedNodes]);\n\n  // Find related literature based on keywords\n  const relatedLiterature = useMemo(() => {\n    if (extractedKeywords.length === 0) return [];\n    \n    return allNodes\n      .filter(node => \n        node.type === 'literature' && \n        node.data.id !== literatureData?.id\n      )\n      .map(node => {\n        const data = node.data;\n        let relevanceScore = 0;\n        \n        // Check title, abstract, keywords for matches\n        const searchText = [\n          data.title || '',\n          data.abstract || '',\n          data.keywords || '',\n          data.authors || ''\n        ].join(' ').toLowerCase();\n        \n        extractedKeywords.forEach(keyword => {\n          if (searchText.includes(keyword)) {\n            relevanceScore++;\n          }\n        });\n        \n        return { ...data, relevanceScore };\n      })\n      .filter(item => item.relevanceScore > 0)\n      .sort((a, b) => b.relevanceScore - a.relevanceScore)\n      .slice(0, 8); // Limit to top 8 results\n  }, [extractedKeywords, allNodes, literatureData]);\n\n  // Filter related literature\n  const filteredRelatedLiterature = useMemo(() => {\n    let filtered = relatedLiterature;\n    \n    if (searchQuery) {\n      filtered = filtered.filter(item =>\n        item.title?.toLowerCase().includes(searchQuery.toLowerCase()) ||\n        item.authors?.join(' ').toLowerCase().includes(searchQuery.toLowerCase()) ||\n        item.journal?.toLowerCase().includes(searchQuery.toLowerCase())\n      );\n    }\n    \n    if (filterType !== 'all') {\n      filtered = filtered.filter(item => item.type === filterType);\n    }\n    \n    return filtered;\n  }, [relatedLiterature, searchQuery, filterType]);\n\n  // Get type-specific styling\n  const getTypeColor = (type) => {\n    const colors = {\n      'clinical-trial': 'bg-blue-100 text-blue-800 border-blue-200',\n      'rct': 'bg-green-100 text-green-800 border-green-200',\n      'review': 'bg-purple-100 text-purple-800 border-purple-200',\n      'meta-analysis': 'bg-indigo-100 text-indigo-800 border-indigo-200',\n      'case-study': 'bg-yellow-100 text-yellow-800 border-yellow-200'\n    };\n    return colors[type?.toLowerCase()] || 'bg-gray-100 text-gray-800 border-gray-200';\n  };\n\n  const tabs = [\n    { id: 'overview', label: 'Overview', icon: FileText },\n    { id: 'pdf', label: 'PDF Viewer', icon: Eye },\n    { id: 'notes', label: 'Notes', icon: StickyNote },\n    { id: 'related', label: 'Related', icon: Link2, badge: relatedLiterature.length }\n  ];\n\n  if (!isOpen) return null;\n\n  return (\n    <AnimatePresence mode=\"wait\" onExitComplete={() => setIsAnimating(false)}>\n      {isVisible && (\n        <motion.div \n          key={`modal-${literatureData?.id || 'default'}`}\n          initial=\"hidden\"\n          animate=\"visible\"\n          exit=\"hidden\"\n          variants={backdropVariants}\n          className=\"fixed inset-0 bg-black flex items-center justify-center z-50 p-4\"\n          onClick={handleClose}\n        >\n          <motion.div \n            initial=\"hidden\"\n            animate=\"visible\"\n            exit=\"hidden\"\n            variants={modalVariants}\n            className=\"bg-white rounded-2xl shadow-2xl w-full max-w-5xl max-h-[90vh] overflow-hidden\"\n            onClick={(e) => e.stopPropagation()}\n            onAnimationStart={() => {\n              setIsAnimating(true);\n              if (onAnimationStart) onAnimationStart();\n            }}\n            onAnimationComplete={() => {\n              setIsAnimating(false);\n              if (onAnimationEnd) onAnimationEnd();\n            }}\n          >\n            {/* Enhanced Header with Dark Theme */}\n            <div className=\"bg-gradient-to-br from-slate-900 to-slate-800 text-white p-6\">\n              <div className=\"flex items-start justify-between\">\n                <div className=\"flex-1\">\n                  {isEditing ? (\n                    <input\n                      type=\"text\"\n                      value={formData.title}\n                      onChange={(e) => handleFieldChange('title', e.target.value)}\n                      className=\"text-2xl font-bold mb-2 bg-slate-700 border border-slate-600 rounded-lg px-3 py-2 text-white w-full focus:ring-2 focus:ring-blue-400 focus:border-blue-400\"\n                      placeholder=\"Literature title...\"\n                    />\n                  ) : (\n                    <h2 className=\"text-2xl font-bold mb-2\">{formData.title || 'Literature Item'}</h2>\n                  )}\n                  \n                  <div className=\"flex items-center gap-4 text-slate-300\">\n                    {isEditing ? (\n                      <div className=\"flex flex-wrap gap-4\">\n                        <input\n                          type=\"text\"\n                          value={formData.authors.join(', ')}\n                          onChange={(e) => handleAuthorsChange(e.target.value)}\n                          className=\"bg-slate-700 border border-slate-600 rounded px-2 py-1 text-sm text-white focus:ring-2 focus:ring-blue-400 focus:border-blue-400\"\n                          placeholder=\"Authors (comma separated)...\"\n                        />\n                        <input\n                          type=\"number\"\n                          value={formData.year}\n                          onChange={(e) => handleFieldChange('year', e.target.value)}\n                          className=\"bg-slate-700 border border-slate-600 rounded px-2 py-1 text-sm text-white w-20 focus:ring-2 focus:ring-blue-400 focus:border-blue-400\"\n                          placeholder=\"Year\"\n                        />\n                        <input\n                          type=\"text\"\n                          value={formData.journal}\n                          onChange={(e) => handleFieldChange('journal', e.target.value)}\n                          className=\"bg-slate-700 border border-slate-600 rounded px-2 py-1 text-sm text-white focus:ring-2 focus:ring-blue-400 focus:border-blue-400\"\n                          placeholder=\"Journal...\"\n                        />\n                      </div>\n                    ) : (\n                      <>\n                        {formData.authors.length > 0 && (\n                          <div className=\"flex items-center gap-1\">\n                            <User size={16} />\n                            <span>{formData.authors.slice(0, 3).join(', ')}{formData.authors.length > 3 ? ' et al.' : ''}</span>\n                          </div>\n                        )}\n                        {formData.year && (\n                          <div className=\"flex items-center gap-1\">\n                            <Calendar size={16} />\n                            <span>{formData.year}</span>\n                          </div>\n                        )}\n                        {formData.journal && (\n                          <div className=\"flex items-center gap-1\">\n                            <BookOpen size={16} />\n                            <span>{formData.journal}</span>\n                          </div>\n                        )}\n                      </>\n                    )}\n                  </div>\n                </div>\n                \n                <div className=\"flex items-center gap-2\">\n                  {isEditing ? (\n                    <>\n                      <motion.button\n                        whileHover={{ scale: 1.05 }}\n                        whileTap={{ scale: 0.95 }}\n                        onClick={handleSave}\n                        className=\"flex items-center gap-2 px-4 py-2 bg-green-600 hover:bg-green-700 rounded-lg transition-colors\"\n                      >\n                        <Save size={16} />\n                        Save\n                      </motion.button>\n                      <motion.button\n                        whileHover={{ scale: 1.05 }}\n                        whileTap={{ scale: 0.95 }}\n                        onClick={() => setIsEditing(false)}\n                        className=\"flex items-center gap-2 px-4 py-2 bg-slate-600 hover:bg-slate-700 rounded-lg transition-colors\"\n                      >\n                        <X size={16} />\n                        Cancel\n                      </motion.button>\n                    </>\n                  ) : (\n                    <motion.button\n                      whileHover={{ scale: 1.05 }}\n                      whileTap={{ scale: 0.95 }}\n                      onClick={() => setIsEditing(true)}\n                      className=\"flex items-center gap-2 px-4 py-2 bg-blue-600 hover:bg-blue-700 rounded-lg transition-colors\"\n                    >\n                      <Edit3 size={16} />\n                      Edit\n                    </motion.button>\n                  )}\n                  \n                  <motion.button\n                    whileHover={{ scale: 1.05 }}\n                    whileTap={{ scale: 0.95 }}\n                    onClick={handleClose}\n                    className=\"p-2 hover:bg-slate-700 rounded-lg transition-colors\"\n                  >\n                    <X size={24} />\n                  </motion.button>\n                </div>\n              </div>\n              \n              {literatureData?.type && (\n                <div className=\"mt-4\">\n                  <div className=\"inline-flex items-center px-3 py-1 bg-slate-700 text-slate-200 rounded-full text-sm\">\n                    {literatureData.type.toUpperCase()}\n                  </div>\n                </div>\n              )}\n            </div>\n\n            {/* Tab Navigation with Dark Theme */}\n            <div className=\"border-b border-slate-200 bg-gradient-to-r from-slate-100 to-slate-50\">\n              <nav className=\"flex space-x-8 px-6\">\n                {tabs.map((tab) => {\n                  const Icon = tab.icon;\n                  return (\n                    <motion.button\n                      key={tab.id}\n                      whileHover={{ scale: 1.05, y: -2 }}\n                      whileTap={{ scale: 0.95 }}\n                      onClick={() => handleTabSwitch(tab.id)}\n                      disabled={isAnimating}\n                      className={`flex items-center gap-2 px-4 py-4 border-b-2 font-medium text-sm transition-all duration-300 ${\n                        activeTab === tab.id\n                          ? 'text-slate-900 border-slate-900 bg-white shadow-sm'\n                          : 'text-slate-600 border-transparent hover:text-slate-900 hover:border-slate-300'\n                      }`}\n                    >\n                      <Icon size={16} className={activeTab === tab.id ? 'text-slate-900' : 'text-slate-500'} />\n                      {tab.label}\n                      {tab.badge !== undefined && tab.badge > 0 && (\n                        <span className=\"ml-1 bg-slate-700 text-white text-xs px-2 py-0.5 rounded-full\">\n                          {tab.badge}\n                        </span>\n                      )}\n                    </motion.button>\n                  );\n                })}\n              </nav>\n            </div>\n\n            {/* Tab Content */}\n            <div className=\"p-6 overflow-y-auto max-h-[60vh]\">\n              <AnimatePresence mode=\"wait\">\n                <motion.div\n                  key={activeTab}\n                  initial=\"hidden\"\n                  animate=\"visible\"\n                  exit=\"exit\"\n                  variants={tabVariants}\n                  layout=\"position\"\n                  layoutId=\"tabContent\"\n                >\n                  {activeTab === 'overview' && (\n                    <div className=\"space-y-6\">\n                      {/* Abstract Section */}\n                      <div>\n                        <h3 className=\"text-lg font-semibold text-slate-900 mb-3\">Abstract</h3>\n                        {isEditing ? (\n                          <textarea\n                            value={formData.abstract}\n                            onChange={(e) => handleFieldChange('abstract', e.target.value)}\n                            className=\"w-full p-3 bg-slate-50 border border-slate-300 rounded-lg text-slate-800 focus:ring-2 focus:ring-blue-400 focus:border-blue-400 resize-none\"\n                            rows={6}\n                            placeholder=\"Enter abstract...\"\n                          />\n                        ) : (\n                          <p className=\"text-slate-700 leading-relaxed bg-slate-50 p-4 rounded-lg\">\n                            {formData.abstract || 'No abstract provided'}\n                          </p>\n                        )}\n                      </div>\n\n                      {/* Keywords Section */}\n                      <div>\n                        <h3 className=\"text-lg font-semibold text-slate-900 mb-3\">Keywords</h3>\n                        {isEditing ? (\n                          <input\n                            type=\"text\"\n                            value={formData.keywords}\n                            onChange={(e) => handleFieldChange('keywords', e.target.value)}\n                            className=\"w-full p-3 bg-slate-50 border border-slate-300 rounded-lg text-slate-800 focus:ring-2 focus:ring-blue-400 focus:border-blue-400\"\n                            placeholder=\"Enter keywords (comma separated)...\"\n                          />\n                        ) : (\n                          <div className=\"flex flex-wrap gap-2\">\n                            {formData.keywords ? formData.keywords.split(',').map((keyword, index) => (\n                              <span\n                                key={index}\n                                className=\"bg-slate-700 text-white px-3 py-1 rounded-full text-sm\"\n                              >\n                                {keyword.trim()}\n                              </span>\n                            )) : (\n                              <span className=\"text-slate-500 italic\">No keywords provided</span>\n                            )}\n                          </div>\n                        )}\n                      </div>\n\n                      {/* Publication Details */}\n                      <div>\n                        <h3 className=\"text-lg font-semibold text-slate-900 mb-3\">Publication Details</h3>\n                        {isEditing ? (\n                          <div className=\"grid grid-cols-2 gap-4\">\n                            <div>\n                              <label className=\"block text-sm font-medium text-slate-700 mb-1\">DOI</label>\n                              <input\n                                type=\"text\"\n                                value={formData.doi}\n                                onChange={(e) => handleFieldChange('doi', e.target.value)}\n                                className=\"w-full p-2 bg-slate-50 border border-slate-300 rounded text-sm focus:ring-2 focus:ring-blue-400 focus:border-blue-400\"\n                                placeholder=\"DOI...\"\n                              />\n                            </div>\n                            <div>\n                              <label className=\"block text-sm font-medium text-slate-700 mb-1\">Volume</label>\n                              <input\n                                type=\"text\"\n                                value={formData.volume}\n                                onChange={(e) => handleFieldChange('volume', e.target.value)}\n                                className=\"w-full p-2 bg-slate-50 border border-slate-300 rounded text-sm focus:ring-2 focus:ring-blue-400 focus:border-blue-400\"\n                                placeholder=\"Volume...\"\n                              />\n                            </div>\n                            <div className=\"col-span-2\">\n                              <label className=\"block text-sm font-medium text-slate-700 mb-1\">Pages</label>\n                              <input\n                                type=\"text\"\n                                value={formData.pages}\n                                onChange={(e) => handleFieldChange('pages', e.target.value)}\n                                className=\"w-full p-2 bg-slate-50 border border-slate-300 rounded text-sm focus:ring-2 focus:ring-blue-400 focus:border-blue-400\"\n                                placeholder=\"Pages...\"\n                              />\n                            </div>\n                          </div>\n                        ) : (\n                          <div className=\"grid grid-cols-2 gap-4 text-sm bg-slate-50 p-4 rounded-lg\">\n                            {formData.doi && (\n                              <div>\n                                <span className=\"font-medium text-slate-600\">DOI:</span>\n                                <span className=\"ml-2 text-slate-900\">{formData.doi}</span>\n                              </div>\n                            )}\n                            {formData.volume && (\n                              <div>\n                                <span className=\"font-medium text-slate-600\">Volume:</span>\n                                <span className=\"ml-2 text-slate-900\">{formData.volume}</span>\n                              </div>\n                            )}\n                            {formData.pages && (\n                              <div className=\"col-span-2\">\n                                <span className=\"font-medium text-slate-600\">Pages:</span>\n                                <span className=\"ml-2 text-slate-900\">{formData.pages}</span>\n                              </div>\n                            )}\n                          </div>\n                        )}\n                      </div>\n\n                      {/* Connected Nodes */}\n                      {connectedNodes.length > 0 && (\n                        <div>\n                          <h3 className=\"text-lg font-semibold text-slate-900 mb-3\">Connected To</h3>\n                          <div className=\"grid grid-cols-2 gap-3\">\n                            {connectedNodes.map((node) => (\n                              <div\n                                key={node.id}\n                                className=\"flex items-center gap-3 p-3 bg-slate-50 rounded-lg border border-slate-200 hover:bg-slate-100 transition-colors\"\n                              >\n                                <div className={`w-3 h-3 rounded-full ${\n                                  node.type === 'case' ? 'bg-indigo-500' :\n                                  node.type === 'topic' ? 'bg-blue-500' :\n                                  node.type === 'task' ? 'bg-amber-500' : 'bg-purple-500'\n                                }`} />\n                                <div>\n                                  <div className=\"font-medium text-sm text-slate-900\">{node.data.label || node.data.title}</div>\n                                  <div className=\"text-xs text-slate-500 capitalize\">{node.type}</div>\n                                </div>\n                              </div>\n                            ))}\n                          </div>\n                        </div>\n                      )}\n                    </div>\n                  )}\n\n                  {activeTab === 'notes' && (\n                    <div>\n                      <h3 className=\"text-lg font-semibold text-slate-900 mb-3\">Personal Notes</h3>\n                      {isEditing ? (\n                        <textarea\n                          value={formData.notes}\n                          onChange={(e) => handleFieldChange('notes', e.target.value)}\n                          className=\"w-full p-3 bg-slate-50 border border-slate-300 rounded-lg text-slate-800 focus:ring-2 focus:ring-blue-400 focus:border-blue-400 resize-none\"\n                          rows={12}\n                          placeholder=\"Add your personal notes about this literature...\"\n                        />\n                      ) : (\n                        <div className=\"bg-slate-50 p-4 rounded-lg min-h-64\">\n                          {formData.notes ? (\n                            <p className=\"text-slate-700 leading-relaxed whitespace-pre-wrap\">{formData.notes}</p>\n                          ) : (\n                            <p className=\"text-slate-500 italic\">No notes yet. Click Edit to add your thoughts about this literature.</p>\n                          )}\n                        </div>\n                      )}\n                    </div>\n                  )}\n\n                  {activeTab === 'pdf' && (\n                    <div className=\"text-center py-8\">\n                      <Eye size={48} className=\"mx-auto text-slate-400 mb-4\" />\n                      <h3 className=\"text-lg font-medium text-slate-900 mb-2\">PDF Viewer</h3>\n                      <p className=\"text-slate-600 mb-4\">PDF viewing functionality will be implemented here</p>\n                      {literatureData?.pdf_url && (\n                        <a\n                          href={literatureData.pdf_url}\n                          target=\"_blank\"\n                          rel=\"noopener noreferrer\"\n                          className=\"inline-flex items-center gap-2 px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors\"\n                        >\n                          <ExternalLink size={16} />\n                          Open PDF\n                        </a>\n                      )}\n                    </div>\n                  )}\n\n                  {activeTab === 'related' && (\n                    <div className=\"space-y-4\">\n                      {/* Search and Filter Controls */}\n                      <div className=\"flex gap-4 mb-6\">\n                        <div className=\"flex-1 relative\">\n                          <Search size={18} className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-slate-400\" />\n                          <input\n                            type=\"text\"\n                            placeholder=\"Search related literature...\"\n                            value={searchQuery}\n                            onChange={(e) => setSearchQuery(e.target.value)}\n                            className=\"w-full pl-10 pr-4 py-2 border border-slate-300 rounded-lg focus:ring-2 focus:ring-blue-400 focus:border-blue-400\"\n                          />\n                        </div>\n                        \n                        <select\n                          value={filterType}\n                          onChange={(e) => setFilterType(e.target.value)}\n                          className=\"px-4 py-2 border border-slate-300 rounded-lg focus:ring-2 focus:ring-blue-400 focus:border-blue-400\"\n                        >\n                          <option value=\"all\">All Types</option>\n                          <option value=\"rct\">RCT</option>\n                          <option value=\"review\">Review</option>\n                          <option value=\"meta-analysis\">Meta-Analysis</option>\n                          <option value=\"case-study\">Case Study</option>\n                        </select>\n                      </div>\n\n                      {/* Related Literature Grid */}\n                      {filteredRelatedLiterature.length > 0 ? (\n                        <div className=\"grid grid-cols-1 gap-4\">\n                          {filteredRelatedLiterature.map((item, index) => (\n                            <motion.div\n                              key={`${item.id}-${index}`}\n                              initial={{ opacity: 0, y: 20 }}\n                              animate={{ opacity: 1, y: 0 }}\n                              transition={{ delay: index * 0.1 }}\n                              className=\"p-4 border border-slate-200 rounded-lg hover:shadow-md transition-all duration-200 bg-white\"\n                            >\n                              <div className=\"flex justify-between items-start mb-2\">\n                                <h4 className=\"font-medium text-slate-900 flex-1\">{item.title}</h4>\n                                {item.type && (\n                                  <span className={`ml-2 px-2 py-1 text-xs rounded border ${getTypeColor(item.type)}`}>\n                                    {item.type.toUpperCase()}\n                                  </span>\n                                )}\n                              </div>\n                              \n                              <div className=\"text-sm text-slate-600 mb-2\">\n                                {Array.isArray(item.authors) ? item.authors.slice(0, 3).join(', ') : item.authors}\n                                {item.year && ` (${item.year})`}\n                              </div>\n                              \n                              {item.journal && (\n                                <div className=\"text-sm text-slate-500 italic mb-2\">{item.journal}</div>\n                              )}\n                              \n                              <div className=\"flex items-center justify-between\">\n                                <div className=\"flex items-center gap-2\">\n                                  <span className=\"text-xs bg-blue-100 text-blue-800 px-2 py-1 rounded\">\n                                    Relevance: {item.relevanceScore}\n                                  </span>\n                                </div>\n                              </div>\n                            </motion.div>\n                          ))}\n                        </div>\n                      ) : (\n                        <div className=\"text-center py-8\">\n                          <BookOpen size={48} className=\"mx-auto text-slate-400 mb-4\" />\n                          <h3 className=\"text-lg font-medium text-slate-900 mb-2\">No Related Literature</h3>\n                          <p className=\"text-slate-600\">\n                            {extractedKeywords.length === 0 \n                              ? \"Connect this literature to cases or topics to find related content\"\n                              : \"No literature matches the current search criteria\"\n                            }\n                          </p>\n                        </div>\n                      )}\n                    </div>\n                  )}\n                </motion.div>\n              </AnimatePresence>\n            </div>\n          </motion.div>\n        </motion.div>\n      )}\n    </AnimatePresence>\n  );\n};\n\nexport default LiteratureModal;\n"],"names":["modalVariants","hidden","opacity","scale","y","rotate","visible","transition","type","damping","stiffness","duration","exit","backdropVariants","backdropFilter","ease","tabVariants","x","_ref","isOpen","onClose","literatureData","allNodes","connections","setMindMapData","autoSaveMindMapData","addToast","onAnimationStart","onAnimationEnd","activeTab","setActiveTab","useState","searchQuery","setSearchQuery","filterType","setFilterType","isAnimating","setIsAnimating","isVisible","setIsVisible","isEditing","setIsEditing","hasInitialized","setHasInitialized","formData","setFormData","title","authors","year","journal","abstract","keywords","doi","volume","pages","notes","useEffect","Array","isArray","requestAnimationFrame","handleSave","useCallback","updatedLiterature","prevData","newData","literature","map","lit","id","handleFieldChange","field","value","prev","handleClose","setTimeout","connectedNodes","useMemo","nodeIds","filter","conn","source","includes","target","node","extractedKeywords","Set","forEach","data","primary_diagnosis","add","toLowerCase","secondary_diagnoses","diag","chief_complaint","match","term","category","tags","tag","from","keyword","length","relatedLiterature","relevanceScore","searchText","join","item","sort","a","b","slice","filteredRelatedLiterature","filtered","_item$title","_item$authors","_item$journal","tabs","label","icon","FileText","Eye","StickyNote","Link2","badge","_jsx","AnimatePresence","mode","onExitComplete","children","motion","div","initial","animate","variants","className","onClick","_jsxs","e","stopPropagation","onAnimationComplete","onChange","placeholder","authorsString","authorsArray","split","author","trim","Boolean","handleAuthorsChange","_Fragment","User","size","Calendar","BookOpen","button","whileHover","whileTap","Save","X","Edit3","toUpperCase","tab","Icon","newTab","disabled","undefined","layout","layoutId","rows","index","pdf_url","href","rel","ExternalLink","Search","delay"],"sourceRoot":""}