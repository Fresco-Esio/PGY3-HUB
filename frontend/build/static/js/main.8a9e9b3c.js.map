{"version":3,"file":"static/js/main.8a9e9b3c.js","mappings":"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","sources":["components/LazyComponents.js","utils/floatingEdgeUtils.js","components/FloatingEdge.js","components/EnhancedEdge.js","components/ConnectionLine.js","components/OptimizedLoadingScreen.js","components/nodes/TopicNode.js","components/nodes/CaseNode.js","components/nodes/index.js","components/nodes/TaskNode.js","components/nodes/LiteratureNode.js","utils/performanceUtils.js","data/sampleLiteratureData.js","utils/sampleDataUtils.js","App.js","index.js","components/TopicModal.js","components/TaskModal.js","components/timeline/ModularAngularTimeline.js","components/CaseModal.js","../webpack/bootstrap","../webpack/runtime/chunk loaded","../webpack/runtime/create fake namespace object","../webpack/runtime/define property getters","../webpack/runtime/ensure chunk","../webpack/runtime/get javascript chunk filename","../webpack/runtime/get mini-css chunk filename","../webpack/runtime/global","../webpack/runtime/hasOwnProperty shorthand","../webpack/runtime/load script","../webpack/runtime/make namespace object","../webpack/runtime/node module decorator","../webpack/runtime/publicPath","../webpack/runtime/jsonp chunk loading","../webpack/startup"],"sourcesContent":["// Lazy loading component wrapper for performance optimization\nimport React, { Suspense, lazy } from 'react';\nimport { Loader2 } from 'lucide-react';\n\n// Loading fallback component\nconst LoadingSpinner = ({ message = \"Loading...\" }) => (\n  <div className=\"flex items-center justify-center p-8\">\n    <div className=\"flex flex-col items-center gap-2\">\n      <Loader2 className=\"w-6 h-6 animate-spin text-blue-600\" />\n      <span className=\"text-sm text-gray-600\">{message}</span>\n    </div>\n  </div>\n);\n\n// Lazy load components that aren't needed immediately\nexport const LazyRichTextEditor = lazy(() => import('./RichTextEditor'));\nexport const LazyTemplateManager = lazy(() => import('./TemplateManager'));\nexport const LazyLiteratureModal = lazy(() => import('./LiteratureModal'));\n\n// Lazy load modals for better initial load performance\nexport const LazyCaseModal = lazy(() => import('./CaseModal'));\nexport const LazyTopicModal = lazy(() => import('./TopicModal'));\nexport const LazyTaskModal = lazy(() => import('./TaskModal'));\n\n// HOC for wrapping lazy components with suspense\nexport const withLazyLoading = (LazyComponent, fallbackMessage) => (props) => (\n  <Suspense fallback={<LoadingSpinner message={fallbackMessage} />}>\n    <LazyComponent {...props} />\n  </Suspense>\n);\n\n// Pre-wrapped components ready to use\nexport const RichTextEditor = withLazyLoading(LazyRichTextEditor, \"Loading editor...\");\nexport const TemplateManager = withLazyLoading(LazyTemplateManager, \"Loading templates...\");\nexport const LiteratureModal = withLazyLoading(LazyLiteratureModal, \"Loading literature viewer...\");\n\n// Pre-wrapped modal components\nexport const CaseModal = withLazyLoading(LazyCaseModal, \"Loading case details...\");\nexport const TopicModal = withLazyLoading(LazyTopicModal, \"Loading topic details...\");\nexport const TaskModal = withLazyLoading(LazyTaskModal, \"Loading task details...\");\n","// Floating Edge Utilities for React Flow\n// Calculates intersection points between nodes for custom floating edges\n\n/**\n * Calculate the intersection point of a line with a rectangle\n * @param {Object} rect - Rectangle with x, y, width, height\n * @param {Object} center - Center point with x, y\n * @param {Object} point - External point with x, y\n * @returns {Object} Intersection point with x, y coordinates\n */\nfunction getIntersectionPoint(rect, center, point) {\n  const { x: rectX, y: rectY, width, height } = rect;\n  const { x: centerX, y: centerY } = center;\n  const { x: pointX, y: pointY } = point;\n\n  // Calculate rectangle bounds - no buffer as we want exact edges\n  const left = rectX;\n  const right = rectX + width;\n  const top = rectY;\n  const bottom = rectY + height;\n\n  // Direction vector from center to point\n  const dx = pointX - centerX;\n  const dy = pointY - centerY;\n\n  // Handle edge cases where the line is vertical or horizontal\n  if (Math.abs(dx) < 0.001) {\n    // Vertical line\n    return {\n      x: centerX,\n      y: dy > 0 ? bottom : top,\n      side: dy > 0 ? 'bottom' : 'top'\n    };\n  }\n\n  if (Math.abs(dy) < 0.001) {\n    // Horizontal line\n    return {\n      x: dx > 0 ? right : left,\n      y: centerY,\n      side: dx > 0 ? 'right' : 'left'\n    };\n  }\n\n  // Calculate slope and y-intercept\n  const slope = dy / dx;\n  const yIntercept = centerY - slope * centerX;\n\n  // Calculate intersection points with all four sides\n  const intersections = [];\n\n  // Left side (x = left)\n  const leftY = slope * left + yIntercept;\n  if (leftY >= top && leftY <= bottom) {\n    intersections.push({ x: left, y: leftY, side: 'left', distance: Math.hypot(left - centerX, leftY - centerY) });\n  }\n\n  // Right side (x = right)\n  const rightY = slope * right + yIntercept;\n  if (rightY >= top && rightY <= bottom) {\n    intersections.push({ x: right, y: rightY, side: 'right', distance: Math.hypot(right - centerX, rightY - centerY) });\n  }\n\n  // Top side (y = top)\n  const topX = (top - yIntercept) / slope;\n  if (topX >= left && topX <= right) {\n    intersections.push({ x: topX, y: top, side: 'top', distance: Math.hypot(topX - centerX, top - centerY) });\n  }\n\n  // Bottom side (y = bottom)\n  const bottomX = (bottom - yIntercept) / slope;\n  if (bottomX >= left && bottomX <= right) {\n    intersections.push({ x: bottomX, y: bottom, side: 'bottom', distance: Math.hypot(bottomX - centerX, bottom - centerY) });\n  }\n\n  // Find the intersection point that's in the correct direction\n  // and is closest to the center (to avoid picking the wrong side)\n  const validIntersections = intersections.filter(intersection => {\n    const intersectionDx = intersection.x - centerX;\n    const intersectionDy = intersection.y - centerY;\n    \n    // Check if the intersection is in the same direction as the target point\n    return (\n      (dx > 0 && intersectionDx >= 0) || (dx < 0 && intersectionDx <= 0)\n    ) && (\n      (dy > 0 && intersectionDy >= 0) || (dy < 0 && intersectionDy <= 0)\n    );\n  });\n\n  // Sort by distance and take the closest valid intersection\n  validIntersections.sort((a, b) => a.distance - b.distance);\n  return validIntersections[0] || { x: centerX, y: centerY, side: 'center' };\n}\n\n/**\n * Calculate the floating edge path between two nodes\n * @param {Object} sourceNode - Source node with position and measured dimensions\n * @param {Object} targetNode - Target node with position and measured dimensions\n * @param {Object} options - Optional configuration\n * @returns {Object} Edge path data with sourceX, sourceY, targetX, targetY\n */\nexport function getFloatingEdgePath(sourceNode, targetNode, options = {}) {\n  const {\n    sourcePosition = { x: 0, y: 0 },\n    targetPosition = { x: 0, y: 0 },\n    sourceWidth = 200,\n    sourceHeight = 100,\n    targetWidth = 200,\n    targetHeight = 100,\n    // Direct coordinates from React Flow (fallback)\n    sourceX,\n    sourceY,\n    targetX,\n    targetY,\n    offset = 0 // Default to zero offset to ensure edges connect to borders\n  } = options;\n  \n  // Use direct coordinates if provided and dimensions appear invalid\n  if (sourceX !== undefined && sourceY !== undefined && \n      targetX !== undefined && targetY !== undefined &&\n      (sourceWidth <= 10 || targetWidth <= 10)) {\n    return {\n      sourceX, \n      sourceY, \n      targetX, \n      targetY,\n      sourceSide: 'direct',\n      targetSide: 'direct'\n    };\n  }\n\n  // Calculate node centers\n  const sourceCenter = {\n    x: sourcePosition.x + sourceWidth / 2,\n    y: sourcePosition.y + sourceHeight / 2\n  };\n\n  const targetCenter = {\n    x: targetPosition.x + targetWidth / 2,\n    y: targetPosition.y + targetHeight / 2\n  };\n\n  // Create rectangle objects for intersection calculation\n  const sourceRect = {\n    x: sourcePosition.x,\n    y: sourcePosition.y,\n    width: sourceWidth,\n    height: sourceHeight\n  };\n\n  const targetRect = {\n    x: targetPosition.x,\n    y: targetPosition.y,\n    width: targetWidth,\n    height: targetHeight\n  };\n\n  // Calculate intersection points\n  const sourceIntersection = getIntersectionPoint(sourceRect, sourceCenter, targetCenter);\n  const targetIntersection = getIntersectionPoint(targetRect, targetCenter, sourceCenter);\n\n  // Calculate vector from source to target center\n  const dx = targetCenter.x - sourceCenter.x;\n  const dy = targetCenter.y - sourceCenter.y;\n  const distance = Math.sqrt(dx * dx + dy * dy);\n\n  // Add a stronger extension to ensure visual connection with the node borders\n  // This is done by extending the line in both directions\n  if (distance > 0) {\n    const unitX = dx / distance;\n    const unitY = dy / distance;\n    \n    // Extend lines by 3 pixels to ensure visual connection\n    // Using a larger value for more reliability across different node types\n    const extensionAmount = 3;\n\n    // Extend the line outward from the source node\n    sourceIntersection.x -= unitX * extensionAmount;\n    sourceIntersection.y -= unitY * extensionAmount;\n    \n    // Extend the line outward from the target node\n    targetIntersection.x += unitX * extensionAmount;\n    targetIntersection.y += unitY * extensionAmount;\n    \n    // Apply additional offset if needed\n    if (offset > 0) {\n      sourceIntersection.x += unitX * offset;\n      sourceIntersection.y += unitY * offset;\n      targetIntersection.x -= unitX * offset;\n      targetIntersection.y -= unitY * offset;\n    }\n  }\n\n  // Debug flag to help diagnose intersection issues\n  const debug = options.debug || false;\n  if (debug) {\n    console.log('Source Node:', sourceNode);\n    console.log('Target Node:', targetNode);\n    console.log('Source Intersection:', sourceIntersection);\n    console.log('Target Intersection:', targetIntersection);\n  }\n\n  return {\n    sourceX: sourceIntersection.x,\n    sourceY: sourceIntersection.y,\n    targetX: targetIntersection.x,\n    targetY: targetIntersection.y,\n    sourceSide: sourceIntersection.side,\n    targetSide: targetIntersection.side\n  };\n}\n\n/**\n * Generate SVG path string for a bezier curve between two points\n * @param {number} sourceX - Source X coordinate\n * @param {number} sourceY - Source Y coordinate\n * @param {number} targetX - Target X coordinate\n * @param {number} targetY - Target Y coordinate\n * @param {number} curvature - Curve intensity (0-1)\n * @returns {string} SVG path string\n */\nexport function getBezierPath(sourceX, sourceY, targetX, targetY, curvature = 0.25) {\n  const dx = targetX - sourceX;\n  const dy = targetY - sourceY;\n  \n  // Calculate control points for a smooth bezier curve\n  const controlOffset = Math.sqrt(dx * dx + dy * dy) * curvature;\n  \n  const controlX1 = sourceX + dx * 0.5 + dy * controlOffset * 0.5;\n  const controlY1 = sourceY + dy * 0.5 - dx * controlOffset * 0.5;\n  \n  const controlX2 = sourceX + dx * 0.5 - dy * controlOffset * 0.5;\n  const controlY2 = sourceY + dy * 0.5 + dx * controlOffset * 0.5;\n  \n  return `M ${sourceX},${sourceY} C ${controlX1},${controlY1} ${controlX2},${controlY2} ${targetX},${targetY}`;\n}\n\n/**\n * Calculate the center point of an edge path\n * @param {number} sourceX - Source X coordinate\n * @param {number} sourceY - Source Y coordinate\n * @param {number} targetX - Target X coordinate\n * @param {number} targetY - Target Y coordinate\n * @returns {Object} Center point with x, y coordinates\n */\nexport function getEdgeCenter(sourceX, sourceY, targetX, targetY) {\n  return {\n    x: (sourceX + targetX) / 2,\n    y: (sourceY + targetY) / 2\n  };\n}\n\n/**\n * Calculate marker end position for arrow heads\n * @param {number} sourceX - Source X coordinate\n * @param {number} sourceY - Source Y coordinate\n * @param {number} targetX - Target X coordinate\n * @param {number} targetY - Target Y coordinate\n * @returns {string} Transform string for marker positioning\n */\nexport function getMarkerEnd(sourceX, sourceY, targetX, targetY) {\n  const dx = targetX - sourceX;\n  const dy = targetY - sourceY;\n  const angle = Math.atan2(dy, dx) * (180 / Math.PI);\n  \n  return `url(#arrowhead) rotate(${angle} ${targetX} ${targetY})`;\n}\n","import React, { memo, useMemo, useEffect } from 'react';\nimport { BaseEdge, useReactFlow } from '@xyflow/react';\nimport { getFloatingEdgePath } from '../utils/floatingEdgeUtils';\n\n/**\n * High-Performance Floating Edge Component\n * \n * This is an optimized edge component that calculates intersection points\n * between nodes and renders a direct straight line between them. It's \n * specifically designed for immediate visual feedback during node dragging.\n * \n * Features:\n * - Direct path calculation using geometry\n * - Memoized path computation for performance\n * - No transition delays or animations\n * - Minimal re-rendering\n */\nconst FloatingEdge = memo(({\n  id,\n  source,\n  target,\n  sourceX,\n  sourceY,\n  targetX,\n  targetY,\n  sourcePosition,\n  targetPosition,\n  style = {},\n  markerEnd,\n  markerStart,\n  data,\n  ...props\n}) => {\n  const { getNode } = useReactFlow();\n  \n  // Safely get nodes outside of useMemo to avoid scope issues\n  let sourceNode, targetNode;\n  try {\n    sourceNode = getNode(source);\n    targetNode = getNode(target);\n  } catch (error) {\n    // Nodes not available, will use fallback\n    sourceNode = null;\n    targetNode = null;\n  }\n  \n  // Memoize the edge path calculation for better performance\n  const { edgePath, labelX, labelY } = useMemo(() => {\n    // During animations or rapid updates, use simple direct paths\n    if (data?.__isAnimating || data?.__forceUpdate) {\n      return {\n        edgePath: `M${sourceX},${sourceY} L${targetX},${targetY}`,\n        labelX: (sourceX + targetX) / 2,\n        labelY: (sourceY + targetY) / 2\n      };\n    }\n\n    // Default fallback if nodes aren't available\n    if (!sourceNode || !targetNode) {\n      return {\n        edgePath: `M${sourceX},${sourceY} L${targetX},${targetY}`,\n        labelX: (sourceX + targetX) / 2,\n        labelY: (sourceY + targetY) / 2\n      };\n    }\n\n    try {\n      // Safely check if we have enough information to calculate an accurate path\n      const sourceHasDimensions = Boolean(\n        sourceNode.width || \n        sourceNode.dimensions?.width || \n        sourceNode.data?.width || \n        sourceNode.style?.width\n      );\n      \n      const targetHasDimensions = Boolean(\n        targetNode.width || \n        targetNode.dimensions?.width || \n        targetNode.data?.width || \n        targetNode.style?.width\n      );\n      \n      // If we don't have dimensions, use the provided coordinates directly\n      if (!sourceHasDimensions || !targetHasDimensions) {\n        return {\n          edgePath: `M${sourceX},${sourceY} L${targetX},${targetY}`,\n          labelX: (sourceX + targetX) / 2,\n          labelY: (sourceY + targetY) / 2\n        };\n      }\n\n      // Safe dimension extraction with fallbacks\n      const getNodeDimensions = (node) => {\n        const defaultWidth = node.type === 'topic' ? 180 : 200;\n        const defaultHeight = node.type === 'topic' ? 50 : 100;\n        \n        return {\n          width: node.width || \n                 node.dimensions?.width || \n                 node.data?.width || \n                 defaultWidth,\n          height: node.height || \n                  node.dimensions?.height || \n                  node.data?.height || \n                  defaultHeight\n        };\n      };\n      \n      const sourceDims = getNodeDimensions(sourceNode);\n      const targetDims = getNodeDimensions(targetNode);\n\n      // Calculate floating edge with proper intersections\n      const floatingEdgeData = getFloatingEdgePath(\n        sourceNode,\n        targetNode,\n        {\n          // Use React Flow's sourceX/Y and targetX/Y if available\n          sourcePosition: {\n            x: sourceNode.positionAbsolute?.x || sourceNode.position.x,\n            y: sourceNode.positionAbsolute?.y || sourceNode.position.y\n          },\n          targetPosition: {\n            x: targetNode.positionAbsolute?.x || targetNode.position.x,\n            y: targetNode.positionAbsolute?.y || targetNode.position.y\n          },\n          // Fallback coordinates - use the direct ones provided by React Flow\n          sourceX: sourceX,\n          sourceY: sourceY,\n          targetX: targetX,\n          targetY: targetY,\n          sourceWidth: sourceDims.width,\n          sourceHeight: sourceDims.height,\n          targetWidth: targetDims.width,\n          targetHeight: targetDims.height,\n          debug: false // Set to true to debug connection issues\n        }\n      );\n\n      const { \n        sourceX: sx, \n        sourceY: sy, \n        targetX: tx, \n        targetY: ty \n      } = floatingEdgeData;\n      \n      // Return direct line path\n      return {\n        edgePath: `M ${sx},${sy} L ${tx},${ty}`,\n        labelX: (sx + tx) / 2,\n        labelY: (sy + ty) / 2\n      };\n    } catch (error) {\n      console.warn('FloatingEdge calculation error:', error);\n      return {\n        edgePath: `M${sourceX},${sourceY} L${targetX},${targetY}`,\n        labelX: (sourceX + targetX) / 2,\n        labelY: (sourceY + targetY) / 2\n      };\n    }\n  }, [\n    source,\n    target,\n    sourceX, \n    sourceY, \n    targetX, \n    targetY,\n    data?.__forceUpdate,\n    data?.__isAnimating,\n    // Safe node dimension tracking\n    sourceNode?.id,\n    targetNode?.id,\n    sourceNode?.width,\n    sourceNode?.height,\n    targetNode?.width,\n    targetNode?.height\n  ]);\n\n  return (\n    <BaseEdge\n      id={id}\n      path={edgePath}\n      labelX={labelX}\n      labelY={labelY}\n      style={{\n        stroke: '#64748b',\n        strokeWidth: 3, // Thicker line for better visibility\n        strokeLinecap: 'round', // Round ends for smoother appearance\n        strokeOpacity: 0.95, // Slightly more opaque\n        transition: 'none', // Critical: disable all CSS transitions\n        ...style\n      }}\n      markerEnd={markerEnd}\n      markerStart={markerStart}\n      // Remove {...props} to prevent React Flow-specific props from reaching DOM\n    />\n  );\n}, (prevProps, nextProps) => {\n  // Optimize re-rendering with precise dependency checking\n  return (\n    prevProps.sourceX === nextProps.sourceX &&\n    prevProps.sourceY === nextProps.sourceY &&\n    prevProps.targetX === nextProps.targetX &&\n    prevProps.targetY === nextProps.targetY &&\n    prevProps.source === nextProps.source &&\n    prevProps.target === nextProps.target &&\n    prevProps.data?.__forceUpdate === nextProps.data?.__forceUpdate\n  );\n});\n\nexport default FloatingEdge;\n\n\n","import React, { memo } from 'react';\nimport { BaseEdge, getBezierPath, EdgeLabelRenderer } from '@xyflow/react';\n\n/**\n * Enhanced Edge Component with Label Support\n * \n * This edge component supports labels and uses proper prop destructuring\n * to prevent React Flow-specific props from reaching DOM elements.\n */\nconst EnhancedEdge = memo(({\n  id,\n  source,\n  target,\n  sourceX,\n  sourceY,\n  targetX,\n  targetY,\n  sourcePosition,\n  targetPosition,\n  style = {},\n  markerEnd,\n  markerStart,\n  label,\n  // Destructure React Flow-specific props to prevent them from reaching DOM\n  sourceHandleId,\n  targetHandleId,\n  data,\n  selected,\n  animated,\n  // Don't pass any other props to BaseEdge\n}) => {\n  const [edgePath, labelX, labelY] = getBezierPath({\n    sourceX,\n    sourceY,\n    sourcePosition,\n    targetX,\n    targetY,\n    targetPosition,\n  });\n\n  return (\n    <>\n      <BaseEdge\n        id={id}\n        path={edgePath}\n        style={style}\n        markerEnd={markerEnd}\n        markerStart={markerStart}\n        // Only pass valid BaseEdge props, no React Flow-specific props\n      />\n      {label && (\n        <EdgeLabelRenderer>\n          <div\n            style={{\n              position: 'absolute',\n              transform: `translate(-50%, -50%) translate(${labelX}px,${labelY}px)`,\n              fontSize: 12,\n              pointerEvents: 'all',\n            }}\n            className=\"nodrag nopan bg-white px-2 py-1 rounded shadow border text-xs\"\n          >\n            {label}\n          </div>\n        </EdgeLabelRenderer>\n      )}\n    </>\n  );\n});\n\nEnhancedEdge.displayName = 'EnhancedEdge';\n\nexport default EnhancedEdge;\n","import React from 'react';\n\n/**\n * Custom connection line component for React Flow.\n * Shows a preview of the connection as the user drags to create a new edge.\n * Styled to match our floating edge appearance but with enhanced visual feedback.\n */\nconst ConnectionLine = ({\n  fromX,\n  fromY,\n  toX,\n  toY,\n  connectionLineStyle,\n}) => {\n  // Create a straight path from source to target\n  const path = `M ${fromX},${fromY} L ${toX},${toY}`;\n  \n  // Apply our custom styling combined with any passed styling\n  const defaultStyle = {\n    stroke: '#3b82f6', // Bright blue for visibility\n    strokeWidth: 3.5,\n    strokeLinecap: 'round',\n    strokeDasharray: '5,3', \n    filter: 'drop-shadow(0 0 6px rgba(59, 130, 246, 0.6))',\n    animation: 'flowingDash 1s linear infinite',\n  };\n\n  // Merge the default style with any props passed in\n  const style = { ...defaultStyle, ...connectionLineStyle };\n\n  return (\n    <g>\n      {/* Main visible connection line */}\n      <path\n        d={path}\n        fill=\"none\"\n        style={style}\n      />\n      \n      {/* Larger invisible path for easier interaction */}\n      <path\n        d={path}\n        fill=\"none\"\n        stroke=\"transparent\"\n        strokeWidth={15}\n        style={{ pointerEvents: 'stroke' }}\n      />\n    </g>\n  );\n};\n\nexport default ConnectionLine;\n","// Optimized loading screen component\nimport React from 'react';\nimport { Loader2, Brain, Sparkles } from 'lucide-react';\n\nconst OptimizedLoadingScreen = ({ message = \"Loading your mind map...\", progress = null }) => {\n  return (\n    <div className=\"fixed inset-0 bg-gradient-to-br from-blue-50 to-purple-50 flex items-center justify-center z-50\">\n      <div className=\"text-center\">\n        {/* Animated brain icon */}\n        <div className=\"relative mb-6\">\n          <Brain className=\"w-16 h-16 text-blue-600 mx-auto animate-pulse\" />\n          <Sparkles className=\"w-6 h-6 text-purple-500 absolute -top-2 -right-2 animate-bounce\" />\n        </div>\n        \n        {/* Loading spinner */}\n        <div className=\"flex items-center justify-center gap-3 mb-4\">\n          <Loader2 className=\"w-6 h-6 animate-spin text-blue-600\" />\n          <span className=\"text-lg font-medium text-gray-700\">{message}</span>\n        </div>\n        \n        {/* Progress bar if provided */}\n        {progress !== null && (\n          <div className=\"w-64 bg-gray-200 rounded-full h-2 mx-auto mb-2\">\n            <div \n              className=\"bg-blue-600 h-2 rounded-full transition-all duration-300 ease-out\" \n              style={{ width: `${Math.max(0, Math.min(100, progress))}%` }}\n            />\n          </div>\n        )}\n        \n        {/* Helpful tips during loading */}\n        <div className=\"text-sm text-gray-500 max-w-md mx-auto mt-4\">\n          <p>💡 Tip: Use the force layout button to auto-arrange your nodes</p>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default OptimizedLoadingScreen;\n","import React, { useState, useEffect } from 'react';\nimport { Handle, Position } from '@xyflow/react';\nimport { Brain, Tag, Clock, X } from 'lucide-react';\n\nconst TopicNode = ({ data, selected }) => {\n  const [isVisible, setIsVisible] = useState(data.skipAnimation || false);\n  \n  // Entry animation - only if not skipping animations\n  useEffect(() => {\n    if (!data.skipAnimation) {\n      const timer = setTimeout(() => setIsVisible(true), 100);\n      return () => clearTimeout(timer);\n    }\n  }, [data.skipAnimation]);\n\n  const completionPercentage = data.flashcard_count > 0\n    ? ((data.completed_flashcards || 0) / data.flashcard_count) * 100\n    : 0;\n\n  return (\n    <div\n      className={`group px-4 py-3 rounded-xl border-2 transition-all duration-700 min-w-[220px] relative hover:scale-105 backdrop-blur-sm ${selected\n          ? 'border-teal-400 scale-105 ring-4 ring-teal-200 animate-pulse'\n          : 'border-transparent hover:border-teal-300 hover:ring-2 hover:ring-teal-100'\n        } ${isVisible ? 'opacity-100 scale-100 translate-y-0' : 'opacity-0 scale-75 translate-y-8'}`}\n      style={{\n        backgroundColor: data.color || '#3B82F6',\n        color: 'white',\n        boxShadow: selected\n          ? `0 0 20px ${data.color || '#3B82F6'}40, 0 8px 32px rgba(0,0,0,0.3)`\n          : `0 4px 20px ${data.color || '#3B82F6'}20, 0 4px 16px rgba(0,0,0,0.15)`,\n        transition: 'all 0.7s cubic-bezier(0.34, 1.56, 0.64, 1), transform 0.3s ease',\n        filter: selected ? 'none' : `drop-shadow(0 4px 12px rgba(0,0,0,0.2))`\n      }}\n    >\n      {/* Connection Hotspots - Stacked source and target handles for all four sides */}\n      {/* Top handles */}\n      <Handle\n        id=\"top\"\n        type=\"source\"\n        position={Position.Top}\n        className=\"w-3 h-3 !bg-blue-500 transition-all duration-300 hover:scale-150 cursor-pointer opacity-0 group-hover:opacity-100\"\n        style={{\n          left: '50%',\n          transform: 'translateX(-50%)',\n          zIndex: 2\n        }}\n        isConnectable={true}\n      />\n      <Handle\n        id=\"top\"\n        type=\"target\"\n        position={Position.Top}\n        className=\"w-3 h-3 !bg-blue-500 transition-all duration-300 hover:scale-150 cursor-pointer opacity-0 group-hover:opacity-100\"\n        style={{\n          left: '50%',\n          transform: 'translateX(-50%)',\n          zIndex: 1\n        }}\n        isConnectable={true}\n      />\n\n      {/* Right handles */}\n      <Handle\n        id=\"right\"\n        type=\"source\"\n        position={Position.Right}\n        className=\"w-3 h-3 !bg-blue-500 transition-all duration-300 hover:scale-150 cursor-pointer opacity-0 group-hover:opacity-100\"\n        style={{\n          top: '50%',\n          transform: 'translateY(-50%)',\n          zIndex: 2\n        }}\n        isConnectable={true}\n      />\n      <Handle\n        id=\"right\"\n        type=\"target\"\n        position={Position.Right}\n        className=\"w-3 h-3 !bg-blue-500 transition-all duration-300 hover:scale-150 cursor-pointer opacity-0 group-hover:opacity-100\"\n        style={{\n          top: '50%',\n          transform: 'translateY(-50%)',\n          zIndex: 1\n        }}\n        isConnectable={true}\n      />\n\n      {/* Bottom handles */}\n      <Handle\n        id=\"bottom\"\n        type=\"source\"\n        position={Position.Bottom}\n        className=\"w-3 h-3 !bg-blue-500 transition-all duration-300 hover:scale-150 cursor-pointer opacity-0 group-hover:opacity-100\"\n        style={{\n          left: '50%',\n          transform: 'translateX(-50%)',\n          zIndex: 2\n        }}\n        isConnectable={true}\n      />\n      <Handle\n        id=\"bottom\"\n        type=\"target\"\n        position={Position.Bottom}\n        className=\"w-3 h-3 !bg-blue-500 transition-all duration-300 hover:scale-150 cursor-pointer opacity-0 group-hover:opacity-100\"\n        style={{\n          left: '50%',\n          transform: 'translateX(-50%)',\n          zIndex: 1\n        }}\n        isConnectable={true}\n      />\n\n      {/* Left handles */}\n      <Handle\n        id=\"left\"\n        type=\"source\"\n        position={Position.Left}\n        className=\"w-3 h-3 !bg-blue-500 transition-all duration-300 hover:scale-150 cursor-pointer opacity-0 group-hover:opacity-100\"\n        style={{\n          top: '50%',\n          transform: 'translateY(-50%)',\n          zIndex: 2\n        }}\n        isConnectable={true}\n      />\n      <Handle\n        id=\"left\"\n        type=\"target\"\n        position={Position.Left}\n        className=\"w-3 h-3 !bg-blue-500 transition-all duration-300 hover:scale-150 cursor-pointer opacity-0 group-hover:opacity-100\"\n        style={{\n          top: '50%',\n          transform: 'translateY(-50%)',\n          zIndex: 1\n        }}\n        isConnectable={true}\n      />\n\n      {/* Priority indicator */}\n      {data.priority && (\n        <div className=\"absolute -top-2 -right-2\">\n          <div className={`w-6 h-6 rounded-full flex items-center justify-center text-xs font-bold border-2 border-white ${data.priority === 'high' ? 'bg-red-500' :\n              data.priority === 'medium' ? 'bg-yellow-500' : 'bg-green-500'\n            }`}>\n            {data.priority === 'high' ? '!' : data.priority === 'medium' ? '•' : '✓'}\n          </div>\n        </div>\n      )}\n\n      <div className=\"flex items-center gap-2 mb-2\">\n        <div className=\"flex items-center gap-1\">\n          <Brain size={16} className=\"drop-shadow-sm\" />\n          {data.tags && data.tags.length > 0 && (\n            <Tag size={12} className=\"opacity-75\" />\n          )}\n        </div>\n        <div className=\"font-semibold text-sm truncate flex-1\">{data.label}</div>\n        {data.onDelete && (\n          <button\n            onClick={(e) => {\n              // Don't stop propagation immediately - delay the action to allow double-clicks\n              e.preventDefault(); // Prevent any default behavior but allow bubbling\n              \n              // Use a longer timeout to distinguish between single click and double-click\n              const deleteTimeout = setTimeout(() => {\n                // Only execute delete if this wasn't part of a double-click sequence\n                e.stopPropagation(); // Stop propagation only when actually deleting\n                data.onDelete();\n              }, 300); // Increased timeout\n              \n              // Store timeout ID on the button to cancel it if double-click occurs\n              e.currentTarget.deleteTimeout = deleteTimeout;\n            }}\n            onDoubleClick={(e) => {\n              // Cancel the pending delete action\n              if (e.currentTarget.deleteTimeout) {\n                clearTimeout(e.currentTarget.deleteTimeout);\n                e.currentTarget.deleteTimeout = null;\n              }\n              \n              // Don't prevent default - allow the double-click to bubble up for modal opening\n              // The parent node will handle the double-click to open the modal\n            }}\n            className=\"ml-auto p-1 hover:bg-white hover:bg-opacity-20 rounded transition-all duration-200 hover:scale-110 opacity-70 hover:opacity-100\"\n          >\n            <X size={12} />\n          </button>\n        )}\n      </div>\n\n      <div className=\"text-xs opacity-90 mb-2\">{data.category}</div>\n\n      {/* Enhanced progress display */}\n      {data.flashcard_count > 0 && (\n        <div className=\"text-xs mt-2 space-y-1\">\n          <div className=\"flex justify-between items-center\">\n            <span className=\"opacity-90\">{data.completed_flashcards}/{data.flashcard_count} flashcards</span>\n            <span className=\"font-semibold\">{Math.round(completionPercentage)}%</span>\n          </div>\n          <div className=\"w-full bg-white bg-opacity-20 rounded-full h-2 overflow-hidden\">\n            <div\n              className=\"h-full bg-white rounded-full transition-all duration-1000 ease-out\"\n              style={{ width: `${completionPercentage}%` }}\n            />\n          </div>\n        </div>\n      )}\n\n      {/* Tags display */}\n      {data.tags && data.tags.length > 0 && (\n        <div className=\"flex flex-wrap gap-1 mt-2\">\n          {data.tags.slice(0, 3).map((tag, index) => (\n            <span\n              key={index}\n              className=\"px-2 py-1 bg-white bg-opacity-20 rounded-full text-xs\"\n            >\n              {tag}\n            </span>\n          ))}\n          {data.tags.length > 3 && (\n            <span className=\"px-2 py-1 bg-white bg-opacity-20 rounded-full text-xs\">\n              +{data.tags.length - 3}\n            </span>\n          )}\n        </div>\n      )}\n\n      {/* Last updated indicator */}\n      {data.updated_at && (\n        <div className=\"absolute bottom-1 right-1 opacity-50\">\n          <Clock size={10} />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default TopicNode;","import React, { useState, useEffect } from 'react';\nimport { Handle, Position } from '@xyflow/react';\nimport { Users, Calendar, CheckSquare, Clock, X, AlertCircle } from 'lucide-react';\n\nconst CaseNode = ({ data, selected }) => {\n  const [isVisible, setIsVisible] = useState(data.skipAnimation || false);\n  \n  // Entry animation with slight delay for staggered effect - only if not skipping animations\n  useEffect(() => {\n    if (!data.skipAnimation) {\n      const timer = setTimeout(() => setIsVisible(true), 150);\n      return () => clearTimeout(timer);\n    }\n  }, [data.skipAnimation]);\n\n  const getStatusColor = (status) => {\n    switch (status) {\n      case 'active': return 'bg-green-100 text-green-800 border-green-200';\n      case 'archived': return 'bg-gray-100 text-gray-800 border-gray-200';\n      case 'follow_up': return 'bg-yellow-100 text-yellow-800 border-yellow-200';\n      default: return 'bg-blue-100 text-blue-800 border-blue-200';\n    }\n  };\n\n  const getUrgencyLevel = (data) => {\n    // Simple urgency calculation based on keywords\n    const urgentKeywords = ['emergency', 'urgent', 'crisis', 'acute', 'severe'];\n    const complaint = data.chief_complaint?.toLowerCase() || '';\n    const diagnosis = data.diagnosis?.toLowerCase() || '';\n\n    if (urgentKeywords.some(keyword => complaint.includes(keyword) || diagnosis.includes(keyword))) {\n      return 'high';\n    }\n    return 'normal';\n  };\n\n  const urgency = getUrgencyLevel(data);\n\n  return (\n    <div\n      className={`group px-4 py-3 rounded-xl shadow-lg border-2 transition-all duration-600 min-w-[220px] bg-white relative hover:shadow-2xl transform hover:scale-105 ${selected\n          ? 'border-blue-400 shadow-xl scale-105 ring-4 ring-blue-200'\n          : 'border-gray-200 hover:border-blue-300 hover:ring-2 hover:ring-blue-100'\n        } ${urgency === 'high' ? 'ring-2 ring-red-300' : ''} ${isVisible ? 'opacity-100 scale-100 translate-y-0 rotate-0' : 'opacity-0 scale-90 translate-y-6 rotate-1'}`}\n      style={{\n        transition: 'all 0.6s cubic-bezier(0.25, 0.46, 0.45, 0.94), transform 0.3s ease'\n      }}\n    >\n      {/* Connection Hotspots - Stacked source and target handles for all four sides */}\n      {/* Top handles */}\n      <Handle\n        id=\"top\"\n        type=\"source\"\n        position={Position.Top}\n        className=\"w-3 h-3 !bg-blue-500 transition-all duration-300 hover:scale-150 cursor-pointer opacity-0 group-hover:opacity-100\"\n        style={{\n          left: '50%',\n          transform: 'translateX(-50%)',\n          zIndex: 2\n        }}\n        isConnectable={true}\n      />\n      <Handle\n        id=\"top\"\n        type=\"target\"\n        position={Position.Top}\n        className=\"w-3 h-3 !bg-blue-500 transition-all duration-300 hover:scale-150 cursor-pointer opacity-0 group-hover:opacity-100\"\n        style={{\n          left: '50%',\n          transform: 'translateX(-50%)',\n          zIndex: 1\n        }}\n        isConnectable={true}\n      />\n\n      {/* Right handles */}\n      <Handle\n        id=\"right\"\n        type=\"source\"\n        position={Position.Right}\n        className=\"w-3 h-3 !bg-blue-500 transition-all duration-300 hover:scale-150 cursor-pointer opacity-0 group-hover:opacity-100\"\n        style={{\n          top: '50%',\n          transform: 'translateY(-50%)',\n          zIndex: 2\n        }}\n        isConnectable={true}\n      />\n      <Handle\n        id=\"right\"\n        type=\"target\"\n        position={Position.Right}\n        className=\"w-3 h-3 !bg-blue-500 transition-all duration-300 hover:scale-150 cursor-pointer opacity-0 group-hover:opacity-100\"\n        style={{\n          top: '50%',\n          transform: 'translateY(-50%)',\n          zIndex: 1\n        }}\n        isConnectable={true}\n      />\n\n      {/* Bottom handles */}\n      <Handle\n        id=\"bottom\"\n        type=\"source\"\n        position={Position.Bottom}\n        className=\"w-3 h-3 !bg-blue-500 transition-all duration-300 hover:scale-150 cursor-pointer opacity-0 group-hover:opacity-100\"\n        style={{\n          left: '50%',\n          transform: 'translateX(-50%)',\n          zIndex: 2\n        }}\n        isConnectable={true}\n      />\n      <Handle\n        id=\"bottom\"\n        type=\"target\"\n        position={Position.Bottom}\n        className=\"w-3 h-3 !bg-blue-500 transition-all duration-300 hover:scale-150 cursor-pointer opacity-0 group-hover:opacity-100\"\n        style={{\n          left: '50%',\n          transform: 'translateX(-50%)',\n          zIndex: 1\n        }}\n        isConnectable={true}\n      />\n\n      {/* Left handles */}\n      <Handle\n        id=\"left\"\n        type=\"source\"\n        position={Position.Left}\n        className=\"w-3 h-3 !bg-blue-500 transition-all duration-300 hover:scale-150 cursor-pointer opacity-0 group-hover:opacity-100\"\n        style={{\n          top: '50%',\n          transform: 'translateY(-50%)',\n          zIndex: 2\n        }}\n        isConnectable={true}\n      />\n      <Handle\n        id=\"left\"\n        type=\"target\"\n        position={Position.Left}\n        className=\"w-3 h-3 !bg-blue-500 transition-all duration-300 hover:scale-150 cursor-pointer opacity-0 group-hover:opacity-100\"\n        style={{\n          top: '50%',\n          transform: 'translateY(-50%)',\n          zIndex: 1\n        }}\n        isConnectable={true}\n      />\n\n      {/* Urgency indicator */}\n      {urgency === 'high' && (\n        <div className=\"absolute -top-2 -right-2\">\n          <div className=\"w-6 h-6 bg-red-500 rounded-full flex items-center justify-center border-2 border-white animate-pulse\">\n            <AlertCircle size={14} className=\"text-white\" />\n          </div>\n        </div>\n      )}\n\n      <div className=\"flex items-center gap-2 mb-2\">\n        <div className=\"flex items-center gap-1\">\n          <Users size={16} className=\"text-blue-600\" />\n          {data.linked_topics && data.linked_topics.length > 0 && (\n            <div className=\"text-xs bg-blue-100 text-blue-600 px-1 rounded\">\n              {data.linked_topics.length}\n            </div>\n          )}\n        </div>\n        <div className=\"font-semibold text-sm text-gray-800 truncate flex-1\">{data.label}</div>\n        {data.onDelete && (\n          <button\n            onClick={(e) => {\n              // Don't stop propagation immediately - delay the action to allow double-clicks\n              e.preventDefault(); // Prevent any default behavior but allow bubbling\n              \n              // Use a longer timeout to distinguish between single click and double-click\n              const deleteTimeout = setTimeout(() => {\n                // Only execute delete if this wasn't part of a double-click sequence\n                e.stopPropagation(); // Stop propagation only when actually deleting\n                data.onDelete();\n              }, 300); // Increased timeout\n              \n              // Store timeout ID on the button to cancel it if double-click occurs\n              e.currentTarget.deleteTimeout = deleteTimeout;\n            }}\n            onDoubleClick={(e) => {\n              // Cancel the pending delete action\n              if (e.currentTarget.deleteTimeout) {\n                clearTimeout(e.currentTarget.deleteTimeout);\n                e.currentTarget.deleteTimeout = null;\n              }\n              \n              // Don't prevent default - allow the double-click to bubble up for modal opening\n              // The parent node will handle the double-click to open the modal\n            }}\n            className=\"ml-auto p-1 hover:bg-gray-200 rounded transition-all duration-200 hover:scale-110 opacity-70 hover:opacity-100\"\n          >\n            <X size={12} />\n          </button>\n        )}\n      </div>\n\n      <div className=\"text-xs text-gray-600 mb-2 truncate\">{data.diagnosis}</div>\n\n      {/* Enhanced patient info */}\n      <div className=\"space-y-1\">\n        {data.age && (\n          <div className=\"text-xs text-blue-600 flex items-center gap-1\">\n            <Calendar size={10} />\n            Age: {data.age}\n          </div>\n        )}\n\n        {/* Status badge */}\n        {data.status && (\n          <span className={`inline-block px-2 py-1 rounded-full text-xs border ${getStatusColor(data.status)}`}>\n            {data.status}\n          </span>\n        )}\n      </div>\n\n      {/* Progress indicators */}\n      {data.tasks_count && data.tasks_count > 0 && (\n        <div className=\"mt-2 text-xs text-gray-500 flex items-center gap-1\">\n          <CheckSquare size={10} />\n          {data.completed_tasks || 0}/{data.tasks_count} tasks\n        </div>\n      )}\n\n      {/* Last updated indicator */}\n      {data.updated_at && (\n        <div className=\"absolute bottom-1 right-1 opacity-30\">\n          <Clock size={10} />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default CaseNode;","// Central export for all node components\nexport { default as TopicNode } from './TopicNode';\nexport { default as CaseNode } from './CaseNode';\nexport { default as TaskNode } from './TaskNode';\nexport { default as LiteratureNode } from './LiteratureNode';\n\n// Node types configuration\nimport TopicNode from './TopicNode';\nimport CaseNode from './CaseNode';\nimport TaskNode from './TaskNode';\nimport LiteratureNode from './LiteratureNode';\n\nexport const nodeTypes = {\n  topic: TopicNode,\n  case: CaseNode,\n  task: TaskNode,\n  literature: LiteratureNode,\n};","import React, { useState, useEffect } from 'react';\nimport { Handle, Position } from '@xyflow/react';\nimport { CheckSquare, X } from 'lucide-react';\n\nconst TaskNode = ({ data, selected }) => {\n  const [isVisible, setIsVisible] = useState(data.skipAnimation || false);\n  \n  // Entry animation with different timing for variety - only if not skipping animations\n  useEffect(() => {\n    if (!data.skipAnimation) {\n      const timer = setTimeout(() => setIsVisible(true), 200);\n      return () => clearTimeout(timer);\n    }\n  }, [data.skipAnimation]);\n\n  const statusClasses = {\n    pending: 'bg-yellow-500',\n    in_progress: 'bg-blue-600',\n    completed: 'bg-green-700 opacity-60'\n  };\n\n  return (\n    <div\n      className={`group px-4 py-3 rounded-xl shadow-lg border-2 transition-all duration-500 min-w-[200px] text-white relative hover:shadow-2xl transform hover:scale-105 ${selected\n          ? 'border-yellow-400 shadow-xl scale-105 ring-4 ring-yellow-200'\n          : 'border-transparent hover:border-yellow-300 hover:ring-2 hover:ring-yellow-100'\n        } ${statusClasses[data.status] || 'bg-gray-500'} ${isVisible ? 'opacity-100 scale-100 translate-x-0' : 'opacity-0 scale-85 -translate-x-4'}`}\n      style={{\n        transition: 'all 0.5s cubic-bezier(0.68, -0.55, 0.265, 1.55), transform 0.3s ease'\n      }}\n    >\n      {/* Connection Hotspots - Stacked source and target handles for all four sides */}\n      {/* Top handles */}\n      <Handle\n        id=\"top\"\n        type=\"source\"\n        position={Position.Top}\n        className=\"w-3 h-3 !bg-blue-500 transition-all duration-300 hover:scale-150 cursor-pointer opacity-0 group-hover:opacity-100\"\n        style={{\n          left: '50%',\n          transform: 'translateX(-50%)',\n          zIndex: 2\n        }}\n        isConnectable={true}\n      />\n      <Handle\n        id=\"top\"\n        type=\"target\"\n        position={Position.Top}\n        className=\"w-3 h-3 !bg-blue-500 transition-all duration-300 hover:scale-150 cursor-pointer opacity-0 group-hover:opacity-100\"\n        style={{\n          left: '50%',\n          transform: 'translateX(-50%)',\n          zIndex: 1\n        }}\n        isConnectable={true}\n      />\n\n      {/* Right handles */}\n      <Handle\n        id=\"right\"\n        type=\"source\"\n        position={Position.Right}\n        className=\"w-3 h-3 !bg-blue-500 transition-all duration-300 hover:scale-150 cursor-pointer opacity-0 group-hover:opacity-100\"\n        style={{\n          top: '50%',\n          transform: 'translateY(-50%)',\n          zIndex: 2\n        }}\n        isConnectable={true}\n      />\n      <Handle\n        id=\"right\"\n        type=\"target\"\n        position={Position.Right}\n        className=\"w-3 h-3 !bg-blue-500 transition-all duration-300 hover:scale-150 cursor-pointer opacity-0 group-hover:opacity-100\"\n        style={{\n          top: '50%',\n          transform: 'translateY(-50%)',\n          zIndex: 1\n        }}\n        isConnectable={true}\n      />\n\n      {/* Bottom handles */}\n      <Handle\n        id=\"bottom\"\n        type=\"source\"\n        position={Position.Bottom}\n        className=\"w-3 h-3 !bg-blue-500 transition-all duration-300 hover:scale-150 cursor-pointer opacity-0 group-hover:opacity-100\"\n        style={{\n          left: '50%',\n          transform: 'translateX(-50%)',\n          zIndex: 2\n        }}\n        isConnectable={true}\n      />\n      <Handle\n        id=\"bottom\"\n        type=\"target\"\n        position={Position.Bottom}\n        className=\"w-3 h-3 !bg-blue-500 transition-all duration-300 hover:scale-150 cursor-pointer opacity-0 group-hover:opacity-100\"\n        style={{\n          left: '50%',\n          transform: 'translateX(-50%)',\n          zIndex: 1\n        }}\n        isConnectable={true}\n      />\n\n      {/* Left handles */}\n      <Handle\n        id=\"left\"\n        type=\"source\"\n        position={Position.Left}\n        className=\"w-3 h-3 !bg-blue-500 transition-all duration-300 hover:scale-150 cursor-pointer opacity-0 group-hover:opacity-100\"\n        style={{\n          top: '50%',\n          transform: 'translateY(-50%)',\n          zIndex: 2\n        }}\n        isConnectable={true}\n      />\n      <Handle\n        id=\"left\"\n        type=\"target\"\n        position={Position.Left}\n        className=\"w-3 h-3 !bg-blue-500 transition-all duration-300 hover:scale-150 cursor-pointer opacity-0 group-hover:opacity-100\"\n        style={{\n          top: '50%',\n          transform: 'translateY(-50%)',\n          zIndex: 1\n        }}\n        isConnectable={true}\n      />\n\n      <div className=\"flex items-center gap-2 mb-1\">\n        <CheckSquare size={16} />\n        <div className=\"font-semibold text-sm\">{data.label}</div>\n        {data.onDelete && (\n          <button\n            onClick={(e) => {\n              // Don't stop propagation immediately - delay the action to allow double-clicks\n              e.preventDefault(); // Prevent any default behavior but allow bubbling\n              \n              // Use a longer timeout to distinguish between single click and double-click\n              const deleteTimeout = setTimeout(() => {\n                // Only execute delete if this wasn't part of a double-click sequence\n                e.stopPropagation(); // Stop propagation only when actually deleting\n                data.onDelete();\n              }, 300); // Increased timeout\n              \n              // Store timeout ID on the button to cancel it if double-click occurs\n              e.currentTarget.deleteTimeout = deleteTimeout;\n            }}\n            onDoubleClick={(e) => {\n              // Cancel the pending delete action\n              if (e.currentTarget.deleteTimeout) {\n                clearTimeout(e.currentTarget.deleteTimeout);\n                e.currentTarget.deleteTimeout = null;\n              }\n              \n              // Don't prevent default - allow the double-click to bubble up for modal opening\n              // The parent node will handle the double-click to open the modal\n            }}\n            className=\"ml-auto p-1 hover:bg-white hover:bg-opacity-20 rounded transition-all duration-200 hover:scale-110 opacity-70 hover:opacity-100\"\n          >\n            <X size={12} />\n          </button>\n        )}\n      </div>\n      <div className=\"text-xs opacity-90\">Priority: {data.priority}</div>\n      {data.due_date && (\n        <div className=\"text-xs mt-1 opacity-90\">Due: {new Date(data.due_date).toLocaleDateString()}</div>\n      )}\n    </div>\n  );\n};\n\nexport default TaskNode;","import React, { useState, useEffect } from 'react';\nimport { Handle, Position } from '@xyflow/react';\nimport { BookOpen, X } from 'lucide-react';\n\nconst LiteratureNode = ({ data, selected }) => {\n  const [isVisible, setIsVisible] = useState(data.skipAnimation || false);\n  \n  // Entry animation with the longest delay for final polish - only if not skipping animations\n  useEffect(() => {\n    if (!data.skipAnimation) {\n      const timer = setTimeout(() => setIsVisible(true), 250);\n      return () => clearTimeout(timer);\n    }\n  }, [data.skipAnimation]);\n\n  return (\n    <div\n      className={`group px-4 py-3 rounded-xl shadow-lg border-2 transition-all duration-650 min-w-[200px] bg-purple-50 relative hover:shadow-2xl transform hover:scale-105 ${selected\n          ? 'border-purple-400 shadow-xl scale-105 ring-4 ring-purple-200'\n          : 'border-purple-200 hover:border-purple-300 hover:ring-2 hover:ring-purple-100'\n        } ${isVisible ? 'opacity-100 scale-100 translate-x-0 rotate-0' : 'opacity-0 scale-95 translate-x-4 -rotate-1'}`}\n      style={{\n        transition: 'all 0.65s cubic-bezier(0.175, 0.885, 0.32, 1.275), transform 0.3s ease'\n      }}\n    >\n      {/* Connection Hotspots - Stacked source and target handles for all four sides */}\n      {/* Top handles */}\n      <Handle\n        id=\"top\"\n        type=\"source\"\n        position={Position.Top}\n        className=\"w-3 h-3 !bg-purple-500 transition-all duration-300 hover:scale-150 cursor-pointer opacity-0 group-hover:opacity-100\"\n        style={{\n          left: '50%',\n          transform: 'translateX(-50%)',\n          zIndex: 2\n        }}\n        isConnectable={true}\n      />\n      <Handle\n        id=\"top\"\n        type=\"target\"\n        position={Position.Top}\n        className=\"w-3 h-3 !bg-purple-500 transition-all duration-300 hover:scale-150 cursor-pointer opacity-0 group-hover:opacity-100\"\n        style={{\n          left: '50%',\n          transform: 'translateX(-50%)',\n          zIndex: 1\n        }}\n        isConnectable={true}\n      />\n\n      {/* Right handles */}\n      <Handle\n        id=\"right\"\n        type=\"source\"\n        position={Position.Right}\n        className=\"w-3 h-3 !bg-purple-500 transition-all duration-300 hover:scale-150 cursor-pointer opacity-0 group-hover:opacity-100\"\n        style={{\n          top: '50%',\n          transform: 'translateY(-50%)',\n          zIndex: 2\n        }}\n        isConnectable={true}\n      />\n      <Handle\n        id=\"right\"\n        type=\"target\"\n        position={Position.Right}\n        className=\"w-3 h-3 !bg-purple-500 transition-all duration-300 hover:scale-150 cursor-pointer opacity-0 group-hover:opacity-100\"\n        style={{\n          top: '50%',\n          transform: 'translateY(-50%)',\n          zIndex: 1\n        }}\n        isConnectable={true}\n      />\n\n      {/* Bottom handles */}\n      <Handle\n        id=\"bottom\"\n        type=\"source\"\n        position={Position.Bottom}\n        className=\"w-3 h-3 !bg-purple-500 transition-all duration-300 hover:scale-150 cursor-pointer opacity-0 group-hover:opacity-100\"\n        style={{\n          left: '50%',\n          transform: 'translateX(-50%)',\n          zIndex: 2\n        }}\n        isConnectable={true}\n      />\n      <Handle\n        id=\"bottom\"\n        type=\"target\"\n        position={Position.Bottom}\n        className=\"w-3 h-3 !bg-purple-500 transition-all duration-300 hover:scale-150 cursor-pointer opacity-0 group-hover:opacity-100\"\n        style={{\n          left: '50%',\n          transform: 'translateX(-50%)',\n          zIndex: 1\n        }}\n        isConnectable={true}\n      />\n\n      {/* Left handles */}\n      <Handle\n        id=\"left\"\n        type=\"source\"\n        position={Position.Left}\n        className=\"w-3 h-3 !bg-purple-500 transition-all duration-300 hover:scale-150 cursor-pointer opacity-0 group-hover:opacity-100\"\n        style={{\n          top: '50%',\n          transform: 'translateY(-50%)',\n          zIndex: 2\n        }}\n        isConnectable={true}\n      />\n      <Handle\n        id=\"left\"\n        type=\"target\"\n        position={Position.Left}\n        className=\"w-3 h-3 !bg-purple-500 transition-all duration-300 hover:scale-150 cursor-pointer opacity-0 group-hover:opacity-100\"\n        style={{\n          top: '50%',\n          transform: 'translateY(-50%)',\n          zIndex: 1\n        }}\n        isConnectable={true}\n      />\n\n      <div \n        className=\"flex items-center gap-2 mb-1 cursor-pointer\"\n        onClick={(e) => {\n          // Don't stop propagation immediately - delay the action to allow double-clicks\n          e.preventDefault(); // Prevent any default behavior but allow bubbling\n          \n          // Use a longer timeout to distinguish between single click and double-click\n          const clickTimeout = setTimeout(() => {\n            // Only execute click if this wasn't part of a double-click sequence\n            e.stopPropagation(); // Stop propagation only when actually handling the click\n            if (data.onLiteratureClick) {\n              data.onLiteratureClick(data);\n            }\n          }, 300); // Increased timeout\n          \n          // Store timeout ID on the element to cancel it if double-click occurs\n          e.currentTarget.clickTimeout = clickTimeout;\n        }}\n        onDoubleClick={(e) => {\n          // Cancel the pending click action\n          if (e.currentTarget.clickTimeout) {\n            clearTimeout(e.currentTarget.clickTimeout);\n            e.currentTarget.clickTimeout = null;\n          }\n          \n          // Don't prevent default - allow the double-click to bubble up for modal opening\n          // The parent node will handle the double-click to open the modal\n        }}\n      >\n        <BookOpen size={16} className=\"text-purple-600\" />\n        <div className=\"font-semibold text-sm text-gray-800\">{data.label}</div>\n        {data.onDelete && (\n          <button\n            onClick={(e) => {\n              // Don't stop propagation immediately - delay the action to allow double-clicks\n              e.preventDefault(); // Prevent any default behavior but allow bubbling\n              \n              // Use a longer timeout to distinguish between single click and double-click\n              const deleteTimeout = setTimeout(() => {\n                // Only execute delete if this wasn't part of a double-click sequence\n                e.stopPropagation(); // Stop propagation only when actually deleting\n                data.onDelete();\n              }, 300); // Increased timeout\n              \n              // Store timeout ID on the button to cancel it if double-click occurs\n              e.currentTarget.deleteTimeout = deleteTimeout;\n            }}\n            onDoubleClick={(e) => {\n              // Cancel the pending delete action\n              if (e.currentTarget.deleteTimeout) {\n                clearTimeout(e.currentTarget.deleteTimeout);\n                e.currentTarget.deleteTimeout = null;\n              }\n              \n              // Don't prevent default - allow the double-click to bubble up for modal opening\n              // The parent node will handle the double-click to open the modal\n            }}\n            className=\"ml-auto p-1 hover:bg-purple-200 rounded transition-all duration-200 hover:scale-110 opacity-70 hover:opacity-100\"\n          >\n            <X size={12} />\n          </button>\n        )}\n      </div>\n      <div className=\"text-xs text-gray-600\">{data.authors}</div>\n      <div className=\"text-xs text-purple-600 mt-1\">{data.year}</div>\n    </div>\n  );\n};\n\nexport default LiteratureNode;","// Performance optimizations for mind map rendering\nimport { useMemo, useCallback } from 'react';\n\n// Memoized node data to prevent unnecessary re-renders\nexport const useMemoizedNodeData = (data, dependencies = []) => {\n  return useMemo(() => data, dependencies);\n};\n\n// Throttled layout calculation to prevent excessive computations\nexport const useThrottledLayout = (layoutFunction, delay = 100) => {\n  return useCallback(\n    throttle(layoutFunction, delay),\n    [layoutFunction, delay]\n  );\n};\n\n// Throttle function implementation\nfunction throttle(func, delay) {\n  let timeoutId;\n  let lastExecTime = 0;\n  \n  return function (...args) {\n    const currentTime = Date.now();\n    \n    if (currentTime - lastExecTime > delay) {\n      func.apply(this, args);\n      lastExecTime = currentTime;\n    } else {\n      clearTimeout(timeoutId);\n      timeoutId = setTimeout(() => {\n        func.apply(this, args);\n        lastExecTime = Date.now();\n      }, delay - (currentTime - lastExecTime));\n    }\n  };\n}\n\n// Optimized data conversion with chunking for large datasets\nexport const convertDataInChunks = (data, chunkSize = 50) => {\n  return new Promise((resolve) => {\n    const chunks = [];\n    const allItems = [\n      ...data.topics.map(item => ({ ...item, type: 'topic' })),\n      ...data.cases.map(item => ({ ...item, type: 'case' })),\n      ...data.tasks.map(item => ({ ...item, type: 'task' })),\n      ...data.literature.map(item => ({ ...item, type: 'literature' }))\n    ];\n    \n    for (let i = 0; i < allItems.length; i += chunkSize) {\n      chunks.push(allItems.slice(i, i + chunkSize));\n    }\n    \n    resolve(chunks);\n  });\n};\n\n// Fast initial layout without force simulation\nexport const getQuickLayout = (nodes) => {\n  const gridSize = Math.ceil(Math.sqrt(nodes.length));\n  const nodeSpacing = 200;\n  \n  return nodes.map((node, index) => ({\n    ...node,\n    position: {\n      x: (index % gridSize) * nodeSpacing,\n      y: Math.floor(index / gridSize) * nodeSpacing\n    }\n  }));\n};\n\n// Memory-efficient edge creation\nexport const createOptimizedEdges = (connections, nodeIds) => {\n  const nodeIdSet = new Set(nodeIds);\n  \n  return connections\n    .filter(conn => nodeIdSet.has(conn.source) && nodeIdSet.has(conn.target))\n    .map(conn => ({\n      id: conn.id,\n      source: conn.source,\n      target: conn.target,\n      label: conn.label,\n      type: 'floating',\n      style: {\n        strokeWidth: 2,\n        stroke: '#64748b',\n        opacity: 0.85\n      },\n      animated: false,\n      updatable: true\n    }));\n};\n","// Sample literature data for testing the enhanced Literature modal\nexport const sampleLiteratureData = [\n  {\n    id: 1,\n    title: \"Efficacy of Cognitive Behavioral Therapy for Depression: A Meta-Analysis\",\n    authors: \"Smith, J.A., Johnson, B.K., Williams, C.D.\",\n    year: \"2023\",\n    type: \"meta-analysis\",\n    journal: \"Journal of Clinical Psychology\",\n    volume: \"79\",\n    pages: \"234-251\",\n    doi: \"10.1002/jclp.23456\",\n    abstract: \"This meta-analysis examines the efficacy of cognitive behavioral therapy (CBT) for treating major depressive disorder across 45 randomized controlled trials involving 3,242 participants. Results indicate that CBT shows significant effectiveness with a large effect size (d = 0.85) compared to control conditions. The analysis also reveals that individual CBT may be more effective than group CBT for severe depression cases.\",\n    keywords: \"cognitive behavioral therapy, depression, meta-analysis, psychotherapy, mental health\",\n    notes: \"\",\n    pdf_url: \"https://example.com/sample-cbt-meta-analysis.pdf\",\n    position: { x: 300, y: 100 }\n  },\n  {\n    id: 2,\n    title: \"DSM-5-TR Clinical Cases\",\n    authors: \"American Psychiatric Association\",\n    year: \"2022\",\n    type: \"guideline\",\n    journal: \"American Psychiatric Publishing\",\n    abstract: \"A comprehensive collection of clinical cases that illustrate the diagnostic criteria and clinical features of mental disorders as defined in the DSM-5-TR. Each case includes detailed patient presentations, differential diagnoses, and treatment considerations.\",\n    keywords: \"DSM-5, diagnosis, clinical cases, psychiatric disorders, differential diagnosis\",\n    notes: \"Essential reference for diagnostic clarity\",\n    position: { x: 500, y: 200 }\n  },\n  {\n    id: 3,\n    title: \"Pharmacological Treatment of Bipolar Disorder: Current Evidence\",\n    authors: \"Rodriguez, M.L., Chen, K.H., Anderson, P.R.\",\n    year: \"2023\",\n    type: \"review\",\n    journal: \"Bipolar Disorders\",\n    volume: \"25\",\n    pages: \"123-145\",\n    doi: \"10.1111/bdi.13289\",\n    abstract: \"This comprehensive review examines current evidence for pharmacological treatments of bipolar disorder, including mood stabilizers, antipsychotics, and adjunctive therapies. The review covers efficacy, safety profiles, and treatment-resistant cases.\",\n    keywords: \"bipolar disorder, pharmacotherapy, mood stabilizers, lithium, antipsychotics\",\n    notes: \"Important for medication management decisions\",\n    position: { x: 700, y: 150 }\n  },\n  {\n    id: 4,\n    title: \"Mindfulness-Based Interventions for Anxiety Disorders: A Systematic Review\",\n    authors: \"Taylor, S.M., Brown, A.J., Davis, L.K.\",\n    year: \"2023\",\n    type: \"review\",\n    journal: \"Clinical Psychology Review\",\n    volume: \"88\",\n    pages: \"102-118\",\n    abstract: \"Systematic review of mindfulness-based interventions for treating various anxiety disorders. Analysis of 28 studies shows moderate to large effect sizes for reducing anxiety symptoms, with particular effectiveness for generalized anxiety disorder.\",\n    keywords: \"mindfulness, anxiety disorders, meditation, systematic review, GAD\",\n    notes: \"Good evidence for mindfulness approaches\",\n    position: { x: 400, y: 300 }\n  },\n  {\n    id: 5,\n    title: \"Case Study: Treatment-Resistant Schizophrenia with Clozapine\",\n    authors: \"Wilson, K.R., Martinez, E.S.\",\n    year: \"2022\",\n    type: \"case-study\",\n    journal: \"Schizophrenia Bulletin\",\n    volume: \"48\",\n    pages: \"567-572\",\n    abstract: \"Detailed case study of a 28-year-old male with treatment-resistant schizophrenia who showed significant improvement after clozapine initiation. The case discusses monitoring protocols, side effect management, and long-term outcomes.\",\n    keywords: \"schizophrenia, clozapine, treatment-resistant, case study, antipsychotics\",\n    notes: \"Useful for understanding clozapine protocols\",\n    position: { x: 600, y: 400 }\n  }\n];\n\n// Sample connections between literature and other nodes\nexport const sampleConnections = [\n  {\n    id: \"conn-1\",\n    source: \"literature-1\",\n    target: \"case-101\", // Depression case\n    label: \"Treatment approach\"\n  },\n  {\n    id: \"conn-2\", \n    source: \"literature-2\",\n    target: \"topic-201\", // Diagnostic criteria topic\n    label: \"Reference guide\"\n  },\n  {\n    id: \"conn-3\",\n    source: \"literature-3\",\n    target: \"case-102\", // Bipolar case\n    label: \"Medication guidance\"\n  },\n  {\n    id: \"conn-4\",\n    source: \"literature-4\",\n    target: \"case-103\", // Anxiety case\n    label: \"Treatment option\"\n  },\n  {\n    id: \"conn-5\",\n    source: \"literature-5\",\n    target: \"case-104\", // Schizophrenia case\n    label: \"Treatment protocol\"\n  }\n];\n\n// Enhanced literature node factory\nexport const createLiteratureNode = (data) => ({\n  ...data,\n  label: data.title || 'Literature Item',\n  created_at: new Date().toISOString(),\n  updated_at: new Date().toISOString()\n});\n","// Utility to populate sample literature data for testing\nimport { sampleLiteratureData, sampleConnections } from '../data/sampleLiteratureData';\n\nexport const populateSampleLiteratureData = (setMindMapData, autoSaveMindMapData, addToast) => {\n  setMindMapData(prevData => {\n    // Add sample literature items if they don't already exist\n    const existingIds = new Set(prevData.literature.map(item => item.id));\n    const newLiterature = sampleLiteratureData.filter(item => !existingIds.has(item.id));\n    \n    if (newLiterature.length === 0) {\n      addToast('Sample literature data already exists', 'info');\n      return prevData;\n    }\n\n    // Create sample case and topic nodes to connect with literature\n    const sampleCases = [\n      {\n        id: 101,\n        label: 'Major Depression Case',\n        primary_diagnosis: 'Major Depressive Disorder',\n        chief_complaint: 'Persistent sadness and loss of interest',\n        secondary_diagnoses: ['Anxiety', 'Insomnia'],\n        position: { x: 100, y: 100 }\n      },\n      {\n        id: 102,\n        label: 'Bipolar Disorder Case', \n        primary_diagnosis: 'Bipolar I Disorder',\n        chief_complaint: 'Mood swings and impulsivity',\n        position: { x: 200, y: 200 }\n      },\n      {\n        id: 103,\n        label: 'Generalized Anxiety Case',\n        primary_diagnosis: 'Generalized Anxiety Disorder',\n        chief_complaint: 'Excessive worry and restlessness',\n        position: { x: 300, y: 300 }\n      },\n      {\n        id: 104,\n        label: 'Schizophrenia Case',\n        primary_diagnosis: 'Schizophrenia',\n        chief_complaint: 'Auditory hallucinations and delusions',\n        position: { x: 400, y: 400 }\n      }\n    ];\n\n    const sampleTopics = [\n      {\n        id: 201,\n        title: 'Diagnostic Criteria',\n        category: 'Assessment',\n        tags: ['DSM-5', 'diagnosis', 'criteria'],\n        position: { x: 150, y: 50 }\n      }\n    ];\n\n    // Filter out existing cases and topics\n    const existingCaseIds = new Set(prevData.cases.map(item => item.id));\n    const existingTopicIds = new Set(prevData.topics.map(item => item.id));\n    \n    const newCases = sampleCases.filter(item => !existingCaseIds.has(item.id));\n    const newTopics = sampleTopics.filter(item => !existingTopicIds.has(item.id));\n\n    // Add sample connections\n    const existingConnectionIds = new Set(prevData.connections.map(conn => conn.id));\n    const newConnections = sampleConnections.filter(conn => !existingConnectionIds.has(conn.id));\n\n    const updatedData = {\n      ...prevData,\n      literature: [...prevData.literature, ...newLiterature],\n      cases: [...prevData.cases, ...newCases],\n      topics: [...prevData.topics, ...newTopics],\n      connections: [...prevData.connections, ...newConnections]\n    };\n\n    // Save the updated data\n    autoSaveMindMapData(updatedData);\n    addToast(`Added ${newLiterature.length} literature items, ${newCases.length} cases, and ${newTopics.length} topics`, 'success');\n    \n    return updatedData;\n  });\n};\n\nexport const clearSampleData = (setMindMapData, autoSaveMindMapData, addToast) => {\n  setMindMapData(prevData => {\n    // Remove sample data based on IDs\n    const sampleLiteratureIds = new Set(sampleLiteratureData.map(item => item.id));\n    const sampleConnectionIds = new Set(sampleConnections.map(conn => conn.id));\n    const sampleCaseIds = new Set([101, 102, 103, 104]);\n    const sampleTopicIds = new Set([201]);\n\n    const updatedData = {\n      ...prevData,\n      literature: prevData.literature.filter(item => !sampleLiteratureIds.has(item.id)),\n      cases: prevData.cases.filter(item => !sampleCaseIds.has(item.id)),\n      topics: prevData.topics.filter(item => !sampleTopicIds.has(item.id)),\n      connections: prevData.connections.filter(conn => !sampleConnectionIds.has(conn.id))\n    };\n\n    autoSaveMindMapData(updatedData);\n    addToast('Sample literature data cleared', 'success');\n    \n    return updatedData;\n  });\n};\n","import React, { useState, useEffect, useCallback, useRef, useMemo, Suspense, lazy } from 'react';\nimport '@xyflow/react/dist/style.css';\nimport './App.css';\nimport axios from 'axios';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport {\n  ReactFlow,\n  addEdge,\n  Background,\n  Controls,\n  MiniMap,\n  useNodesState,\n  useEdgesState,\n  ReactFlowProvider,\n  Panel,\n  Handle,\n  Position,\n  useReactFlow,\n} from '@xyflow/react';\n\n// Lazy load heavy D3 dependencies\nconst loadD3Force = () => import('d3-force');\nconst loadDagre = () => import('dagre');\n\nimport {\n  Plus,\n  Brain,\n  Users,\n  CheckSquare,\n  Edit3,\n  Save,\n  ArrowLeft,\n  FileText,\n  Calendar,\n  Target,\n  BookOpen,\n  Trash2,\n  X,\n  Shuffle,\n  Download,\n  Cloud,\n  CheckCircle,\n  Tag,\n  Clock,\n  AlertCircle,\n  Info,\n  Star,\n  Zap,\n  Settings,\n  Eye,\n  Upload,\n  Bell,\n  CheckCircle2,\n  Loader2,\n  Sparkles,\n  Search, // Added for global search functionality\n  Heart,\n  Bookmark,\n  User,\n  Clipboard,\n  StickyNote,\n  Paperclip,\n  ChevronDown,\n  ChevronUp,\n  ArrowDown\n} from 'lucide-react';\n\n// Lazy load components for better initial load time\nimport { RichTextEditor, LiteratureModal } from './components/LazyComponents';\nimport CaseModal from './components/CaseModal';\nimport TopicModal from './components/TopicModal';\nimport TaskModal from './components/TaskModal';\nimport FloatingEdge from './components/FloatingEdge'; // Import the custom FloatingEdge component\nimport EnhancedEdge from './components/EnhancedEdge'; // Import the enhanced edge component\nimport ConnectionLine from './components/ConnectionLine'; // Import the custom connection line for previews\nimport OptimizedLoadingScreen from './components/OptimizedLoadingScreen';\n\n// Import node components\nimport { nodeTypes } from './components/nodes';\n\n// Import performance utilities\nimport { \n  useMemoizedNodeData, \n  convertDataInChunks, \n  getQuickLayout, \n  createOptimizedEdges \n} from './utils/performanceUtils';\nimport { populateSampleLiteratureData, clearSampleData } from './utils/sampleDataUtils';\n\n// Use the environment variable for the backend URL, but provide a fallback\n// to the local server for development. This is a more robust pattern.\n// The .replace() call removes any trailing slashes to prevent \"404 Not Found\"\n// errors caused by double slashes in the request path (e.g., \"//api/\").\nconst BACKEND_URL = (process.env.REACT_APP_BACKEND_URL || 'http://localhost:8000').replace(/\\/$/, '');\nconst API = `${BACKEND_URL}/api`;\n\n// Fix ResizeObserver error that prevents React Flow from working\nconst debounce = (func, wait) => {\n  let timeout;\n  return function executedFunction(...args) {\n    const later = () => {\n      clearTimeout(timeout);\n      func(...args);\n    };\n    clearTimeout(timeout);\n    timeout = setTimeout(later, wait);\n  };\n};\n\n// Suppress ResizeObserver errors that don't affect functionality\nconst originalError = console.error;\nconsole.error = (...args) => {\n  if (args[0] && args[0].includes && args[0].includes('ResizeObserver loop')) {\n    return;\n  }\n  originalError(...args);\n};\n\n// Toast Notification System\nconst Toast = ({ message, type = 'success', onClose, duration = 3000 }) => {\n  useEffect(() => {\n    const timer = setTimeout(onClose, duration);\n    return () => clearTimeout(timer);\n  }, [onClose, duration]);\n\n  const getToastStyles = () => {\n    const baseStyles = \"fixed top-4 right-4 z-50 px-6 py-3 rounded-lg shadow-lg transition-all duration-500 transform\";\n    const typeStyles = {\n      success: \"bg-green-600 text-white border-l-4 border-green-400\",\n      error: \"bg-red-600 text-white border-l-4 border-red-400\",\n      info: \"bg-blue-600 text-white border-l-4 border-blue-400\",\n      saving: \"bg-purple-600 text-white border-l-4 border-purple-400\"\n    };\n    return `${baseStyles} ${typeStyles[type]}`;\n  };\n\n  const getIcon = () => {\n    switch (type) {\n      case 'success': return <CheckCircle2 size={16} className=\"mr-2\" />;\n      case 'error': return <AlertCircle size={16} className=\"mr-2\" />;\n      case 'info': return <Info size={16} className=\"mr-2\" />;\n      case 'saving': return <Loader2 size={16} className=\"mr-2 animate-spin\" />;\n      default: return <CheckCircle2 size={16} className=\"mr-2\" />;\n    }\n  };\n\n  return (\n    <div className={getToastStyles()}>\n      <div className=\"flex items-center\">\n        {getIcon()}\n        <span className=\"text-sm font-medium\">{message}</span>\n        <button\n          onClick={onClose}\n          className=\"ml-4 text-white hover:text-gray-200 transition-colors\"\n        >\n          <X size={14} />\n        </button>\n      </div>\n    </div>\n  );\n};\n\n// Enhanced Loading Button Component\nconst LoadingButton = ({ onClick, loading, disabled, children, className, icon: Icon, ...props }) => {\n  return (\n    <button\n      onClick={onClick}\n      disabled={disabled || loading}\n      className={`${className} transform transition-all duration-200 hover:scale-105 active:scale-95 ${disabled || loading ? 'cursor-not-allowed opacity-50' : 'hover:shadow-lg'\n        }`}\n      {...props}\n    >\n      <div className=\"flex items-center gap-2\">\n        {loading ? (\n          <Loader2 size={16} className=\"animate-spin\" />\n        ) : Icon ? (\n          <Icon size={16} />\n        ) : null}\n        {children}\n      </div>\n    </button>\n  );\n};\n\n// localStorage utilities with enhanced feedback\nconst STORAGE_KEY = 'pgy3_mindmap_data';\nconst STORAGE_VERSION = '1.1';\n\nconst localStorageUtils = {\n  // Save data to localStorage with debouncing and callback for UI feedback\n  save: (() => {\n    let timeoutId;\n    return (data, onSaveStart, onSaveComplete, isAnimating = false) => {\n      clearTimeout(timeoutId);\n\n      if (onSaveStart) onSaveStart();\n\n      // Increase debounce delay during animations\n      const debounceDelay = isAnimating ? 1200 : 800;\n\n      timeoutId = setTimeout(() => {\n        try {\n          const storageData = {\n            version: STORAGE_VERSION,\n            timestamp: new Date().toISOString(),\n            data: data\n          };\n          localStorage.setItem(STORAGE_KEY, JSON.stringify(storageData));\n          console.log('Mind map data auto-saved to localStorage');\n          if (onSaveComplete) onSaveComplete(true);\n        } catch (error) {\n          console.error('Error saving to localStorage:', error);\n          if (onSaveComplete) onSaveComplete(false, error);\n\n          if (error.name === 'QuotaExceededError') {\n            console.warn('localStorage quota exceeded, clearing old data...');\n            try {\n              localStorage.removeItem(STORAGE_KEY);\n            } catch (clearError) {\n              console.error('Error clearing localStorage:', clearError);\n            }\n          }\n        }\n      }, debounceDelay); // Variable debounce delay\n    };\n  })(),\n\n  // Load data from localStorage\n  load: () => {\n    try {\n      const stored = localStorage.getItem(STORAGE_KEY);\n      if (!stored) {\n        console.log('No localStorage data found');\n        return null;\n      }\n\n      const storageData = JSON.parse(stored);\n\n      // Version check\n      if (storageData.version !== STORAGE_VERSION) {\n        console.log('localStorage version mismatch, clearing old data');\n        localStorage.removeItem(STORAGE_KEY);\n        return null;\n      }\n\n      console.log('Mind map data loaded from localStorage', storageData.timestamp);\n      return storageData.data;\n    } catch (error) {\n      console.error('Error loading from localStorage:', error);\n      // Clear corrupted data\n      try {\n        localStorage.removeItem(STORAGE_KEY);\n      } catch (clearError) {\n        console.error('Error clearing corrupted localStorage:', clearError);\n      }\n      return null;\n    }\n  },\n\n  // Clear stored data\n  clear: () => {\n    try {\n      localStorage.removeItem(STORAGE_KEY);\n      console.log('localStorage data cleared');\n    } catch (error) {\n      console.error('Error clearing localStorage:', error);\n    }\n  },\n\n  // Get storage info\n  getStorageInfo: () => {\n    try {\n      const stored = localStorage.getItem(STORAGE_KEY);\n      if (!stored) return null;\n\n      const data = JSON.parse(stored);\n      return {\n        version: data.version,\n        timestamp: data.timestamp,\n        size: new Blob([stored]).size\n      };\n    } catch (error) {\n      return null;\n    }\n  }\n};\n\n// Enhanced CSV export utilities\nconst csvUtils = {\n  generatePatientCasesCSV: (cases, onProgress) => {\n    if (!cases || cases.length === 0) {\n      return '';\n    }\n\n    if (onProgress) onProgress(10, 'Preparing headers...');\n\n    // Enhanced CSV headers with more detailed information\n    const headers = [\n      'Case ID',\n      'Encounter Date',\n      'Primary Diagnosis',\n      'Secondary Diagnoses',\n      'Age',\n      'Gender',\n      'Chief Complaint',\n      'History of Present Illness',\n      'Medical History',\n      'Medications',\n      'Mental Status Exam',\n      'Assessment & Plan',\n      'Status',\n      'Notes',\n      'Created Date',\n      'Updated Date',\n      'Linked Topics Count',\n      'Last Modified By'\n    ];\n\n    if (onProgress) onProgress(30, 'Processing case data...');\n\n    // Convert cases to CSV rows with enhanced data\n    const rows = cases.map((caseItem, index) => {\n      if (onProgress) onProgress(30 + (index / cases.length) * 50, `Processing case ${index + 1}/${cases.length}...`);\n\n      return [\n        caseItem.case_id || '',\n        caseItem.encounter_date ? new Date(caseItem.encounter_date).toLocaleDateString() : '',\n        caseItem.primary_diagnosis || '',\n        Array.isArray(caseItem.secondary_diagnoses) ? caseItem.secondary_diagnoses.join('; ') : '',\n        caseItem.age || '',\n        caseItem.gender || '',\n        caseItem.chief_complaint || '',\n        caseItem.history_present_illness || '',\n        caseItem.medical_history || '',\n        Array.isArray(caseItem.medications) ? caseItem.medications.join('; ') : '',\n        caseItem.mental_status_exam || '',\n        caseItem.assessment_plan || '',\n        caseItem.status || '',\n        caseItem.notes || '',\n        caseItem.created_at ? new Date(caseItem.created_at).toLocaleDateString() : '',\n        caseItem.updated_at ? new Date(caseItem.updated_at).toLocaleDateString() : '',\n        Array.isArray(caseItem.linked_topics) ? caseItem.linked_topics.length : '0',\n        'PGY-3 System'\n      ];\n    });\n\n    if (onProgress) onProgress(85, 'Formatting CSV content...');\n\n    // Escape CSV values and join\n    const escapeCsvValue = (value) => {\n      const stringValue = String(value);\n      if (stringValue.includes(',') || stringValue.includes('\"') || stringValue.includes('\\n')) {\n        return `\"${stringValue.replace(/\"/g, '\"\"')}\"`;\n      }\n      return stringValue;\n    };\n\n    const csvContent = [\n      headers.map(escapeCsvValue).join(','),\n      ...rows.map(row => row.map(escapeCsvValue).join(','))\n    ].join('\\n');\n\n    if (onProgress) onProgress(100, 'CSV generation complete!');\n\n    return csvContent;\n  },\n\n  downloadCSV: (csvContent, filename = 'patient_cases.csv') => {\n    const blob = new Blob([csvContent], { type: 'text/csv;charset=utf-8;' });\n    const link = document.createElement('a');\n    const url = URL.createObjectURL(blob);\n\n    link.setAttribute('href', url);\n    link.setAttribute('download', filename);\n    link.style.visibility = 'hidden';\n\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n\n    URL.revokeObjectURL(url);\n  },\n\n  // Generate summary statistics\n  generateCasesSummary: (cases) => {\n    if (!cases || cases.length === 0) return null;\n\n    const diagnoses = {};\n    const statuses = {};\n    const ageGroups = { '18-30': 0, '31-50': 0, '51-70': 0, '70+': 0, 'Unknown': 0 };\n    const genders = {};\n\n    cases.forEach(caseItem => {\n      // Diagnoses\n      if (caseItem.primary_diagnosis) {\n        diagnoses[caseItem.primary_diagnosis] = (diagnoses[caseItem.primary_diagnosis] || 0) + 1;\n      }\n\n      // Status\n      if (caseItem.status) {\n        statuses[caseItem.status] = (statuses[caseItem.status] || 0) + 1;\n      }\n\n      // Age groups\n      if (caseItem.age) {\n        if (caseItem.age <= 30) ageGroups['18-30']++;\n        else if (caseItem.age <= 50) ageGroups['31-50']++;\n        else if (caseItem.age <= 70) ageGroups['51-70']++;\n        else ageGroups['70+']++;\n      } else {\n        ageGroups['Unknown']++;\n      }\n\n      // Gender\n      if (caseItem.gender) {\n        genders[caseItem.gender] = (genders[caseItem.gender] || 0) + 1;\n      }\n    });\n\n    return {\n      totalCases: cases.length,\n      diagnoses,\n      statuses,\n      ageGroups,\n      genders\n    };\n  }\n};\n\n// Enhanced Custom Node Components - extracted to separate files for better maintainability\n\n\n\n// Enhanced Dedicated Editing Form Component\nconst EnhancedEditingForm = ({ type, data, onClose, onSave, onDelete }) => {\n  // Initialize formData with proper field structure based on node type\n  const getInitialFormData = (type, data) => {\n    const baseData = data || {};\n    \n    switch (type) {\n      case 'case':\n        return {\n          case_id: '',\n          age: '',\n          primary_diagnosis: '',\n          gender: '',\n          chiefComplaint: '',\n          initialPresentation: '',\n          currentPresentation: '',\n          medicationHistory: '',\n          therapyProgress: '',\n          defensePatterns: '',\n          clinicalReflection: '',\n          ...baseData // Existing data takes precedence\n        };\n      case 'topic':\n        return {\n          title: '',\n          category: '',\n          color: '#3B82F6',\n          description: '',\n          notes: '',\n          tags: [],\n          ...baseData\n        };\n      case 'task':\n        return {\n          title: '',\n          description: '',\n          status: 'pending',\n          priority: 'medium',\n          due_date: '',\n          ...baseData\n        };\n      case 'literature':\n        return {\n          title: '',\n          authors: '',\n          year: '',\n          doi: '',\n          abstract: '',\n          notes: '',\n          tags: [],\n          ...baseData\n        };\n      default:\n        return baseData;\n    }\n  };\n\n  const [formData, setFormData] = useState(() => getInitialFormData(type, data));\n  const [activeTab, setActiveTab] = useState('basic');\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [errors, setErrors] = useState({});\n\n  // Update formData when data prop changes\n  useEffect(() => {\n    setFormData(getInitialFormData(type, data));\n  }, [type, data]);\n\n  const tabs = {\n    basic: 'Basic Info',\n    details: 'Details',\n    notes: 'Notes & Tags',\n    history: 'History'\n  };\n\n  const validateForm = () => {\n    const newErrors = {};\n\n    switch (type) {\n      case 'topic':\n        if (!formData.title?.trim()) newErrors.title = 'Title is required';\n        if (!formData.category?.trim()) newErrors.category = 'Category is required';\n        break;\n      case 'case':\n        if (!formData.case_id?.trim()) newErrors.case_id = 'Case ID is required';\n        if (!formData.primary_diagnosis?.trim()) newErrors.primary_diagnosis = 'Primary diagnosis is required';\n        break;\n      case 'task':\n        if (!formData.title?.trim()) newErrors.title = 'Title is required';\n        break;\n      case 'literature':\n        if (!formData.title?.trim()) newErrors.title = 'Title is required';\n        if (!formData.authors?.trim()) newErrors.authors = 'Authors are required';\n        break;\n    }\n\n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  };\n\n  const handleSubmit = async () => {\n    if (!validateForm()) return;\n\n    setIsSubmitting(true);\n    try {\n      await onSave(formData);\n    } catch (error) {\n      console.error('Error saving:', error);\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n\n  const updateFormData = (field, value) => {\n    setFormData(prev => ({ ...prev, [field]: value }));\n    if (errors[field]) {\n      setErrors(prev => ({ ...prev, [field]: null }));\n    }\n  };\n\n  const renderBasicTab = () => {\n    switch (type) {\n      case 'topic':\n        return (\n          <div className=\"space-y-4\">\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-1\">Title *</label>\n              <input\n                type=\"text\"\n                value={formData.title || ''}\n                onChange={(e) => updateFormData('title', e.target.value)}\n                className={`w-full p-3 border rounded-lg focus:ring-2 focus:ring-blue-500 ${errors.title ? 'border-red-500' : 'border-gray-300'\n                  }`}\n                placeholder=\"Enter topic title\"\n              />\n              {errors.title && <p className=\"text-red-500 text-xs mt-1\">{errors.title}</p>}\n            </div>\n\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-1\">Category *</label>\n              <select\n                value={formData.category || ''}\n                onChange={(e) => updateFormData('category', e.target.value)}\n                className={`w-full p-3 border rounded-lg focus:ring-2 focus:ring-blue-500 ${errors.category ? 'border-red-500' : 'border-gray-300'\n                  }`}\n              >\n                <option value=\"\">Select category</option>\n                <option value=\"Mood Disorders\">Mood Disorders</option>\n                <option value=\"Anxiety Disorders\">Anxiety Disorders</option>\n                <option value=\"Psychotic Disorders\">Psychotic Disorders</option>\n                <option value=\"Personality Disorders\">Personality Disorders</option>\n                <option value=\"Substance Use Disorders\">Substance Use Disorders</option>\n                <option value=\"Other\">Other</option>\n              </select>\n              {errors.category && <p className=\"text-red-500 text-xs mt-1\">{errors.category}</p>}\n            </div>\n\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-1\">Color Theme</label>\n              <div className=\"flex gap-2\">\n                {['#3B82F6', '#EF4444', '#10B981', '#F59E0B', '#8B5CF6', '#EC4899'].map(color => (\n                  <button\n                    key={color}\n                    onClick={() => updateFormData('color', color)}\n                    className={`w-8 h-8 rounded-full border-2 ${formData.color === color ? 'border-gray-800' : 'border-gray-300'\n                      }`}\n                    style={{ backgroundColor: color }}\n                  />\n                ))}\n              </div>\n            </div>\n          </div>\n        );\n\n      case 'case':\n        return (\n          <div className=\"space-y-4\">\n            <div className=\"grid grid-cols-2 gap-4\">\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-1\">Case ID *</label>\n                <input\n                  type=\"text\"\n                  value={formData.case_id || ''}\n                  onChange={(e) => updateFormData('case_id', e.target.value)}\n                  className={`w-full p-3 border rounded-lg focus:ring-2 focus:ring-blue-500 ${errors.case_id ? 'border-red-500' : 'border-gray-300'\n                    }`}\n                  placeholder=\"CASE-001\"\n                />\n                {errors.case_id && <p className=\"text-red-500 text-xs mt-1\">{errors.case_id}</p>}\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-1\">Age</label>\n                <input\n                  type=\"number\"\n                  value={formData.age || ''}\n                  onChange={(e) => updateFormData('age', e.target.value)}\n                  className=\"w-full p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500\"\n                  min=\"0\"\n                  max=\"120\"\n                />\n              </div>\n            </div>\n\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-1\">Primary Diagnosis *</label>\n              <input\n                type=\"text\"\n                value={formData.primary_diagnosis || ''}\n                onChange={(e) => updateFormData('primary_diagnosis', e.target.value)}\n                className={`w-full p-3 border rounded-lg focus:ring-2 focus:ring-blue-500 ${errors.primary_diagnosis ? 'border-red-500' : 'border-gray-300'\n                  }`}\n                placeholder=\"Enter primary diagnosis\"\n              />\n              {errors.primary_diagnosis && <p className=\"text-red-500 text-xs mt-1\">{errors.primary_diagnosis}</p>}\n            </div>\n\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-1\">Gender</label>\n              <select\n                value={formData.gender || ''}\n                onChange={(e) => updateFormData('gender', e.target.value)}\n                className=\"w-full p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500\"\n              >\n                <option value=\"\">Select gender</option>\n                <option value=\"Male\">Male</option>\n                <option value=\"Female\">Female</option>\n                <option value=\"Non-binary\">Non-binary</option>\n                <option value=\"Other\">Other</option>\n              </select>\n            </div>\n\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-1\">Chief Complaint</label>\n              <textarea\n                value={formData.chiefComplaint || ''}\n                onChange={(e) => updateFormData('chiefComplaint', e.target.value)}\n                className=\"w-full p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500\"\n                rows={2}\n                placeholder=\"Describe the primary concern\"\n              />\n            </div>\n\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-1\">Initial Presentation</label>\n              <textarea\n                value={formData.initialPresentation || ''}\n                onChange={(e) => updateFormData('initialPresentation', e.target.value)}\n                className=\"w-full p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500\"\n                rows={3}\n                placeholder=\"Symptoms and context at first visit\"\n              />\n            </div>\n\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-1\">Current Presentation</label>\n              <textarea\n                value={formData.currentPresentation || ''}\n                onChange={(e) => updateFormData('currentPresentation', e.target.value)}\n                className=\"w-full p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500\"\n                rows={3}\n                placeholder=\"Describe how the case looks now\"\n              />\n            </div>\n\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-1\">Medication History</label>\n              <textarea\n                value={formData.medicationHistory || ''}\n                onChange={(e) => updateFormData('medicationHistory', e.target.value)}\n                className=\"w-full p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500\"\n                rows={2}\n                placeholder=\"e.g. SSRI trials, mood stabilizers, etc.\"\n              />\n            </div>\n\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-1\">Therapy Progress</label>\n              <textarea\n                value={formData.therapyProgress || ''}\n                onChange={(e) => updateFormData('therapyProgress', e.target.value)}\n                className=\"w-full p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500\"\n                rows={2}\n                placeholder=\"How the patient has responded to therapy\"\n              />\n            </div>\n\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-1\">Defense Patterns</label>\n              <textarea\n                value={formData.defensePatterns || ''}\n                onChange={(e) => updateFormData('defensePatterns', e.target.value)}\n                className=\"w-full p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500\"\n                rows={2}\n                placeholder=\"e.g. projection, denial, rationalization\"\n              />\n            </div>\n\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-1\">Clinical Reflection</label>\n              <textarea\n                value={formData.clinicalReflection || ''}\n                onChange={(e) => updateFormData('clinicalReflection', e.target.value)}\n                className=\"w-full p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500\"\n                rows={3}\n                placeholder=\"Your thoughts or questions about the case\"\n              />\n            </div>\n          </div>\n        );\n\n      default:\n        return <div>Basic form for {type}</div>;\n    }\n  };\n\n  return (\n    <div className=\"fixed inset-0 bg-black bg-opacity-60 flex items-center justify-center z-50 backdrop-blur-sm\">\n      <div className=\"bg-white rounded-xl shadow-2xl max-w-4xl w-full mx-4 max-h-[90vh] overflow-hidden\">\n        {/* Header */}\n        <div className=\"bg-gradient-to-r from-blue-600 to-purple-600 text-white p-6\">\n          <div className=\"flex items-center justify-between\">\n            <h2 className=\"text-xl font-semibold capitalize flex items-center gap-2\">\n              <Sparkles size={20} />\n              Enhanced {type} Editor\n            </h2>\n            <button\n              onClick={onClose}\n              className=\"text-white hover:text-gray-200 transition-colors\"\n            >\n              <X size={24} />\n            </button>\n          </div>\n        </div>\n\n        {/* Tabs */}\n        <div className=\"border-b border-gray-200\">\n          <div className=\"flex\">\n            {Object.entries(tabs).map(([key, label]) => (\n              <button\n                key={key}\n                onClick={() => setActiveTab(key)}\n                className={`px-6 py-3 text-sm font-medium transition-colors ${activeTab === key\n                    ? 'border-b-2 border-blue-500 text-blue-600 bg-blue-50'\n                    : 'text-gray-500 hover:text-gray-700'\n                  }`}\n              >\n                {label}\n              </button>\n            ))}\n          </div>\n        </div>\n\n        {/* Content */}\n        <div className=\"p-6 overflow-y-auto max-h-[calc(90vh-200px)]\">\n          {activeTab === 'basic' && renderBasicTab()}\n          {activeTab === 'details' && <div>Details content for {type}</div>}\n          {activeTab === 'notes' && <div>Notes and tags content</div>}\n          {activeTab === 'history' && <div>History content</div>}\n        </div>\n\n        {/* Footer */}\n        <div className=\"bg-gray-50 px-6 py-4 flex items-center justify-between border-t\">\n          <div className=\"flex gap-2\">\n            {onDelete && (\n              <LoadingButton\n                onClick={onDelete}\n                icon={Trash2}\n                className=\"bg-red-600 hover:bg-red-700 text-white px-4 py-2 rounded-lg\"\n              >\n                Delete\n              </LoadingButton>\n            )}\n          </div>\n\n          <div className=\"flex gap-2\">\n            <button\n              onClick={onClose}\n              className=\"px-4 py-2 text-gray-600 hover:text-gray-800 border border-gray-300 rounded-lg hover:bg-gray-100 transition-colors\"\n            >\n              Cancel\n            </button>\n            <LoadingButton\n              onClick={handleSubmit}\n              loading={isSubmitting}\n              icon={isSubmitting ? Loader2 : Save}\n              className=\"bg-blue-600 hover:bg-blue-700 text-white px-4 py-2 rounded-lg\"\n            >\n              {isSubmitting ? 'Saving...' : 'Save Changes'}\n            </LoadingButton>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\nconst NodeSelector = ({ isOpen, onClose, onSelect }) => {\n  const [selectedNodeType, setSelectedNodeType] = useState(null);\n\n  // When the modal is closed, reset the internal state\n  useEffect(() => {\n    if (!isOpen) {\n      // Add a small delay to allow the closing animation to finish before state reset\n      const timer = setTimeout(() => setSelectedNodeType(null), 300);\n      return () => clearTimeout(timer);\n    }\n  }, [isOpen]);\n\n  if (!isOpen) return null;\n\n  const nodeTypes = [\n    { type: 'topic', label: 'Psychiatric Topic', icon: Brain, color: 'bg-blue-600', description: 'Add a new psychiatric topic or disorder' },\n    { type: 'literature', label: 'Literature', icon: BookOpen, color: 'bg-purple-600', description: 'Add research papers, articles, or references' },\n    { type: 'case', label: 'Patient Case', icon: Users, color: 'bg-indigo-600', description: 'Add a new patient case study' },\n    { type: 'task', label: 'Task', icon: CheckSquare, color: 'bg-amber-600', description: 'Add a task or to-do item' }\n  ];\n\n  const handleNodeTypeSelect = (nodeType) => {\n    setSelectedNodeType(nodeType);\n  };\n\n  const handleFinalSelect = () => {\n    onSelect(selectedNodeType);\n    onClose();\n  };\n\n  return (\n    <div className=\"fixed inset-0 bg-black bg-opacity-60 flex items-center justify-center z-50 backdrop-blur-sm animate-in fade-in-25 duration-300\">\n      <div className=\"bg-white rounded-xl shadow-2xl p-6 max-w-md w-full mx-4 transform transition-all duration-300 ease-out\">\n        {/* Header */}\n        <div className=\"flex items-center justify-between mb-6\">\n          <div className=\"flex items-center gap-3\">\n            {selectedNodeType && (\n              <button\n                onClick={() => setSelectedNodeType(null)}\n                className=\"text-gray-400 hover:text-gray-600 p-1 rounded-full hover:bg-gray-100 transition-colors\"\n              >\n                <ArrowLeft size={20} />\n              </button>\n            )}\n            <h3 className=\"text-xl font-semibold text-gray-800\">\n              {selectedNodeType ? `Create ${selectedNodeType}` : 'Add New Node'}\n            </h3>\n          </div>\n          <button\n            onClick={onClose}\n            className=\"text-gray-400 hover:text-gray-600 p-1\"\n          >\n            <X size={20} />\n          </button>\n        </div>\n\n        <div className=\"relative overflow-hidden\" style={{ minHeight: '200px' }}>\n          {/* View 1: Node Type Selection */}\n          <div className={`transition-transform duration-300 ease-in-out ${selectedNodeType ? '-translate-x-full opacity-0' : 'translate-x-0 opacity-100'}`}>\n            <div className=\"space-y-3\">\n              {nodeTypes.map(({ type, label, icon: Icon, color, description }) => (\n                <button\n                  key={type}\n                  onClick={() => handleNodeTypeSelect(type)}\n                  className=\"w-full flex items-center gap-4 p-4 rounded-lg border-2 border-gray-200 hover:border-blue-400 hover:bg-blue-50 transition-all text-left\"\n                >\n                  <div className={`${color} p-2 rounded-lg text-white`}>\n                    <Icon size={20} />\n                  </div>\n                  <div>\n                    <div className=\"font-medium text-gray-800\">{label}</div>\n                    <div className=\"text-sm text-gray-500\">{description}</div>\n                  </div>\n                </button>\n              ))}\n            </div>\n          </div>\n\n          {/* View 2: Node Creation */}\n          <div className={`absolute top-0 left-0 w-full transition-transform duration-300 ease-in-out ${selectedNodeType ? 'translate-x-0 opacity-100' : 'translate-x-full opacity-0'}`}>\n            {selectedNodeType && (\n              <div className=\"space-y-3\">\n                {/* Create Blank Option */}\n                <button\n                  onClick={() => handleFinalSelect()}\n                  className=\"w-full flex items-center gap-4 p-4 rounded-lg border-2 border-dashed border-gray-300 hover:border-blue-400 hover:bg-blue-50 transition-all text-left\"\n                >\n                  <div className=\"bg-gray-200 p-2 rounded-lg text-gray-600\">\n                    <Plus size={20} />\n                  </div>\n                  <div>\n                    <div className=\"font-medium text-gray-800\">Create Blank {selectedNodeType}</div>\n                    <div className=\"text-sm text-gray-500\">Start with an empty node.</div>\n                  </div>\n                </button>\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\n// Edge Label Modal Component\nconst EdgeLabelModal = ({ edge, isOpen, onClose, onSave }) => {\n  const [label, setLabel] = useState(edge?.label || '');\n\n  // Update label when edge changes\n  useEffect(() => {\n    setLabel(edge?.label || '');\n  }, [edge]);\n\n  const handleSave = () => {\n    onSave(edge.id, label);\n    onClose();\n  };\n\n  const handleKeyPress = (e) => {\n    if (e.key === 'Enter') {\n      handleSave();\n    } else if (e.key === 'Escape') {\n      onClose();\n    }\n  };\n\n  if (!isOpen || !edge) return null;\n\n  return (\n    <div className=\"fixed inset-0 bg-black bg-opacity-60 flex items-center justify-center z-50 backdrop-blur-sm\">\n      <div className=\"bg-white rounded-xl shadow-2xl p-6 max-w-md w-full mx-4 transform transition-all\">\n        <div className=\"flex items-center justify-between mb-6\">\n          <h3 className=\"text-xl font-semibold text-gray-800\">Edit Connection Label</h3>\n          <button\n            onClick={onClose}\n            className=\"text-gray-400 hover:text-gray-600 p-1 transition-colors\"\n          >\n            <X size={20} />\n          </button>\n        </div>\n\n        <div className=\"mb-6\">\n          <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n            Connection Label\n          </label>\n          <input\n            type=\"text\"\n            value={label}\n            onChange={(e) => setLabel(e.target.value)}\n            onKeyPress={handleKeyPress}\n            placeholder=\"Enter a label for this connection...\"\n            className=\"w-full p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all\"\n            autoFocus\n          />\n          <p className=\"text-xs text-gray-500 mt-1\">\n            Press Enter to save, Escape to cancel\n          </p>\n        </div>\n\n        <div className=\"flex items-center justify-end gap-3\">\n          <button\n            onClick={onClose}\n            className=\"px-4 py-2 text-gray-600 hover:text-gray-800 border border-gray-300 rounded-lg hover:bg-gray-100 transition-colors\"\n          >\n            Cancel\n          </button>\n          <button\n            onClick={handleSave}\n            className=\"px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors flex items-center gap-2\"\n          >\n            <Save size={16} />\n            Save Label\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\n// Enhanced Main Dashboard Component with improved visual effects\nconst DashboardComponent = () => {\n  const { fitView, setCenter, zoomTo, getViewport } = useReactFlow();\n\n  const [nodes, setNodes, onNodesChange] = useNodesState([]);\n  const [edges, setEdges, onEdgesChange] = useEdgesState([]);\n\n  // State for forcing node updates\n  const [nodeUpdateTrigger, setNodeUpdateTrigger] = useState(0);\n\n  const [mindMapData, setMindMapData] = useState({\n    topics: [],\n    cases: [],\n    tasks: [],\n    literature: [],\n    connections: []\n  });\n\n  const [isEditing, setIsEditing] = useState(false);\n  const [selectedNode, setSelectedNode] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [loadingProgress, setLoadingProgress] = useState(0);\n  const [loadingMessage, setLoadingMessage] = useState('Initializing...');\n  const [isInitialLoad, setIsInitialLoad] = useState(true);\n  const [focusedCategory, setFocusedCategory] = useState(null);\n  const [showNodeSelector, setShowNodeSelector] = useState(false);\n  // Specialized modal state for each node type with stable data references\n  const [caseModal, setCaseModal] = useState({ isOpen: false, data: null });\n  const [topicModal, setTopicModal] = useState({ isOpen: false, data: null });\n  const [taskModal, setTaskModal] = useState({ isOpen: false, data: null });\n  const caseModalStableData = useRef(null);\n  const topicModalStableData = useRef(null);\n  const taskModalStableData = useRef(null);\n  const [isReactFlowReady, setIsReactFlowReady] = useState(false);\n  const [hasAppliedInitialLayout, setHasAppliedInitialLayout] = useState(false);\n  const [isExportingCSV, setIsExportingCSV] = useState(false);\n  const [lastSaved, setLastSaved] = useState(null);\n  const [isSaving, setIsSaving] = useState(false);\n  const [edgeModal, setEdgeModal] = useState({ isOpen: false, edge: null });\n  const [toasts, setToasts] = useState([]);\n  const [literatureModal, setLiteratureModal] = useState({ isOpen: false, data: null });\n  const [isAnimating, setIsAnimating] = useState(false); // Track animation state\n  const [modalAnimationStates, setModalAnimationStates] = useState({\n    case: false,\n    topic: false,\n    task: false,\n    literature: false\n  });\n  const addToast = useCallback((message, type = 'success', duration = 3000) => {\n    const id = Date.now();\n    const newToast = { id, message, type, duration };\n    setToasts(prev => [...prev, newToast]);\n  }, []);\n\n  const removeToast = useCallback((id) => {\n    setToasts(prev => prev.filter(toast => toast.id !== id));\n  }, []);\n\n  const autoSaveMindMapData = useCallback((data) => {\n    // Enhanced animation and modal state checking\n    const anyModalOpen = caseModal.isOpen || topicModal.isOpen || taskModal.isOpen || literatureModal.isOpen;\n    const anyModalAnimating = Object.values(modalAnimationStates).some(state => state);\n    const anyModalTransitioning = (caseModal.isOpen && caseModal.data?.isTabTransitioning) || \n                                  (topicModal.isOpen && topicModal.data?.isTabTransitioning) ||\n                                  (taskModal.isOpen && taskModal.data?.isTabTransitioning);\n    \n    if (isAnimating || anyModalOpen || anyModalTransitioning || anyModalAnimating) {\n      console.log('Deferring auto-save during animation, modal interaction, or tab transition');\n      // Use a longer delay and exponential backoff for persistent animation states\n      const delay = anyModalTransitioning || anyModalAnimating ? 2000 : 1000;\n      setTimeout(() => autoSaveMindMapData(data), delay);\n      return;\n    }\n\n    const onSaveStart = () => setIsSaving(true);\n    const onSaveComplete = (success, error) => {\n      setIsSaving(false);\n      if (success) {\n        setLastSaved(new Date());\n        // Reduce toast frequency during auto-save to prevent UI distractions\n        // addToast('Data auto-saved', 'saving', 1000);\n      } else {\n        addToast('Auto-save failed', 'error', 4000);\n        console.error('Auto-save error:', error);\n      }\n    };\n\n    localStorageUtils.save(data, onSaveStart, onSaveComplete, isAnimating);\n    // Use requestIdleCallback for backend saves to avoid blocking animations\n    if (window.requestIdleCallback) {\n      window.requestIdleCallback(() => {\n        // Double-check animation state before backend save\n        const stillAnimating = isAnimating || Object.values(modalAnimationStates).some(state => state);\n        if (!stillAnimating) {\n          saveToBackend(data);\n        }\n      }, { timeout: 5000 });\n    } else {\n      setTimeout(() => {\n        const stillAnimating = isAnimating || Object.values(modalAnimationStates).some(state => state);\n        if (!stillAnimating) {\n          saveToBackend(data);\n        }\n      }, 100); // Longer delay fallback\n    }\n  }, [addToast, isAnimating, modalAnimationStates, caseModal.isOpen, topicModal.isOpen, taskModal.isOpen, literatureModal.isOpen]);\n\n  // Separate function for position-only updates (more frequent, less critical)\n  const autoSavePositionData = useCallback((data) => {\n    // Enhanced checks for animation states\n    const anyModalOpen = caseModal.isOpen || topicModal.isOpen || taskModal.isOpen || literatureModal.isOpen;\n    const anyModalAnimating = Object.values(modalAnimationStates).some(state => state);\n    if (isAnimating || anyModalOpen || anyModalAnimating) return;\n    \n    // Save to localStorage immediately\n    localStorageUtils.save(data, null, null, isAnimating);\n    \n    // Also save to backend with a small delay to batch updates\n    clearTimeout(window.positionBackendSaveTimeout);\n    window.positionBackendSaveTimeout = setTimeout(() => {\n      // Call saveToBackend indirectly to avoid initialization issues\n      autoSaveMindMapData(data);\n    }, 800); // 800ms delay to batch multiple position changes\n  }, [isAnimating, modalAnimationStates, caseModal.isOpen, topicModal.isOpen, taskModal.isOpen, literatureModal.isOpen, autoSaveMindMapData]);\n\n  // Stable data effects to prevent modal re-renders during auto-save\n  useEffect(() => {\n    if (caseModal.isOpen && caseModal.data) {\n      // Store stable reference when modal opens\n      caseModalStableData.current = { ...caseModal.data };\n    } else if (!caseModal.isOpen) {\n      // Clear reference when modal closes\n      caseModalStableData.current = null;\n    }\n  }, [caseModal.isOpen, caseModal.data?.id]);\n\n  useEffect(() => {\n    if (topicModal.isOpen && topicModal.data) {\n      topicModalStableData.current = { ...topicModal.data };\n    } else if (!topicModal.isOpen) {\n      topicModalStableData.current = null;\n    }\n  }, [topicModal.isOpen, topicModal.data?.id]);\n\n  useEffect(() => {\n    if (taskModal.isOpen && taskModal.data) {\n      taskModalStableData.current = { ...taskModal.data };\n    } else if (!taskModal.isOpen) {\n      taskModalStableData.current = null;\n    }\n  }, [taskModal.isOpen, taskModal.data?.id]);\n\nconst handleDeleteNode = useCallback((fullNodeId) => {\n  // fullNodeId is always in the format `${nodeType}-${id}`\n  console.log(`Deleting node with full ID:`, fullNodeId);\n\n  // Extract nodeType and id from fullNodeId\n  const [nodeType, ...idParts] = fullNodeId.split('-');\n  const nodeId = idParts.join('-');\n  const collectionKey = nodeType === 'literature' ? 'literature' : `${nodeType}s`;\n\n  setMindMapData(prevData => {\n    // Remove the node from its collection\n    const updatedCollection = (prevData[collectionKey] || []).filter(item => String(item.id) !== nodeId);\n    // Remove any connections that are attached to the deleted node\n    const updatedConnections = (prevData.connections || []).filter(\n      conn => conn.source !== fullNodeId && conn.target !== fullNodeId\n    );\n    const newData = {\n      ...prevData,\n      [collectionKey]: updatedCollection,\n      connections: updatedConnections,\n    };\n    autoSaveMindMapData(newData);\n    addToast(`${nodeType.charAt(0).toUpperCase() + nodeType.slice(1)} deleted.`, 'success');\n    return newData;\n  });\n  // Remove the node from the visual state\n  setNodes((nds) => nds.filter((node) => node.id !== fullNodeId));\n  // Remove edges referencing this node\n  setEdges((eds) => eds.filter((edge) => edge.source !== fullNodeId && edge.target !== fullNodeId));\n}, [setMindMapData, autoSaveMindMapData, addToast, setNodes, setEdges]);\n\n// Handle literature node click to open modal\nconst handleLiteratureClick = useCallback((literatureData) => {\n  setIsAnimating(true); // Set animation state\n  setLiteratureModal({ isOpen: true, data: literatureData });\n  // Clear animation state after modal animation completes\n  setTimeout(() => setIsAnimating(false), 700); // 600ms modal animation + 100ms buffer\n}, []);\n\n// Enhanced node sync function that forces React Flow re-renders\nconst syncNodeData = useCallback(() => {\n  console.log('syncNodeData called - syncing node colors and labels');\n  \n  setNodes(currentNodes => {\n    let hasChanges = false;\n    const updatedNodes = currentNodes.map(node => {\n      const nodeType = node.id.split('-')[0];\n      const nodeId = node.id.split('-')[1];\n      \n      let newLabel = node.data.label;\n      let newColor = node.data.color;\n      let needsUpdate = false;\n      \n      // Find the corresponding data item and sync properties\n      if (nodeType === 'case') {\n        const caseData = mindMapData.cases?.find(c => String(c.id) === nodeId);\n        if (caseData) {\n          const expectedLabel = caseData.primaryDiagnosis || caseData.primary_diagnosis || caseData.title || 'Untitled Case';\n          if (expectedLabel !== node.data.label) {\n            newLabel = expectedLabel;\n            needsUpdate = true;\n          }\n        }\n      } else if (nodeType === 'topic') {\n        const topicData = mindMapData.topics?.find(t => String(t.id) === nodeId);\n        if (topicData) {\n          const expectedLabel = topicData.title || 'Untitled Topic';\n          const expectedColor = topicData.color || '#3B82F6';\n          \n          if (expectedLabel !== node.data.label) {\n            newLabel = expectedLabel;\n            needsUpdate = true;\n          }\n          \n          if (expectedColor !== node.data.color) {\n            newColor = expectedColor;\n            needsUpdate = true;\n            console.log(`Topic ${nodeId}: Color changing from ${node.data.color} to ${expectedColor}`);\n          }\n        }\n      } else if (nodeType === 'task') {\n        const taskData = mindMapData.tasks?.find(t => String(t.id) === nodeId);\n        if (taskData) {\n          const expectedLabel = taskData.title || 'Untitled Task';\n          if (expectedLabel !== node.data.label) {\n            newLabel = expectedLabel;\n            needsUpdate = true;\n          }\n        }\n      } else if (nodeType === 'literature') {\n        const literatureData = mindMapData.literature?.find(l => String(l.id) === nodeId);\n        if (literatureData) {\n          const expectedLabel = literatureData.title || 'Untitled Literature';\n          if (expectedLabel !== node.data.label) {\n            newLabel = expectedLabel;\n            needsUpdate = true;\n          }\n        }\n      }\n      \n      // Create entirely new node object if something changed (forces React Flow re-render)\n      if (needsUpdate) {\n        hasChanges = true;\n        // Force React to treat this as a completely new object\n        const timestamp = Date.now();\n        const newNode = {\n          id: node.id,\n          type: node.type,\n          position: { ...node.position },\n          data: {\n            ...node.data,\n            label: newLabel,\n            color: newColor,\n            // Add timestamp to force re-render\n            lastUpdated: timestamp\n          },\n          // Force new style object for topic nodes\n          style: nodeType === 'topic' ? {\n            backgroundColor: newColor,\n            color: 'white',\n            boxShadow: `0 4px 20px ${newColor}20`,\n            transition: 'all 0.7s cubic-bezier(0.34, 1.56, 0.64, 1), transform 0.3s ease',\n            // Force React to detect change\n            zIndex: timestamp % 1000\n          } : node.style,\n          // Add a rendering key to force React Flow update\n          key: `${node.id}-${timestamp}`\n        };\n        \n        return newNode;\n      }\n      \n      return node;\n    });\n    \n    if (hasChanges) {\n      console.log('syncNodeData: Changes detected, updating nodes with forced re-render');\n      // Return completely new array to force React Flow update\n      return [...updatedNodes];\n    } else {\n      console.log('syncNodeData: No changes needed');\n      return currentNodes;\n    }\n  });\n}, [mindMapData, setNodes]);\n\n// Trigger auto-sync when mindMapData changes with enhanced detection\nuseEffect(() => {\n  const hasData = mindMapData && (mindMapData.cases?.length > 0 || mindMapData.topics?.length > 0 || \n                                 mindMapData.tasks?.length > 0 || mindMapData.literature?.length > 0);\n  \n  if (hasData) {\n    // Add small delay to ensure state has settled\n    const timeoutId = setTimeout(() => {\n      console.log('useEffect triggered syncNodeData due to mindMapData change');\n      syncNodeData();\n    }, 50);\n    \n    // If we don't have nodes but we have data, convert data to React Flow\n    if (nodes.length === 0) {\n      console.log('Converting data to React Flow nodes due to data change');\n      // Use a timeout to avoid dependency issues and ensure state is stable\n      setTimeout(() => {\n        convertDataToReactFlow(mindMapData, false); // CHANGED: Don't apply force layout automatically\n      }, 100);\n    }\n    \n    return () => clearTimeout(timeoutId);\n  }\n}, [mindMapData, syncNodeData, nodes.length]); // Updated to use syncNodeData\n\n// Force node update when trigger changes\nuseEffect(() => {\n  if (nodeUpdateTrigger > 0) {\n    console.log('Force update triggered by nodeUpdateTrigger:', nodeUpdateTrigger);\n    setTimeout(() => {\n      syncNodeData();\n    }, 100);\n  }\n}, [nodeUpdateTrigger, syncNodeData]);\n\n  const convertDataToReactFlow = useCallback(async (data, applyLayoutImmediately = false) => {\n    // Use optimized quick layout for initial load\n    const allItems = [\n      ...data.topics.map(item => ({ ...item, type: 'topic' })),\n      ...data.cases.map(item => ({ ...item, type: 'case' })),\n      ...data.tasks.map(item => ({ ...item, type: 'task' })),\n      ...data.literature.map(item => ({ ...item, type: 'literature' }))\n    ];\n\n    // If we have data and need immediate layout, apply force layout to positions\n    let layoutNodes;\n    \n    // Check if nodes already have positions - if they do, don't override with force layout\n    const hasExistingPositions = allItems.some(item => \n      item.position && typeof item.position.x === 'number' && typeof item.position.y === 'number'\n    );\n    \n    if (allItems.length > 0 && applyLayoutImmediately && !hasExistingPositions) {\n      try {\n        // Lazy load D3 force simulation for initial positioning\n        const { \n          forceSimulation, \n          forceManyBody, \n          forceLink, \n          forceCenter, \n          forceCollide \n        } = await loadD3Force();\n\n        // Create nodes for simulation\n        const simulationNodes = allItems.map((item, index) => ({\n          id: `${item.type}-${item.id}`,\n          x: item.position?.x || (Math.random() - 0.5) * 200,\n          y: item.position?.y || (Math.random() - 0.5) * 200,\n          type: item.type\n        }));\n\n        // Create D3-compatible edge objects\n        const d3Edges = (data.connections || []).map(edge => ({\n          source: edge.source,\n          target: edge.target,\n          id: edge.id\n        })).filter(edge => {\n          const nodeIds = new Set(simulationNodes.map(n => n.id));\n          return nodeIds.has(edge.source) && nodeIds.has(edge.target);\n        });\n\n        // Run simulation synchronously for initial layout\n        const simulation = forceSimulation(simulationNodes)\n          .force('link', forceLink(d3Edges).id(d => d.id).distance(200).strength(0.5))\n          .force('charge', forceManyBody().strength(-800).distanceMax(400))\n          .force('center', forceCenter(window.innerWidth / 3, window.innerHeight / 2))\n          .force('collision', forceCollide().radius(80))\n          .stop();\n\n        // Run enough ticks to get a good layout\n        for (let i = 0; i < 300; i++) {\n          simulation.tick();\n        }\n\n        // Create a map of positioned nodes\n        const positionMap = new Map();\n        simulationNodes.forEach(node => {\n          positionMap.set(node.id, { x: node.x, y: node.y });\n        });\n\n        layoutNodes = allItems.map(item => {\n          const nodeId = `${item.type}-${item.id}`;\n          const position = positionMap.get(nodeId) || { x: 0, y: 0 };\n          return { ...item, position };\n        });\n      } catch (error) {\n        console.warn('Failed to apply initial layout, using fallback positioning:', error);\n        layoutNodes = allItems;\n      }\n    } else {\n      layoutNodes = allItems;\n    }\n\n    // Quick layout without expensive calculations - ensure all nodes get proper positions\n    const quickNodes = (layoutNodes || allItems).map((item, index) => {\n      const nodeId = `${item.type}-${item.id}`;\n      \n      // Convert case fields efficiently\n      const nodeData = item.type === 'case' ? {\n        ...item,\n        chiefComplaint: item.chiefComplaint || item.chief_complaint || '',\n        initialPresentation: item.initialPresentation || item.initial_presentation || '',\n        currentPresentation: item.currentPresentation || item.current_presentation || '',\n        medicationHistory: item.medicationHistory || item.medication_history || '',\n        therapyProgress: item.therapyProgress || item.therapy_progress || '',\n        defensePatterns: item.defensePatterns || item.defense_patterns || '',\n        clinicalReflection: item.clinicalReflection || item.clinical_reflection || ''\n      } : item;\n\n      // Ensure proper positioning: use existing position, or create grid-based position\n      let position;\n      if (item.position && typeof item.position.x === 'number' && typeof item.position.y === 'number') {\n        position = item.position;\n      } else {\n        // Create grid-based layout for nodes without positions\n        const gridSize = Math.ceil(Math.sqrt(allItems.length));\n        const nodeSpacing = 250;\n        const offsetX = 300; // Offset from left sidebar\n        const offsetY = 150; // Offset from top\n        \n        position = {\n          x: (index % gridSize) * nodeSpacing + offsetX,\n          y: Math.floor(index / gridSize) * nodeSpacing + offsetY\n        };\n      }\n\n      return {\n        id: nodeId,\n        type: item.type,\n        position: position,\n        data: { \n          ...nodeData, \n          label: item.title || item.label || `Untitled ${item.type}`, // Ensure label matches title\n          color: item.color || '#3B82F6', // Include color in data\n          onDelete: () => handleDeleteNode(nodeId),\n          onLiteratureClick: item.type === 'literature' ? handleLiteratureClick : undefined,\n          skipAnimation: isInitialLoad // Use the isInitialLoad state\n        },\n        style: item.type === 'topic' ? {\n          backgroundColor: item.color || '#3B82F6' // Set style for topic nodes\n        } : undefined\n      };\n    });\n\n    // Create optimized edges\n    const optimizedEdges = createOptimizedEdges(\n      data.connections || [], \n      quickNodes.map(n => n.id)\n    );\n\n    // Set nodes and edges immediately for fast UI response\n    setNodes(quickNodes);\n    setEdges(optimizedEdges);\n  }, [setNodes, setEdges, handleDeleteNode, handleLiteratureClick, isInitialLoad]);\n\n  const saveToBackend = useCallback(async (data) => {\n    // Deep clone the data to avoid modifying the original\n    const cleanData = {\n      topics: JSON.parse(JSON.stringify(data.topics || [])),\n      cases: JSON.parse(JSON.stringify(data.cases || [])),\n      tasks: JSON.parse(JSON.stringify(data.tasks || [])),\n      literature: JSON.parse(JSON.stringify(data.literature || [])),\n      connections: JSON.parse(JSON.stringify(data.connections || []))\n    };\n    \n    try {\n      \n      // Current timestamp for created_at/updated_at fields\n      const now = new Date().toISOString();\n      \n      // Clean and validate topics\n      cleanData.topics = cleanData.topics.map((topic, index) => {\n        // Ensure all required fields exist\n        return {\n          id: String(topic.id || `${Date.now()}-${index}-topic`),\n          title: topic.title || \"Untitled Topic\",\n          description: topic.description || \"\",\n          category: topic.category || \"Uncategorized\",\n          color: topic.color || \"#3B82F6\",\n          position: {\n            x: Number(topic.position?.x) || 0,\n            y: Number(topic.position?.y) || 0\n          },\n          flashcard_count: Number(topic.flashcard_count) || 0,\n          completed_flashcards: Number(topic.completed_flashcards) || 0,\n          resources: Array.isArray(topic.resources) ? topic.resources : [],\n          created_at: topic.created_at || now,\n          updated_at: now\n        };\n      });\n      \n      // Clean and validate cases\n      cleanData.cases = cleanData.cases.map((caseItem, index) => {\n        // Ensure all required fields exist, handle both camelCase and snake_case\n        return {\n          id: String(caseItem.id || `${Date.now()}-${index}-case`),\n          case_id: caseItem.case_id || `CASE-${Date.now()}-${index}`,\n          encounter_date: caseItem.encounter_date || now,\n          primary_diagnosis: caseItem.primary_diagnosis || \"Unspecified\",\n          secondary_diagnoses: Array.isArray(caseItem.secondary_diagnoses) ? caseItem.secondary_diagnoses : [],\n          age: caseItem.age !== undefined ? Number(caseItem.age) : null,\n          gender: caseItem.gender || null,\n          // Handle both camelCase (frontend) and snake_case (backend) field names\n          chief_complaint: caseItem.chiefComplaint || caseItem.chief_complaint || \"\",\n          initial_presentation: caseItem.initialPresentation || caseItem.initial_presentation || \"\",\n          current_presentation: caseItem.currentPresentation || caseItem.current_presentation || \"\",\n          medication_history: caseItem.medicationHistory || caseItem.medication_history || \"\",\n          therapy_progress: caseItem.therapyProgress || caseItem.therapy_progress || \"\",\n          defense_patterns: caseItem.defensePatterns || caseItem.defense_patterns || \"\",\n          clinical_reflection: caseItem.clinicalReflection || caseItem.clinical_reflection || \"\",\n          history_present_illness: caseItem.history_present_illness || null,\n          medical_history: caseItem.medical_history || null,\n          medications: Array.isArray(caseItem.medications) ? caseItem.medications : [],\n          mental_status_exam: caseItem.mental_status_exam || null,\n          assessment_plan: caseItem.assessment_plan || null,\n          notes: caseItem.notes || null,\n          status: caseItem.status || \"active\",\n          linked_topics: Array.isArray(caseItem.linked_topics) ? caseItem.linked_topics : [],\n          position: {\n            x: Number(caseItem.position?.x) || 0,\n            y: Number(caseItem.position?.y) || 0\n          },\n          created_at: caseItem.created_at || now,\n          updated_at: now\n        };\n      });\n      \n      // Clean and validate tasks\n      cleanData.tasks = cleanData.tasks.map((task, index) => {\n        // Ensure all required fields exist\n        return {\n          id: String(task.id || `${Date.now()}-${index}-task`),\n          title: task.title || \"Untitled Task\",\n          description: task.description || null,\n          status: task.status || \"pending\",\n          priority: task.priority || \"medium\",\n          due_date: task.due_date || null,\n          linked_case_id: task.linked_case_id || null,\n          linked_topic_id: task.linked_topic_id || null,\n          position: {\n            x: Number(task.position?.x) || 0,\n            y: Number(task.position?.y) || 0\n          },\n          created_at: task.created_at || now,\n          updated_at: now\n        };\n      });\n      \n      // Clean and validate literature\n      cleanData.literature = cleanData.literature.map((lit, index) => {\n        // Ensure all required fields exist\n        return {\n          id: String(lit.id || `${Date.now()}-${index}-lit`),\n          title: lit.title || \"Untitled Literature\",\n          authors: lit.authors || null,\n          publication: lit.publication || null,\n          year: lit.year !== undefined ? Number(lit.year) : null,\n          doi: lit.doi || null,\n          abstract: lit.abstract || null,\n          notes: lit.notes || null,\n          pdf_path: lit.pdf_path || null,\n          linked_topics: Array.isArray(lit.linked_topics) ? lit.linked_topics : [],\n          position: {\n            x: Number(lit.position?.x) || 0,\n            y: Number(lit.position?.y) || 0\n          },\n          created_at: lit.created_at || now,\n          updated_at: now\n        };\n      });\n      \n      // Clean and validate connections\n      cleanData.connections = cleanData.connections.map((conn, index) => {\n        // For connections, we only need these basic properties\n        return {\n          id: String(conn.id || `${Date.now()}-${index}-conn`),\n          source: conn.source || \"\",\n          target: conn.target || \"\",\n          label: conn.label || \"\"\n        };\n      });\n      \n      // Filter out any items with empty or invalid source/target\n      cleanData.connections = cleanData.connections.filter(conn => \n        conn.source && conn.target && \n        typeof conn.source === 'string' && \n        typeof conn.target === 'string' && \n        conn.source.length > 0 && \n        conn.target.length > 0\n      );\n      \n      console.log('Sending cleaned data to backend:', cleanData);\n      \n      const response = await axios.put(`${API}/mindmap-data`, cleanData, {\n        headers: { 'Content-Type': 'application/json' }\n      });\n      \n      console.log('Backend save successful:', response.data);\n    } catch (err) {\n      console.error('Failed to save to backend:', err.response?.data || err.message);\n      \n      // Log detailed validation errors\n      if (err.response?.status === 422 && err.response?.data?.detail) {\n        console.error('Validation errors:');\n        console.error(JSON.stringify(err.response.data.detail, null, 2));\n        \n        // Log the request data that caused the error\n        console.error('Request data that caused validation error:');\n        console.error(JSON.stringify(cleanData, null, 2));\n      }\n      \n      // Don't throw the error to prevent breaking the app\n    }\n  }, []);\n\n  const onConnect = useCallback((params) => {\n    const edgeId = `conn-${Date.now()}`;\n    const newEdge = { \n      ...params, \n      id: edgeId,\n      type: 'floating', // Use our high-performance floating edge type\n      style: { \n        strokeWidth: 2, \n        stroke: '#64748b',\n        opacity: 0.85,\n        transition: 'none' // Critical: disable transitions for immediate updates\n      },\n      // Add a unique timestamp to force React to re-render this edge when source or target nodes move\n      data: { __forceUpdate: Date.now() },\n      interactionWidth: 20 // Wider area for interaction\n    };\n    setEdges((eds) => addEdge(newEdge, eds));\n    setMindMapData(prev => {\n      const newConnections = [...prev.connections, { \n        id: newEdge.id, \n        source: params.source, \n        target: params.target, \n        label: '' \n      }];\n      const newData = { ...prev, connections: newConnections };\n      autoSaveMindMapData(newData);\n      return newData;\n    });\n  }, [setEdges, setMindMapData, autoSaveMindMapData]);\n\n  const onNodeClick = useCallback((event, node) => {\n    setSelectedNode(node);\n    // Visual feedback - highlight selected node\n    setNodes(currentNodes => currentNodes.map(n => ({\n      ...n,\n      selected: n.id === node.id\n    })));\n  }, [setNodes]);\n\n  const onNodeDoubleClick = useCallback((event, node) => {\n    // Handle multi-part IDs correctly by joining all parts after the type\n    const parts = node.id.split('-');\n    const type = parts[0];\n    const id = parts.slice(1).join('-'); // Join all parts after the first one\n    \n    // Prevent multiple rapid clicks by checking if modal is already open\n    if (type === 'case' && caseModal.isOpen) return;\n    if (type === 'topic' && topicModal.isOpen) return;\n    if (type === 'task' && taskModal.isOpen) return;\n    if (type === 'literature' && literatureModal.isOpen) return;\n    \n    // Route to appropriate specialized modal based on node type\n    if (type === 'literature') {\n      const dataItem = mindMapData.literature.find(item => String(item.id) === id);\n      if (dataItem) {\n        setLiteratureModal({ isOpen: true, data: dataItem });\n      }\n      return;\n    }\n    \n    if (type === 'case') {\n      const dataItem = mindMapData.cases.find(item => String(item.id) === id);\n      if (dataItem) {\n        setModalAnimationStates(prev => ({ ...prev, case: true }));\n        setCaseModal({ isOpen: true, data: dataItem });\n        // Clear animation state after modal animation completes\n        setTimeout(() => {\n          setModalAnimationStates(prev => ({ ...prev, case: false }));\n        }, 800);\n      }\n      return;\n    }\n    \n    if (type === 'topic') {\n      const dataItem = mindMapData.topics.find(item => String(item.id) === id);\n      if (dataItem) {\n        setModalAnimationStates(prev => ({ ...prev, topic: true }));\n        setTopicModal({ isOpen: true, data: dataItem });\n        // Clear animation state after modal animation completes\n        setTimeout(() => {\n          setModalAnimationStates(prev => ({ ...prev, topic: false }));\n        }, 800);\n      }\n      return;\n    }\n    \n    if (type === 'task') {\n      const dataItem = mindMapData.tasks.find(item => String(item.id) === id);\n      if (dataItem) {\n        setModalAnimationStates(prev => ({ ...prev, task: true }));\n        setTaskModal({ isOpen: true, data: dataItem });\n        // Clear animation state after modal animation completes\n        setTimeout(() => {\n          setModalAnimationStates(prev => ({ ...prev, task: false }));\n        }, 800);\n      }\n      return;\n    }\n  }, [mindMapData, caseModal.isOpen, topicModal.isOpen, taskModal.isOpen, literatureModal.isOpen]);\n\n  const onEdgeDoubleClick = useCallback((event, edge) => {\n    // Double-click to delete edge immediately\n    setEdges(eds => eds.filter(e => e.id !== edge.id));\n    setMindMapData(prev => {\n      const newConnections = prev.connections.filter(conn => conn.id !== edge.id);\n      const newData = { ...prev, connections: newConnections };\n      autoSaveMindMapData(newData);\n      addToast('Connection deleted', 'success');\n      return newData;\n    });\n  }, [setEdges, setMindMapData, autoSaveMindMapData, addToast]);\n\n  const onEdgeContextMenu = useCallback((event, edge) => {\n    // Right-click to edit edge label\n    event.preventDefault();\n    setEdgeModal({ isOpen: true, edge: edge });\n  }, []);\n\n  const handleSaveEdgeLabel = useCallback((edgeId, label) => {\n    setEdges(eds =>\n      eds.map(edge =>\n        edge.id === edgeId ? { ...edge, label: label } : edge\n      )\n    );\n    setMindMapData(prev => {\n      const newConnections = prev.connections.map(conn =>\n        conn.id === edgeId ? { ...conn, label: label } : conn\n      );\n      const newData = { ...prev, connections: newConnections };\n      autoSaveMindMapData(newData);\n      return newData;\n    });\n  }, [setEdges, setMindMapData, autoSaveMindMapData]);\n\n  // Edge hover handlers for highlighting\n  const onEdgeMouseEnter = useCallback((event, edge) => {\n    setEdges(eds =>\n      eds.map(e =>\n        e.id === edge.id ? { ...e, className: 'highlighted' } : e\n      )\n    );\n  }, [setEdges]);\n\n  const onEdgeMouseLeave = useCallback((event, edge) => {\n    setEdges(eds =>\n      eds.map(e =>\n        e.id === edge.id ? { ...e, className: '' } : e\n      )\n    );\n  }, [setEdges]);\n\n  // Lazy-loaded force-directed layout for better performance\n  const forceLayout = useCallback(async () => {\n    if (nodes.length === 0) return;\n\n    try {\n      // Lazy load D3 force simulation\n      const { \n        forceSimulation, \n        forceManyBody, \n        forceLink, \n        forceCenter, \n        forceCollide \n      } = await loadD3Force();\n\n      // Preserve the current edges before layout\n      const currentEdges = [...edges];\n      \n      // Create a set of valid node IDs for fast lookup\n      const nodeIdSet = new Set(nodes.map(node => node.id));\n      \n      // Filter edges to only include those with both source and target nodes present\n      const validEdges = currentEdges.filter(edge => \n        nodeIdSet.has(edge.source) && nodeIdSet.has(edge.target)\n      );\n\n      // Create D3-compatible edge objects for the force simulation\n      const d3Edges = validEdges.map(edge => ({\n        source: edge.source,\n        target: edge.target,\n        id: edge.id\n      }));\n\n      // Create a copy of nodes for simulation (D3 mutates the objects)\n      const simulationNodes = nodes.map(node => ({ \n        id: node.id,\n        x: node.position.x, \n        y: node.position.y,\n        fx: null, // Remove any fixed positions\n        fy: null\n      }));\n\n      // Create simulation with optimized forces for mind map layout\n      const simulation = forceSimulation(simulationNodes)\n        .force('link', forceLink(d3Edges).id(d => d.id).distance(200).strength(0.5))\n        .force('charge', forceManyBody().strength(-800).distanceMax(400))\n        .force('center', forceCenter(window.innerWidth / 3, window.innerHeight / 2))\n        .force('collision', forceCollide().radius(80))\n        .stop();\n\n      // Run simulation in chunks to prevent blocking\n      const ticksPerFrame = 50;\n      const totalTicks = 400;\n      let currentTick = 0;\n\n      const runSimulationChunk = () => {\n        const remainingTicks = Math.min(ticksPerFrame, totalTicks - currentTick);\n        for (let i = 0; i < remainingTicks; i++) {\n          simulation.tick();\n        }\n        currentTick += remainingTicks;\n\n        if (currentTick < totalTicks) {\n          requestAnimationFrame(runSimulationChunk);\n        } else {\n          // Simulation complete, update nodes\n          const updatedNodes = simulationNodes.map(simNode => {\n            const originalNode = nodes.find(n => n.id === simNode.id);\n            return {\n              ...originalNode,\n              position: { x: simNode.x, y: simNode.y },\n            };\n          });\n          \n          // Update both nodes and edges in a single batch\n          setNodes(updatedNodes);\n          setEdges(validEdges);\n\n          // Update mindMapData with new positions\n          setMindMapData(currentData => {\n            const updatedData = { ...currentData };\n            \n            updatedNodes.forEach(node => {\n              const [type, id] = node.id.split('-');\n              const key = type === 'literature' ? 'literature' : `${type}s`;\n              const item = updatedData[key]?.find(i => String(i.id) === id);\n              if (item) {\n                item.position = node.position;\n              }\n            });\n            \n            return updatedData;\n          });\n\n          // Smooth camera transition to fit the new layout\n          setTimeout(() => {\n            fitView({ duration: 800, padding: 0.2 });\n          }, 200);\n        }\n      };\n\n      // Start simulation in next frame\n      requestAnimationFrame(runSimulationChunk);\n    } catch (error) {\n      console.error('Force layout failed:', error);\n      addToast('Layout calculation failed', 'error');\n    }\n  }, [nodes, edges, setNodes, setEdges, setMindMapData, fitView, addToast]);\n\n  // applyForceLayout wrapper function (defined after forceLayout)\n  const applyForceLayout = useCallback(() => {\n    try {\n      forceLayout();\n      addToast('Nodes realigned successfully', 'success');\n    } catch (error) {\n      console.error('Force layout error:', error);\n      addToast('Failed to realign nodes', 'error');\n    }\n  }, [forceLayout, addToast]);\n\n  const handleClearMap = useCallback(() => {\n    if (!window.confirm('Are you sure you want to clear the entire mind map?')) return;\n\n    const empty = { topics: [], cases: [], tasks: [], literature: [], connections: [] };\n    setMindMapData(empty);\n    setNodes([]);\n    setEdges([]);\n    setSelectedNode(null);\n    // Clear all modal states\n    setCaseModal({ isOpen: false, data: null });\n    setTopicModal({ isOpen: false, data: null });\n    setTaskModal({ isOpen: false, data: null });\n    setLiteratureModal({ isOpen: false, data: null });\n    setFocusedCategory(null);\n    autoSaveMindMapData(empty);\n    addToast('Mind map cleared successfully', 'success');\n  }, [setNodes, setEdges, autoSaveMindMapData, addToast]);\n\n  const addNewNode = useCallback((nodeType) => {\n    const dataId = Date.now();\n    const id = `${nodeType}-${dataId}`;\n    \n    // Create node data object with appropriate fields based on type\n    let nodeData = { id: dataId, label: `New ${nodeType}` };\n    \n    // For case nodes, add structured fields\n    if (nodeType === 'case') {\n      nodeData = {\n        ...nodeData,\n        chiefComplaint: '',\n        initialPresentation: '',\n        currentPresentation: '',\n        medicationHistory: '',\n        therapyProgress: '',\n        defensePatterns: '',\n        clinicalReflection: ''\n      };\n    }\n    \n    // Calculate grid-based position for new nodes to avoid clustering\n    // Use current data count instead of nodes.length for more accurate positioning\n    const currentDataCount = (mindMapData.topics?.length || 0) + \n                           (mindMapData.cases?.length || 0) + \n                           (mindMapData.tasks?.length || 0) + \n                           (mindMapData.literature?.length || 0);\n    \n    const gridSize = Math.ceil(Math.sqrt(currentDataCount + 1));\n    const nodeSpacing = 280;\n    const offsetX = 400; // Offset from left sidebar\n    const offsetY = 150; // Offset from top\n    \n    const gridPosition = {\n      x: (currentDataCount % gridSize) * nodeSpacing + offsetX,\n      y: Math.floor(currentDataCount / gridSize) * nodeSpacing + offsetY\n    };\n    \n    const newNode = {\n      id,\n      type: nodeType,\n      position: gridPosition,\n      data: { ...nodeData, onDelete: () => handleDeleteNode(id) }\n    };\n\n    setMindMapData(d => {\n      const key = nodeType === 'literature' ? 'literature' : `${nodeType}s`;\n      const dataToAdd = { ...newNode.data, position: newNode.position };\n      delete dataToAdd.onDelete;\n      const updatedData = {\n        ...d,\n        [key]: [...(d[key] || []), dataToAdd]\n      };\n      autoSaveMindMapData(updatedData);\n      return updatedData;\n    });\n\n    setNodes(n => n.concat(newNode));\n    addToast(`${nodeType.charAt(0).toUpperCase() + nodeType.slice(1)} added successfully`, 'success');\n  }, [mindMapData, handleDeleteNode, setMindMapData, autoSaveMindMapData, setNodes, addToast]);\n\n  const handleNodesChange = useCallback((changes) => {\n    // Apply the node changes to React Flow state immediately - this is critical!\n    onNodesChange(changes);\n    \n    // Skip heavy operations during animations to prevent interference\n    if (isAnimating) {\n      console.log('Skipping position updates during animation');\n      return;\n    }\n\n\n    \n    // Process position changes for data persistence - SIMPLIFIED\n    const positionChanges = changes.filter(change => \n      change.type === 'position' && change.position\n    );\n    \n    if (positionChanges.length > 0) {\n      console.log('Processing position changes:', positionChanges);\n      \n      // Update mindMapData immediately without complex debouncing\n      setMindMapData(currentData => {\n        const updatedData = { ...currentData };\n        \n        positionChanges.forEach(change => {\n          if (change.position) {\n            const [type, id] = change.id.split('-');\n            const key = type === 'literature' ? 'literature' : `${type}s`;\n            const item = updatedData[key]?.find(i => String(i.id) === id);\n            \n            if (item) {\n              item.position = { ...change.position };\n              console.log(`Updated ${type} ${id} position to:`, change.position);\n            }\n          }\n        });\n        \n        // Save to localStorage immediately\n        localStorageUtils.save(updatedData, null, null, false);\n        \n        return updatedData;\n      });\n      \n      // Simple auto-save without complex timeouts\n      setTimeout(() => {\n        autoSaveMindMapData(mindMapData);\n      }, 500);\n    }\n  }, [onNodesChange, setMindMapData, isAnimating, autoSaveMindMapData, mindMapData]);\n\n  const handleNodeDragStop = useCallback((event, node) => {\n    // Debounce the auto-save to prevent excessive backend calls\n    // Position updates are already handled in handleNodesChange during dragging\n    clearTimeout(window.dragSaveTimeout);\n    window.dragSaveTimeout = setTimeout(() => {\n      setMindMapData(currentData => {\n        autoSaveMindMapData(currentData);\n        return currentData;\n      });\n    }, 500);\n  }, [autoSaveMindMapData]);\n\n  const loadMindMapData = useCallback(async () => {\n    setLoading(true);\n    setLoadingProgress(10);\n    setLoadingMessage('Checking local data...');\n    \n    try {\n      // First, try loading from localStorage for instant startup\n      const local = localStorageUtils.load();\n      if (local) {\n        setLoadingProgress(30);\n        setLoadingMessage('Loading from cache...');\n        \n        if (!local.connections) local.connections = [];\n        setMindMapData(local);\n        \n        setLoadingProgress(60);\n        setLoadingMessage('Applying layout...');\n        \n        await convertDataToReactFlow(local, true); // Apply layout immediately\n        \n        setLoadingProgress(90);\n        setLoadingMessage('Finalizing...');\n        \n        setLoading(false);\n        setIsInitialLoad(false);\n        setLoadingProgress(100);\n        \n        // Background sync with backend without blocking UI\n        setTimeout(async () => {\n          try {\n            const response = await axios.get(`${API}/mindmap-data`);\n            if (JSON.stringify(response.data) !== JSON.stringify(local)) {\n              // Only update if data has changed\n              if (!response.data.connections) response.data.connections = [];\n              setMindMapData(response.data);\n              await convertDataToReactFlow(response.data);\n              autoSaveMindMapData(response.data);\n              addToast('Data synchronized with server', 'info');\n            }\n          } catch (err) {\n            console.warn('Background sync failed:', err);\n          }\n        }, 500);\n        \n        return;\n      }\n\n      // If no local data, load from backend\n      setLoadingProgress(20);\n      setLoadingMessage('Loading from server...');\n      \n      try {\n        const response = await axios.get(`${API}/mindmap-data`);\n        if (!response.data.connections) response.data.connections = [];\n        \n        setLoadingProgress(50);\n        setLoadingMessage('Processing data...');\n        \n        setMindMapData(response.data);\n        \n        setLoadingProgress(80);\n        setLoadingMessage('Applying layout...');\n        \n        await convertDataToReactFlow(response.data, true); // Apply layout immediately\n        autoSaveMindMapData(response.data);\n        \n        setLoadingProgress(100);\n        setLoading(false);\n        setIsInitialLoad(false);\n      } catch (backendError) {\n        console.warn('Backend loading failed, populating with sample data:', backendError);\n        \n        // If backend fails, populate with sample data for better UX\n        setLoadingProgress(60);\n        setLoadingMessage('Loading sample data...');\n        \n        // Populate sample data\n        const emptyData = { topics: [], cases: [], tasks: [], literature: [], connections: [] };\n        \n        setMindMapData(emptyData);\n        \n        // Populate sample data\n        setTimeout(() => {\n          populateSampleLiteratureData(setMindMapData, autoSaveMindMapData, addToast);\n        }, 100);\n        \n        setLoadingProgress(100);\n        setLoading(false);\n        setIsInitialLoad(false);\n      }\n    } catch (err) {\n      console.error('Error loading mind map:', err);\n      addToast('Failed to load mind map', 'error');\n      setLoading(false);\n      setIsInitialLoad(false);\n    }\n  }, [addToast, autoSaveMindMapData, convertDataToReactFlow]);\n\n  useEffect(() => {\n    // Load initial mind map data\n    loadMindMapData();\n  }, []); // Run only once on mount\n\n  // Helper function to check if a node matches the search query\n  const nodeMatchesSearch = useCallback((node, query) => {\n    // Guard against null/undefined node\n    if (!node || !node.id || !node.data) return false;\n    \n    // Return early if no query\n    if (!query) return true;\n    \n    // Normalize and trim query\n    const searchTerm = query.toLowerCase().trim();\n    if (!searchTerm) return true;\n    \n    try {\n      // Safely extract node type and ID\n      const parts = node.id.split('-');\n      const nodeType = parts.length > 0 ? parts[0] : '';\n      const nodeId = parts.length > 1 ? parts[1] : '';\n      \n      // Start with no match\n      let hasMatch = false;\n      \n      // 1. Basic title/label matching - most common searches\n      if (!hasMatch && node.data.label) {\n        const label = node.data.label.toLowerCase();\n        hasMatch = label.includes(searchTerm);\n      }\n      \n      // 2. Node type matching\n      if (!hasMatch && nodeType) {\n        hasMatch = nodeType.includes(searchTerm);\n      }\n      \n      // 3. Case ID pattern matching for case nodes\n      if (!hasMatch && nodeType === 'case' && nodeId) {\n        hasMatch = (`case-${nodeId}`).toLowerCase().includes(searchTerm);\n      }\n      \n      // 4. Type-specific content matching\n      if (!hasMatch) {\n        if (nodeType === 'case') {\n          const diagnosis = (node.data.primary_diagnosis || node.data.primaryDiagnosis || '').toLowerCase();\n          hasMatch = diagnosis.includes(searchTerm);\n        } else if (nodeType === 'topic') {\n          const title = (node.data.title || '').toLowerCase();\n          hasMatch = title.includes(searchTerm);\n        } else if (nodeType === 'literature') {\n          const title = (node.data.title || '').toLowerCase();\n          const authors = (node.data.authors || '').toLowerCase();\n          hasMatch = title.includes(searchTerm) || authors.includes(searchTerm);\n        }\n      }\n      \n      // 5. Psychiatric category matching for all node types\n      if (!hasMatch && node.data.category) {\n        const category = node.data.category.toLowerCase();\n        hasMatch = category.includes(searchTerm);\n      }\n      \n      return hasMatch;\n    } catch (error) {\n      console.error('Error in nodeMatchesSearch for node:', node.id, error);\n      return false;\n    }\n  }, []);\n\n  // Keyboard shortcuts\n  useEffect(() => {\n    const handleKeyDown = (event) => {\n      // Only trigger shortcuts when not typing in input fields\n      if (event.target.tagName === 'INPUT' || event.target.tagName === 'TEXTAREA') return;\n      \n      if (event.ctrlKey || event.metaKey) {\n        switch (event.key) {\n          case 'n':\n            event.preventDefault();\n            setShowNodeSelector(true);\n            break;\n          case 'e':\n            event.preventDefault();\n            setIsEditing(!isEditing);\n            break;\n          case 'r':\n            event.preventDefault();\n            applyForceLayout();\n            break;\n          case 'f':\n            event.preventDefault();\n            // Focus the search box\n            document.querySelector('input[type=\"text\"][placeholder*=\"Search\"]')?.focus();\n            break;\n          default:\n            break;\n        }\n      }\n      \n      if (event.key === 'Escape') {\n        setSelectedNode(null);\n        // Close all modals\n        setCaseModal({ isOpen: false, data: null });\n        setTopicModal({ isOpen: false, data: null });\n        setTaskModal({ isOpen: false, data: null });\n        setLiteratureModal({ isOpen: false, data: null });\n        setShowNodeSelector(false);\n        \n        // Clear search if no modals are open\n        if (!caseModal.isOpen && !topicModal.isOpen && !taskModal.isOpen && \n            !literatureModal.isOpen && !showNodeSelector) {\n          // Search functionality removed\n        }\n      }\n    };\n\n    window.addEventListener('keydown', handleKeyDown);\n    return () => window.removeEventListener('keydown', handleKeyDown);\n  }, [applyForceLayout, caseModal, topicModal, taskModal, literatureModal]);\n\n  useEffect(() => {\n    // DISABLED automatic force layout to prevent overriding individual node positions\n    // Force layout should only be applied manually via \"Realign Nodes\" button\n    if (isReactFlowReady && !hasAppliedInitialLayout && nodes.length > 0) {\n      // Just mark as applied without applying force layout \n      setHasAppliedInitialLayout(true);\n    } else if (isInitialLoad && nodes.length > 0) {\n      // For initial load, just mark as applied since layout was already done in convertDataToReactFlow\n      setHasAppliedInitialLayout(true);\n    }\n  }, [isReactFlowReady, hasAppliedInitialLayout, nodes, isInitialLoad]); // Removed forceLayout from dependencies\n\n  // Simplified search and category filtering - no style interference\n  useEffect(() => {\n    if (nodes.length === 0) return;\n    \n    // Skip during animations to prevent interference\n    const anyModalAnimating = Object.values(modalAnimationStates).some(state => state);\n    if (isAnimating || anyModalAnimating) return;\n    \n  }, [focusedCategory, nodes, nodeMatchesSearch, isAnimating, modalAnimationStates]);\n  \n  // CSS-based search filtering - no direct style manipulation\n  useEffect(() => {\n    if (!isReactFlowReady) return;\n    \n    // Apply CSS classes instead of direct style manipulation\n    const styleSheet = document.getElementById('search-filter-styles') || document.createElement('style');\n    styleSheet.id = 'search-filter-styles';\n    \n    if (!document.getElementById('search-filter-styles')) {\n      document.head.appendChild(styleSheet);\n    }\n    \n    // Generate CSS for search filtering\n    let css = `\n      /* Default node styling */\n      .react-flow__node {\n        transition: opacity 0.3s ease, transform 0.3s ease, filter 0.3s ease !important;\n      }\n      \n      /* Search dimmed nodes */\n      .react-flow__node.search-dimmed {\n        opacity: 0.15 !important;\n        filter: grayscale(0.7) !important;\n        transform: scale(0.9) !important;\n      }\n      \n      /* Selected node highlighting */\n      .react-flow__node.search-selected {\n        box-shadow: 0 0 0 2px #10b981, 0 0 20px rgba(16, 185, 129, 0.6) !important;\n        z-index: 1000 !important;\n      }\n      \n      /* Ensure dragging still works */\n      .react-flow__node.search-dimmed {\n        pointer-events: auto !important;\n      }\n    `;\n    \n    styleSheet.textContent = css;\n    \n  }, [isReactFlowReady]);\n\n  // Optionally: handle layout setup on first render if needed\n\n  // Show optimized loading screen during initial load\n  if (loading) {\n    return <OptimizedLoadingScreen message={loadingMessage} progress={loadingProgress} />;\n  }\n\n  // Sophisticated Animation Variants (matching Literature modal quality)\n  const modalVariants = {\n    hidden: {\n      opacity: 0,\n      scale: 0.3,\n      y: 50,\n      rotate: -5,\n    },\n    visible: {\n      opacity: 1,\n      scale: 1,\n      y: 0,\n      rotate: 0,\n      transition: {\n        type: \"spring\",\n        damping: 25,\n        stiffness: 300,\n        duration: 0.6,\n      }\n    },\n    exit: {\n      opacity: 0,\n      scale: 0.7,\n      y: 30,\n      rotate: -3,\n      transition: {\n        type: \"easeInOut\",\n        duration: 0.4,\n      }\n    }\n  };\n\n  const backdropVariants = {\n    hidden: { opacity: 0 },\n    visible: { \n      opacity: 1,\n      transition: { duration: 0.3 }\n    },\n    exit: { \n      opacity: 0,\n      transition: { duration: 0.4 }\n    }\n  };\n\n  const contentVariants = {\n    hidden: {\n      opacity: 0,\n      y: 20,\n      scale: 0.95,\n    },\n    visible: {\n      opacity: 1,\n      y: 0,\n      scale: 1,\n      transition: {\n        type: \"easeOut\",\n        duration: 0.3,\n        delay: 0.1,\n      }\n    },\n    exit: {\n      opacity: 0,\n      y: -10,\n      scale: 1.02,\n      transition: {\n        type: \"easeIn\",\n        duration: 0.2,\n      }\n    }\n  };\n\n  const buttonVariants = {\n    inactive: {\n      scale: 1,\n    },\n    active: {\n      scale: 1.05,\n      transition: {\n        type: \"spring\",\n        damping: 20,\n        stiffness: 300,\n      }\n    },\n    hover: {\n      scale: 1.03,\n      transition: {\n        type: \"easeOut\",\n        duration: 0.2,\n      }\n    }\n  };\n\n  // All modal components are now imported from separate files\n\n  return (\n    <div className=\"min-h-screen bg-gray-50 flex\">\n      {/* --- Left Sidebar --- */}\n      <div className=\"w-80 bg-gradient-to-b from-slate-800 to-slate-900 text-white p-6 shadow-2xl flex flex-col\">\n        <div className=\"mb-8\">\n          <div className=\"text-3xl font-bold tracking-wide text-white\">PGY-3 HQ</div>\n          <div className=\"text-sm text-slate-300 mt-2\">Psychiatry Resident Dashboard</div>\n        </div>\n\n        {/* --- Category Filters --- */}\n        <div className=\"mb-6\">\n          <h3 className=\"text-sm font-semibold text-slate-300 mb-3\">Filter by Category</h3>\n          <div className=\"grid grid-cols-2 gap-2\">\n            <button\n              onClick={() => setFocusedCategory(null)}\n              className={`px-3 py-2 rounded-lg text-xs transition-all ${\n                focusedCategory === null\n                  ? 'bg-teal-600 text-white'\n                  : 'bg-slate-700 text-slate-300 hover:bg-slate-600'\n              }`}\n            >\n              All\n            </button>\n            <button\n              onClick={() => setFocusedCategory('topic')}\n              className={`px-3 py-2 rounded-lg text-xs transition-all flex items-center gap-1 ${\n                focusedCategory === 'topic'\n                  ? 'bg-blue-600 text-white'\n                  : 'bg-slate-700 text-slate-300 hover:bg-slate-600'\n              }`}\n            >\n              <Brain size={12} />\n              Topics\n            </button>\n            <button\n              onClick={() => setFocusedCategory('case')}\n              className={`px-3 py-2 rounded-lg text-xs transition-all flex items-center gap-1 ${\n                focusedCategory === 'case'\n                  ? 'bg-indigo-600 text-white'\n                  : 'bg-slate-700 text-slate-300 hover:bg-slate-600'\n              }`}\n            >\n              <Users size={12} />\n              Cases\n            </button>\n            <button\n              onClick={() => setFocusedCategory('task')}\n              className={`px-3 py-2 rounded-lg text-xs transition-all flex items-center gap-1 ${\n                focusedCategory === 'task'\n                  ? 'bg-amber-600 text-white'\n                  : 'bg-slate-700 text-slate-300 hover:bg-slate-600'\n              }`}\n            >\n              <CheckSquare size={12} />\n              Tasks\n            </button>\n            <button\n              onClick={() => setFocusedCategory('literature')}\n              className={`px-3 py-2 rounded-lg text-xs transition-all flex items-center gap-1 ${\n                focusedCategory === 'literature'\n                  ? 'bg-purple-600 text-white'\n                  : 'bg-slate-700 text-slate-300 hover:bg-slate-600'\n              }`}\n            >\n              <BookOpen size={12} />\n              Literature\n            </button>\n          </div>\n        </div>\n\n        {/* --- Auto-save Status --- */}\n        <div className=\"mb-4 p-3 bg-slate-700 bg-opacity-50 rounded-lg\">\n          <div className=\"flex items-center gap-2 text-xs\">\n            {isSaving ? (\n              <>\n                <Loader2 size={12} className=\"animate-spin\" />\n                <span className=\"text-amber-300\">Saving...</span>\n              </>\n            ) : lastSaved ? (\n              <>\n                <CheckCircle size={12} className=\"text-green-400\" />\n                <span className=\"text-slate-300\">\n                  Last saved: {lastSaved.toLocaleTimeString()}\n                </span>\n              </>\n            ) : (\n              <>\n                <Cloud size={12} className=\"text-slate-400\" />\n                <span className=\"text-slate-400\">Auto-save enabled</span>\n              </>\n            )}\n          </div>\n        </div>\n\n        {/* --- Controls --- */}\n        <div className=\"space-y-3 mb-6\">\n          <LoadingButton onClick={applyForceLayout} icon={Shuffle} className=\"w-full bg-purple-600 hover:bg-purple-700 text-white px-4 py-2 rounded-md text-sm\">\n            Realign Nodes\n          </LoadingButton>\n          <LoadingButton \n            onClick={() => populateSampleLiteratureData(setMindMapData, autoSaveMindMapData, addToast)} \n            icon={BookOpen} \n            className=\"w-full bg-emerald-600 hover:bg-emerald-700 text-white px-4 py-2 rounded-md text-sm\"\n          >\n            Add Sample Literature\n          </LoadingButton>\n          \n          {/* Individual Node Creation Buttons */}\n          <div className=\"space-y-2\">\n            <div className=\"text-xs font-semibold text-slate-400 uppercase tracking-wide mb-2\">Add Nodes</div>\n            <LoadingButton \n              onClick={() => addNewNode('topic')} \n              icon={Brain} \n              className=\"w-full bg-blue-600 hover:bg-blue-700 text-white px-4 py-2 rounded-md text-sm flex items-center gap-2\"\n            >\n              <Brain size={16} />\n              Add Topic\n            </LoadingButton>\n            <LoadingButton \n              onClick={() => addNewNode('case')} \n              icon={Users} \n              className=\"w-full bg-indigo-600 hover:bg-indigo-700 text-white px-4 py-2 rounded-md text-sm flex items-center gap-2\"\n            >\n              <Users size={16} />\n              Add Case\n            </LoadingButton>\n            <LoadingButton \n              onClick={() => addNewNode('task')} \n              icon={CheckSquare} \n              className=\"w-full bg-amber-600 hover:bg-amber-700 text-white px-4 py-2 rounded-md text-sm flex items-center gap-2\"\n            >\n              <CheckSquare size={16} />\n              Add Task\n            </LoadingButton>\n            <LoadingButton \n              onClick={() => addNewNode('literature')} \n              icon={BookOpen} \n              className=\"w-full bg-purple-600 hover:bg-purple-700 text-white px-4 py-2 rounded-md text-sm flex items-center gap-2\"\n            >\n              <BookOpen size={16} />\n              Add Literature\n            </LoadingButton>\n          </div>\n          \n          <LoadingButton onClick={handleClearMap} icon={Trash2} className=\"w-full bg-red-600 hover:bg-red-700 text-white px-4 py-2 rounded-md text-sm\">\n            Clear All Data\n          </LoadingButton>\n        </div>\n\n        {/* --- Selected Node Panel --- */}\n        {selectedNode && (\n          <div className=\"mt-auto p-4 bg-slate-700 bg-opacity-50 rounded-lg\">\n            <h3 className=\"text-sm font-semibold text-slate-300 mb-2\">Selected Node</h3>\n            <div className=\"space-y-2\">\n              <div className=\"flex items-center gap-2\">\n                {selectedNode.type === 'topic' && <Brain size={14} className=\"text-blue-400\" />}\n                {selectedNode.type === 'case' && <Users size={14} className=\"text-indigo-400\" />}\n                {selectedNode.type === 'task' && <CheckSquare size={14} className=\"text-amber-400\" />}\n                {selectedNode.type === 'literature' && <BookOpen size={14} className=\"text-purple-400\" />}\n                <span className=\"text-sm text-white font-medium truncate\">\n                  {selectedNode.data.label}\n                </span>\n              </div>\n              {selectedNode.data.category && (\n                <div className=\"text-xs text-slate-400\">\n                  Category: {selectedNode.data.category}\n                </div>\n              )}\n              {selectedNode.data.status && (\n                <div className=\"text-xs text-slate-400\">\n                  Status: {selectedNode.data.status}\n                </div>\n              )}\n              <button\n                onClick={() => {\n                  const [type, id] = selectedNode.id.split('-');\n                  const key = type === 'literature' ? 'literature' : `${type}s`;\n                  const dataItem = mindMapData[key].find(item => String(item.id) === id);\n                  if (dataItem) {\n                    // Route to appropriate specialized modal\n                    if (type === 'case') {\n                      setCaseModal({ isOpen: true, data: dataItem });\n                    } else if (type === 'topic') {\n                      setTopicModal({ isOpen: true, data: dataItem });\n                    } else if (type === 'task') {\n                      setTaskModal({ isOpen: true, data: dataItem });\n                    } else if (type === 'literature') {\n                      handleLiteratureClick(dataItem);\n                    }\n                  }\n                }}\n                className=\"w-full mt-2 px-3 py-2 bg-slate-600 hover:bg-slate-500 text-white text-xs rounded-lg transition-colors flex items-center gap-2\"\n              >\n                <Eye size={12} />\n                View Details\n              </button>\n            </div>\n          </div>\n        )}\n\n        {/* --- Keyboard Shortcuts Help --- */}\n        {!selectedNode && (\n          <div className=\"mt-auto p-3 bg-slate-700 bg-opacity-30 rounded-lg\">\n            <h4 className=\"text-xs font-semibold text-slate-300 mb-2\">Keyboard Shortcuts</h4>\n            <div className=\"space-y-1 text-xs text-slate-400\">\n              <div>Ctrl+N - Add Node</div>\n              <div>Ctrl+E - Toggle Edit Mode</div>\n              <div>Ctrl+R - Realign Nodes</div>\n              <div>Esc - Clear Selection</div>\n            </div>\n          </div>\n        )}\n      </div>\n\n      {/* --- Main Mind Map Workspace --- */}\n      <div className=\"flex-1 relative\">\n        <ReactFlowErrorBoundary>\n          <ReactFlow\n            nodes={nodes}\n            edges={edges}\n            onNodesChange={handleNodesChange}\n            onEdgesChange={onEdgesChange}\n            onConnect={onConnect}\n            onNodeClick={onNodeClick}\n            onNodeDoubleClick={onNodeDoubleClick}\n            onNodeDragStop={handleNodeDragStop}\n            onEdgeDoubleClick={onEdgeDoubleClick}\n            onEdgeContextMenu={onEdgeContextMenu}\n            onEdgeMouseEnter={onEdgeMouseEnter}\n            onEdgeMouseLeave={onEdgeMouseLeave}\n            nodeTypes={nodeTypes}\n            edgeTypes={{ floating: FloatingEdge, enhanced: EnhancedEdge }}\n            connectionLineComponent={ConnectionLine}\n            nodesDraggable={true}\n            nodesConnectable={true}\n            elementsSelectable={true}\n            onInit={(reactFlowInstance) => {\n              setIsReactFlowReady(true);\n              // Store reference for error recovery\n              window.reactFlowInstance = reactFlowInstance;\n            }}\n            onError={(id, message) => {\n              console.warn('React Flow Error:', id, message);\n              // Ignore dimension-related errors during animations\n              if (isAnimating && message.includes('dimensions')) {\n                return;\n              }\n            }}\n            fitView\n            snapToGrid={false}\n            snapGrid={[15, 15]}\n            elevateEdgesOnSelect={false}\n            connectionLineComponent={ConnectionLine}\n          connectionLineStyle={{\n            stroke: '#3b82f6', // Use a bright blue color for better visibility during connection\n            strokeWidth: 3.5, // Slightly thicker than regular edges\n            opacity: 0.9,\n            strokeLinecap: 'round',\n            strokeDasharray: '5,3', // Shorter dash pattern for more modern look\n            filter: 'drop-shadow(0 0 6px rgba(59, 130, 246, 0.6))', // Softer glow\n            animation: 'flowingDash 1s linear infinite' // Add flowing animation\n          }}\n          defaultEdgeOptions={{\n            type: 'enhanced', // Use our enhanced edge with proper prop handling\n            style: { \n              strokeWidth: 2.5, \n              stroke: '#64748b',\n              opacity: 0.9,\n              strokeLinecap: 'round',\n              transition: 'none'\n            }\n            // Remove pathOptions - this is not a standard React Flow prop\n          }}\n          className=\"bg-gradient-to-br from-blue-50 to-indigo-100\"\n        >\n          <Background color=\"#aaa\" gap={16} />\n          <Controls />\n          <MiniMap />\n        </ReactFlow>\n        </ReactFlowErrorBoundary>\n      </div>\n      \n      {/* --- Modals --- */}\n      {/* Literature Modal */}\n      {literatureModal.isOpen && (\n        <LiteratureModal\n          isOpen={literatureModal.isOpen}\n          onClose={() => {\n            setIsAnimating(true); // Set animation state for closing\n            setLiteratureModal({ isOpen: false, data: null });\n            // Clear animation state after modal close animation completes\n            setTimeout(() => setIsAnimating(false), 500); // 400ms close animation + 100ms buffer\n          }}\n          onAnimationStart={() => setIsAnimating(true)}\n          onAnimationEnd={() => setIsAnimating(false)}\n          literatureData={literatureModal.data}\n          allNodes={nodes}\n          connections={mindMapData.connections || []}\n          setMindMapData={setMindMapData}\n          autoSaveMindMapData={autoSaveMindMapData}\n          addToast={addToast}\n        />\n      )}\n      {/* Specialized Modals with optimized rendering */}\n      <AnimatePresence mode=\"wait\">\n        {caseModal.isOpen && (\n          <CaseModal \n            key={`case-modal-${caseModal.data?.id || 'default'}`}\n            isOpen={caseModal.isOpen} \n            data={caseModalStableData.current || caseModal.data} \n            onClose={() => {\n              setModalAnimationStates(prev => ({ ...prev, case: true }));\n              setCaseModal({ isOpen: false, data: null });\n            }}\n            onAnimationStart={() => {\n              setIsAnimating(true);\n              setModalAnimationStates(prev => ({ ...prev, case: true }));\n            }}\n            onAnimationEnd={() => {\n              setIsAnimating(false);\n              setModalAnimationStates(prev => ({ ...prev, case: false }));\n            }}\n            setMindMapData={setMindMapData}\n            autoSaveMindMapData={autoSaveMindMapData}\n            addToast={addToast}\n          />\n        )}\n      </AnimatePresence>\n      \n      <AnimatePresence mode=\"wait\">\n        {topicModal.isOpen && (\n          <TopicModal \n            key={`topic-modal-${topicModal.data?.id || 'default'}`}\n            isOpen={topicModal.isOpen} \n            data={topicModalStableData.current || topicModal.data} \n            onClose={() => {\n              setModalAnimationStates(prev => ({ ...prev, topic: true }));\n              setTopicModal({ isOpen: false, data: null });\n            }}\n            onAnimationStart={() => {\n              setIsAnimating(true);\n              setModalAnimationStates(prev => ({ ...prev, topic: true }));\n            }}\n            onAnimationEnd={() => {\n              setIsAnimating(false);\n              setModalAnimationStates(prev => ({ ...prev, topic: false }));\n            }}\n            setMindMapData={setMindMapData}\n            autoSaveMindMapData={autoSaveMindMapData}\n            addToast={addToast}\n            syncNodeData={syncNodeData}\n            forceNodeUpdate={() => setNodeUpdateTrigger(prev => prev + 1)}\n          />\n        )}\n      </AnimatePresence>\n      \n      <AnimatePresence mode=\"wait\">\n        {taskModal.isOpen && (\n          <TaskModal \n            key={`task-modal-${taskModal.data?.id || 'default'}`}\n            isOpen={taskModal.isOpen} \n            data={taskModalStableData.current || taskModal.data} \n            onClose={() => {\n              setModalAnimationStates(prev => ({ ...prev, task: true }));\n              setTaskModal({ isOpen: false, data: null });\n            }}\n            onAnimationStart={() => {\n              setIsAnimating(true);\n              setModalAnimationStates(prev => ({ ...prev, task: true }));\n            }}\n            onAnimationEnd={() => {\n              setIsAnimating(false);\n              setModalAnimationStates(prev => ({ ...prev, task: false }));\n            }}\n            setMindMapData={setMindMapData}\n            autoSaveMindMapData={autoSaveMindMapData}\n            addToast={addToast}\n          />\n        )}\n      </AnimatePresence>\n\n      <EdgeLabelModal \n        isOpen={edgeModal.isOpen} \n        edge={edgeModal.edge} \n        onClose={() => setEdgeModal({ isOpen: false, edge: null })} \n        onSave={handleSaveEdgeLabel} \n      />\n\n      {loading && (\n        <div className=\"absolute inset-0 bg-white bg-opacity-80 flex items-center justify-center z-50\">\n          <Loader2 size={48} className=\"animate-spin text-blue-600\" />\n        </div>\n      )}\n      \n      {toasts.map(toast => (\n        <Toast\n          key={toast.id}\n          message={toast.message}\n          type={toast.type}\n          duration={toast.duration}\n          onClose={() => removeToast(toast.id)}\n        />\n      ))}\n    </div>\n  );\n};\n\n// Error Boundary for React Flow\nclass ReactFlowErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { hasError: false };\n  }\n\n  static getDerivedStateFromError(error) {\n    // Check if it's a React Flow dimension error\n    if (error.message && error.message.includes('dimensions')) {\n      console.warn('React Flow dimension error caught, recovering...');\n      return { hasError: false }; // Don't show error, just recover\n    }\n    return { hasError: true };\n  }\n\n  componentDidCatch(error, errorInfo) {\n    if (error.message && error.message.includes('dimensions')) {\n      // For dimension errors, try to recover\n      setTimeout(() => {\n        if (window.reactFlowInstance) {\n          window.reactFlowInstance.fitView();\n        }\n      }, 100);\n      return;\n    }\n    console.error('React Flow Error:', error, errorInfo);\n  }\n\n  render() {\n    if (this.state.hasError) {\n      return (\n        <div className=\"flex-1 flex items-center justify-center\">\n          <div className=\"text-center\">\n            <h3 className=\"text-lg font-medium text-gray-900 mb-2\">Mind Map Temporarily Unavailable</h3>\n            <p className=\"text-gray-600 mb-4\">There was an issue with the mind map. Please refresh the page.</p>\n            <button \n              onClick={() => window.location.reload()} \n              className=\"px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700\"\n            >\n              Refresh Page\n            </button>\n          </div>\n        </div>\n      );\n    }\n\n    return this.props.children;\n  }\n}\n\nconst Dashboard = () => (\n  <ReactFlowProvider>\n    <DashboardComponent />\n  </ReactFlowProvider>\n);\n\nfunction App() {\n  return <Dashboard />;\n}\n\nexport default App;","import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n);\n","// Enhanced Topic Modal with tabbed interface and advanced animations\nimport React, { useState, useEffect, useMemo, useCallback, useRef } from 'react';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport { \n  X, \n  BookOpen, \n  Brain, \n  Target, \n  Award, \n  Clock, \n  Sparkles, \n  Link2,\n  Edit3,\n  Trash2,\n  Save,\n  Loader2,\n  Star,\n  Plus,\n  Check,\n  RotateCcw,\n  TrendingUp,\n  Lightbulb,\n  FileText,\n  Layers,\n  Stethoscope,\n  Pill,\n  Users,\n  Tag,\n  Calendar,\n  Activity,\n  ChevronDown,\n  ChevronRight\n} from 'lucide-react';\n\n// Animation variants for Framer Motion\nconst modalVariants = {\n  hidden: {\n    opacity: 0,\n    scale: 0.3,\n    y: 50,\n    rotate: -5,\n  },\n  visible: {\n    opacity: 1,\n    scale: 1,\n    y: 0,\n    rotate: 0,\n    transition: {\n      type: \"spring\",\n      damping: 25,\n      stiffness: 300,\n      duration: 0.6,\n    }\n  },\n  exit: {\n    opacity: 0,\n    scale: 0.7,\n    y: 30,\n    rotate: -3,\n    transition: {\n      type: \"easeInOut\",\n      duration: 0.4,\n    }\n  }\n};\n\nconst backdropVariants = {\n  hidden: { \n    opacity: 0,\n    backdropFilter: 'blur(0px)'\n  },\n  visible: { \n    opacity: 1,\n    backdropFilter: 'blur(8px)',\n    transition: {\n      duration: 0.4,\n      ease: \"easeOut\"\n    }\n  },\n  exit: { \n    opacity: 0,\n    backdropFilter: 'blur(0px)',\n    transition: {\n      duration: 0.3,\n      ease: \"easeIn\"\n    }\n  }\n};\n\nconst contentVariants = {\n  hidden: {\n    opacity: 0,\n    y: 20,\n    scale: 0.95,\n  },\n  visible: {\n    opacity: 1,\n    y: 0,\n    scale: 1,\n    transition: {\n      type: \"easeOut\",\n      duration: 0.3,\n      delay: 0.1,\n    }\n  },\n  exit: {\n    opacity: 0,\n    y: -10,\n    scale: 1.02,\n    transition: {\n      type: \"easeIn\",\n      duration: 0.2,\n    }\n  }\n};\n\n// Card animation variants for sections\nconst cardVariants = {\n  hidden: { opacity: 0, y: 20, scale: 0.95 },\n  visible: { \n    opacity: 1, \n    y: 0, \n    scale: 1,\n    transition: {\n      duration: 0.4,\n      ease: \"easeOut\"\n    }\n  },\n  edit: { \n    scale: 1.02,\n    boxShadow: \"0 8px 25px rgba(59, 130, 246, 0.15)\",\n    transition: {\n      duration: 0.3,\n      ease: \"easeOut\"\n    }\n  },\n  saved: {\n    scale: 1,\n    boxShadow: \"0 4px 15px rgba(34, 197, 94, 0.15)\",\n    transition: {\n      duration: 0.3,\n      ease: \"easeOut\"\n    }\n  }\n};\n\nconst TopicModal = ({ \n  isOpen, \n  data, \n  onClose,\n  onAnimationStart,\n  onAnimationEnd,\n  setMindMapData,\n  autoSaveMindMapData,\n  addToast,\n  syncNodeData,\n  forceNodeUpdate\n}) => {\n  const [isAnimating, setIsAnimating] = useState(false);\n  const [isVisible, setIsVisible] = useState(false);\n  const [isClosing, setIsClosing] = useState(false);\n  const [editData, setEditData] = useState({});\n  const [isLoading, setIsLoading] = useState(false);\n  const [hasInitialized, setHasInitialized] = useState(false);\n  const [activeTab, setActiveTab] = useState('overview');\n  const [isTabTransitioning, setIsTabTransitioning] = useState(false);\n  \n  // Individual section edit states\n  const [editingSections, setEditingSections] = useState({});\n  const [sectionData, setSectionData] = useState({});\n  \n  // Tab-specific scroll positions\n  const [scrollPositions, setScrollPositions] = useState({});\n  const contentRefs = useRef({});\n  \n  // Form states for different tabs\n  const [expandedCriteria, setExpandedCriteria] = useState(false);\n  const [newTags, setNewTags] = useState({}); // For managing new tag inputs\n  const [newResource, setNewResource] = useState('');\n  const [showResourceForm, setShowResourceForm] = useState(false);\n\n  // Category color mapping\n  const categoryColors = {\n    'Mood Disorders': { primary: '#ef4444', secondary: '#fca5a5' }, // red\n    'Anxiety Disorders': { primary: '#f59e0b', secondary: '#fbbf24' }, // amber\n    'Psychotic Disorders': { primary: '#8b5cf6', secondary: '#c4b5fd' }, // violet\n    'Personality Disorders': { primary: '#10b981', secondary: '#6ee7b7' }, // emerald\n    'Neurodevelopmental Disorders': { primary: '#3b82f6', secondary: '#93c5fd' }, // blue\n    'Trauma Related Disorders': { primary: '#dc2626', secondary: '#f87171' }, // red-600\n    'Substance Use Disorders': { primary: '#059669', secondary: '#34d399' }, // emerald-600\n    'Eating Disorders': { primary: '#d946ef', secondary: '#e879f9' }, // fuchsia\n    'Sleep Disorders': { primary: '#6366f1', secondary: '#a5b4fc' }, // indigo\n    'Cognitive Disorders': { primary: '#ea580c', secondary: '#fb923c' }, // orange-600\n    'Other': { primary: '#6b7280', secondary: '#9ca3af' } // gray\n  };\n\n  // Tab configuration\n  const tabs = [\n    { id: 'overview', label: 'Overview', icon: BookOpen },\n    { id: 'concept', label: 'Concept', icon: Brain },\n    { id: 'clinical', label: 'Clinical Associations', icon: Stethoscope },\n    { id: 'treatment', label: 'Treatment', icon: Pill },\n    { id: 'connections', label: 'Connections', icon: Link2 }\n  ];\n\n  useEffect(() => {\n    if (isOpen && data && !hasInitialized) {\n      setIsVisible(true);\n      const initialData = { \n        ...data,\n        category: data.category || 'Other',\n        definition: data.definition || '',\n        diagnostic_criteria: data.diagnostic_criteria || [],\n        comorbidities: data.comorbidities || [],\n        differential_diagnoses: data.differential_diagnoses || [],\n        medications: data.medications || [],\n        psychotherapy_modalities: data.psychotherapy_modalities || [],\n        flashcard_count: data.flashcard_count || 0,\n        completed_flashcards: data.completed_flashcards || 0,\n        last_updated: data.last_updated || new Date().toISOString()\n      };\n      setEditData(initialData);\n      setHasInitialized(true);\n      setIsAnimating(true);\n      if (onAnimationStart) onAnimationStart();\n      \n      setTimeout(() => {\n        setIsAnimating(false);\n        if (onAnimationEnd) onAnimationEnd();\n      }, 600);\n    } else if (!isOpen && hasInitialized) {\n      setHasInitialized(false);\n      setScrollPositions({});\n      setEditingSections({});\n      setSectionData({});\n    }\n  }, [isOpen, data, hasInitialized, onAnimationStart, onAnimationEnd]);\n\n  // Enhanced effect for instant feedback - updates editData immediately when data changes\n  useEffect(() => {\n    if (isOpen && data && hasInitialized) {\n      // Update editData with latest data for instant feedback\n      setEditData(prevEditData => {\n        const updatedData = { \n          ...prevEditData, // Keep any local edits\n          ...data, // Override with latest data from parent\n          category: data.category || prevEditData.category || 'Other',\n          definition: data.definition || prevEditData.definition || '',\n          diagnostic_criteria: data.diagnostic_criteria || prevEditData.diagnostic_criteria || [],\n          comorbidities: data.comorbidities || prevEditData.comorbidities || [],\n          differential_diagnoses: data.differential_diagnoses || prevEditData.differential_diagnoses || [],\n          medications: data.medications || prevEditData.medications || [],\n          psychotherapy_modalities: data.psychotherapy_modalities || prevEditData.psychotherapy_modalities || [],\n          flashcard_count: data.flashcard_count || prevEditData.flashcard_count || 0,\n          completed_flashcards: data.completed_flashcards || prevEditData.completed_flashcards || 0,\n          last_updated: data.last_updated || prevEditData.last_updated || new Date().toISOString()\n        };\n        return updatedData;\n      });\n    }\n  }, [data, isOpen, hasInitialized]);\n\n  const progressPercentage = useMemo(() => {\n    const total = editData.flashcard_count || 0;\n    const completed = editData.completed_flashcards || 0;\n    return total > 0 ? Math.round((completed / total) * 100) : 0;\n  }, [editData.flashcard_count, editData.completed_flashcards]);\n\n  const handleClose = useCallback(() => {\n    if (isAnimating || isClosing) return;\n    \n    setIsAnimating(true);\n    setIsClosing(true);\n    if (onAnimationStart) onAnimationStart();\n    \n    // Set visibility to false to trigger exit animation\n    setIsVisible(false);\n  }, [onAnimationStart, isAnimating, isClosing]);\n\n  const handleSave = useCallback(async () => {\n    if (isLoading) return;\n    \n    setIsLoading(true);\n    try {\n      const updatedData = {\n        ...editData,\n        last_updated: new Date().toISOString()\n      };\n      \n      setMindMapData(prevData => {\n        const updatedTopics = prevData.topics.map(topic =>\n          String(topic.id) === String(data?.id) ? { ...topic, ...updatedData } : topic\n        );\n        const newData = { ...prevData, topics: updatedTopics };\n        autoSaveMindMapData(newData);\n        return newData;\n      });\n      \n      setEditData(updatedData);\n      addToast('Topic updated successfully', 'success');\n    } catch (error) {\n      console.error('Error saving topic:', error);\n      addToast('Failed to save topic', 'error');\n    } finally {\n      setIsLoading(false);\n    }\n  }, [data?.id, editData, setMindMapData, autoSaveMindMapData, addToast, isLoading]);\n\n  // Save current tab's scroll position before switching\n  const saveScrollPosition = useCallback((tabId) => {\n    const contentRef = contentRefs.current[tabId];\n    if (contentRef) {\n      setScrollPositions(prev => ({\n        ...prev,\n        [tabId]: contentRef.scrollTop\n      }));\n    }\n  }, []);\n\n  // Restore scroll position when switching to a tab\n  const restoreScrollPosition = useCallback((tabId) => {\n    setTimeout(() => {\n      const contentRef = contentRefs.current[tabId];\n      const savedPosition = scrollPositions[tabId];\n      if (contentRef && savedPosition) {\n        contentRef.scrollTop = savedPosition;\n      }\n    }, 100); // Small delay to ensure content is rendered\n  }, [scrollPositions]);\n\n  // Handle tab switching with scroll position preservation\n  const handleTabSwitch = useCallback((newTabId) => {\n    if (newTabId === activeTab || isTabTransitioning) return;\n    \n    // Save current tab's scroll position\n    saveScrollPosition(activeTab);\n    \n    setIsTabTransitioning(true);\n    setActiveTab(newTabId);\n    \n    setTimeout(() => {\n      setIsTabTransitioning(false);\n      // Restore new tab's scroll position\n      restoreScrollPosition(newTabId);\n    }, 300);\n  }, [activeTab, isTabTransitioning, saveScrollPosition, restoreScrollPosition]);\n\n// Enhanced category change handler - fixes node color updates and category saving\n  const handleCategoryChange = useCallback(async (newCategory) => {\n    console.log('Category changing to:', newCategory);\n    \n    // Get the new color for immediate update\n    const newColor = categoryColors[newCategory]?.primary || categoryColors.Other.primary;\n    console.log('New color for category:', newColor);\n    \n    // Update local edit data for immediate UI feedback\n    const updatedEditData = { ...editData, category: newCategory, color: newColor, last_updated: new Date().toISOString() };\n    setEditData(updatedEditData);\n    \n    // Update node color in mind map immediately and save\n    setMindMapData(prevData => {\n      const updatedTopics = prevData.topics.map(topic =>\n        String(topic.id) === String(data?.id) \n          ? { ...topic, category: newCategory, color: newColor, last_updated: new Date().toISOString() }\n          : topic\n      );\n      const newData = { ...prevData, topics: updatedTopics };\n      \n      // Auto-save the changes to backend immediately\n      console.log('Saving category change to backend:', newCategory, newColor);\n      autoSaveMindMapData(newData);\n      \n      // Force immediate node update after state change\n      setTimeout(() => {\n        console.log('Triggering force node update');\n        if (forceNodeUpdate) {\n          forceNodeUpdate();\n        }\n        if (syncNodeData) {\n          syncNodeData();\n        }\n      }, 200);\n      \n      return newData;\n    });\n    \n    addToast(`Category updated to ${newCategory}`, 'success');\n  }, [data?.id, editData, setMindMapData, categoryColors, autoSaveMindMapData, addToast, syncNodeData, forceNodeUpdate]);\n\n  // Get connected nodes for Connections tab\n  const connectedNodes = useMemo(() => {\n    if (!data?.id) return { cases: [], literature: [] };\n    \n    // This would typically come from your mind map data\n    // For now, return empty arrays - you can implement based on your data structure\n    return {\n      cases: [],\n      literature: []\n    };\n  }, [data?.id]);\n\n  const handleDelete = useCallback(async () => {\n    if (isLoading) return;\n    \n    if (!window.confirm('Are you sure you want to delete this topic?')) return;\n    \n    setIsLoading(true);\n    try {\n      setMindMapData(prevData => {\n        const updatedTopics = prevData.topics.filter(topic => String(topic.id) !== String(data?.id));\n        const newData = { ...prevData, topics: updatedTopics };\n        autoSaveMindMapData(newData);\n        return newData;\n      });\n      \n      addToast('Topic deleted successfully', 'success');\n      handleClose();\n    } catch (error) {\n      console.error('Error deleting topic:', error);\n      addToast('Failed to delete topic', 'error');\n    } finally {\n      setIsLoading(false);\n    }\n  }, [data?.id, setMindMapData, autoSaveMindMapData, addToast, handleClose, isLoading]);\n\n  // Individual section edit functions\n  const startEditingSection = useCallback((sectionId) => {\n    setEditingSections(prev => ({ ...prev, [sectionId]: true }));\n    // Initialize section data with current values\n    setSectionData(prev => ({\n      ...prev,\n      [sectionId]: { ...editData }\n    }));\n  }, [editData]);\n\n  const cancelEditingSection = useCallback((sectionId) => {\n    setEditingSections(prev => ({ ...prev, [sectionId]: false }));\n    setSectionData(prev => {\n      const newData = { ...prev };\n      delete newData[sectionId];\n      return newData;\n    });\n  }, []);\n\n  const saveSectionEdit = useCallback(async (sectionId) => {\n    if (isLoading) return;\n    \n    const sectionChanges = sectionData[sectionId];\n    if (!sectionChanges) return;\n    \n    setIsLoading(true);\n    try {\n      const updatedData = {\n        ...editData,\n        ...sectionChanges,\n        last_updated: new Date().toISOString()\n      };\n      \n      // Update editData immediately for instant feedback\n      setEditData(updatedData);\n      \n      setMindMapData(prevData => {\n        const updatedTopics = prevData.topics.map(topic =>\n          String(topic.id) === String(data?.id) ? { ...topic, ...updatedData } : topic\n        );\n        const newData = { ...prevData, topics: updatedTopics };\n        autoSaveMindMapData(newData);\n        return newData;\n      });\n      \n      setEditingSections(prev => ({ ...prev, [sectionId]: false }));\n      setSectionData(prev => {\n        const newData = { ...prev };\n        delete newData[sectionId];\n        return newData;\n      });\n      \n      addToast('Section updated successfully', 'success');\n    } catch (error) {\n      console.error('Error saving section:', error);\n      addToast('Failed to save section', 'error');\n    } finally {\n      setIsLoading(false);\n    }\n  }, [sectionData, editData, data?.id, setMindMapData, autoSaveMindMapData, addToast, isLoading]);\n\n  const updateSectionField = useCallback((sectionId, field, value) => {\n    setSectionData(prev => ({\n      ...prev,\n      [sectionId]: {\n        ...prev[sectionId],\n        [field]: value\n      }\n    }));\n  }, []);\n\n  // Tag management functions for list-based sections\n  const addTagToSection = useCallback((sectionId, field, tag) => {\n    if (!tag.trim()) return;\n    \n    const currentTags = sectionData[sectionId]?.[field] || editData[field] || [];\n    if (!currentTags.includes(tag.trim())) {\n      updateSectionField(sectionId, field, [...currentTags, tag.trim()]);\n    }\n  }, [sectionData, editData, updateSectionField]);\n\n  const removeTagFromSection = useCallback((sectionId, field, tagToRemove) => {\n    const currentTags = sectionData[sectionId]?.[field] || editData[field] || [];\n    updateSectionField(sectionId, field, currentTags.filter(tag => tag !== tagToRemove));\n  }, [sectionData, editData, updateSectionField]);\n\n  // Helper functions for new tag input management\n  const setNewTag = useCallback((sectionId, value) => {\n    setNewTags(prev => ({ ...prev, [sectionId]: value }));\n  }, []);\n\n  const getNewTag = useCallback((sectionId) => {\n    return newTags[sectionId] || '';\n  }, [newTags]);\n\n  const clearNewTag = useCallback((sectionId) => {\n    setNewTags(prev => {\n      const newTags = { ...prev };\n      delete newTags[sectionId];\n      return newTags;\n    });\n  }, []);\n\n  // Enhanced direct list management functions\n  const addItemDirectly = useCallback((field, item) => {\n    if (!item.trim()) return;\n    \n    const currentItems = editData[field] || [];\n    if (!currentItems.includes(item.trim())) {\n      const updatedItems = [...currentItems, item.trim()];\n      const updatedData = { \n        ...editData, \n        [field]: updatedItems, \n        last_updated: new Date().toISOString() \n      };\n      \n      // Update local state immediately\n      setEditData(updatedData);\n      \n      // Update mind map data and save\n      setMindMapData(prevData => {\n        const updatedTopics = prevData.topics.map(topic =>\n          String(topic.id) === String(data?.id) ? { ...topic, ...updatedData } : topic\n        );\n        const newData = { ...prevData, topics: updatedTopics };\n        autoSaveMindMapData(newData);\n        return newData;\n      });\n      \n      addToast(`${field} updated successfully`, 'success');\n    }\n  }, [editData, data?.id, setMindMapData, autoSaveMindMapData, addToast]);\n\n  const removeItemDirectly = useCallback((field, itemToRemove) => {\n    const currentItems = editData[field] || [];\n    const updatedItems = currentItems.filter(item => item !== itemToRemove);\n    const updatedData = { \n      ...editData, \n      [field]: updatedItems, \n      last_updated: new Date().toISOString() \n    };\n    \n    // Update local state immediately\n    setEditData(updatedData);\n    \n    // Update mind map data and save\n    setMindMapData(prevData => {\n      const updatedTopics = prevData.topics.map(topic =>\n        String(topic.id) === String(data?.id) ? { ...topic, ...updatedData } : topic\n      );\n      const newData = { ...prevData, topics: updatedTopics };\n      autoSaveMindMapData(newData);\n      return newData;\n    });\n    \n    addToast(`${field} updated successfully`, 'success');\n  }, [editData, data?.id, setMindMapData, autoSaveMindMapData, addToast]);\n\n  if (!isOpen) return null;\n\n  return (\n    <AnimatePresence mode=\"wait\" onExitComplete={() => {\n      setIsAnimating(false);\n      setIsClosing(false);\n      setHasInitialized(false);\n      onClose();\n      if (onAnimationEnd) onAnimationEnd();\n    }}>\n      {isVisible && (\n        <motion.div\n          key={`topic-modal-${data?.id || 'default'}`}\n          initial=\"hidden\"\n          animate=\"visible\"\n          exit=\"exit\"\n          variants={backdropVariants}\n          className=\"fixed inset-0 bg-black flex items-center justify-center z-50\"\n          style={{ \n            willChange: 'backdrop-filter, opacity',\n            backfaceVisibility: 'hidden',\n            transform: 'translate3d(0, 0, 0)'\n          }}\n          onClick={(e) => e.target === e.currentTarget && handleClose()}\n        >\n          <motion.div\n            initial=\"hidden\"\n            animate=\"visible\"\n            exit=\"exit\"\n            variants={modalVariants}\n            className=\"bg-white rounded-2xl shadow-2xl max-w-4xl w-full mx-4 max-h-[85vh] overflow-hidden\"\n            style={{ \n              willChange: 'transform, opacity, scale',\n              backfaceVisibility: 'hidden'\n            }}\n            onClick={(e) => e.stopPropagation()}\n            onAnimationStart={() => {\n              setIsAnimating(true);\n              if (onAnimationStart) onAnimationStart();\n            }}\n            onAnimationComplete={() => {\n              setIsAnimating(false);\n              if (onAnimationEnd) onAnimationEnd();\n            }}\n          >\n            <motion.div \n              initial=\"hidden\"\n              animate=\"visible\"\n              exit=\"exit\"\n              variants={contentVariants}\n              className=\"bg-gradient-to-br from-slate-900 to-slate-800 text-white px-6 py-4 flex items-center justify-between\"\n            >\n              <div className=\"flex items-center gap-3\">\n                <BookOpen size={24} />\n                <h2 className=\"text-xl font-semibold\">Topic Details</h2>\n              </div>\n              <button\n                onClick={handleClose}\n                className=\"text-slate-400 hover:text-white transition-colors\"\n              >\n                <X size={24} />\n              </button>\n            </motion.div>\n\n            {/* Tab Navigation */}\n            <div className=\"bg-gradient-to-r from-slate-900 via-slate-800 to-slate-900 border-b border-slate-600\">\n              <nav className=\"flex flex-wrap gap-2 px-6 py-4\">\n                {tabs.map(({ id, label, icon: Icon }) => (\n                  <motion.button\n                    key={id}\n                    onClick={() => handleTabSwitch(id)}\n                    className={`relative flex items-center gap-2 px-4 py-3 rounded-xl font-medium text-sm transition-all duration-300 ${\n                      activeTab === id\n                        ? 'bg-gradient-to-r from-purple-500 to-indigo-600 text-white shadow-lg shadow-purple-500/25'\n                        : 'text-slate-300 hover:text-white hover:bg-slate-700/50 hover:shadow-md'\n                    }`}\n                    whileHover={{ scale: activeTab === id ? 1 : 1.02 }}\n                    whileTap={{ scale: 0.98 }}\n                    disabled={isTabTransitioning}\n                  >\n                    <Icon size={16} className={activeTab === id ? 'drop-shadow-sm' : ''} />\n                    {label}\n                    \n                    {activeTab === id && (\n                      <motion.div\n                        layoutId=\"topicActiveTab\"\n                        className=\"absolute inset-0 bg-gradient-to-r from-purple-400/20 to-indigo-500/20 rounded-xl blur-sm\"\n                        initial={false}\n                        transition={{ duration: 0.3, ease: \"easeOut\" }}\n                      />\n                    )}\n                  </motion.button>\n                ))}\n              </nav>\n            </div>\n\n            {/* Dark Content Area */}\n            <motion.div\n              className=\"flex-1 bg-gradient-to-br from-slate-900 to-slate-800 overflow-hidden\"\n              animate={{ opacity: isTabTransitioning ? 0.7 : 1 }}\n              transition={{ duration: 0.2 }}\n            >\n              <AnimatePresence mode=\"wait\">\n                {/* Overview Tab */}\n                {activeTab === 'overview' && (\n                  <motion.div\n                    key=\"overview\"\n                    ref={el => contentRefs.current.overview = el}\n                    initial={{ opacity: 0, x: -20 }}\n                    animate={{ opacity: 1, x: 0 }}\n                    exit={{ opacity: 0, x: 20 }}\n                    transition={{ duration: 0.3 }}\n                    className=\"h-full overflow-y-auto p-6 space-y-6\"\n                  >\n                    {/* Title Section */}\n                    <motion.div \n                      variants={cardVariants}\n                      animate={editingSections.title ? \"edit\" : \"visible\"}\n                      className=\"bg-slate-800/50 backdrop-blur-sm rounded-xl p-6 border border-slate-700\"\n                    >\n                      <div className=\"flex items-center justify-between mb-4\">\n                        <h3 className=\"text-lg font-semibold text-white\">Title</h3>\n                        {!editingSections.title && (\n                          <motion.button\n                            whileHover={{ scale: 1.1 }}\n                            whileTap={{ scale: 0.9 }}\n                            onClick={() => startEditingSection('title')}\n                            className=\"text-slate-400 hover:text-white transition-colors p-1 rounded\"\n                            title=\"Edit title\"\n                          >\n                            <Edit3 size={16} />\n                          </motion.button>\n                        )}\n                      </div>\n                      \n                      {editingSections.title ? (\n                        <motion.div \n                          className=\"space-y-4\"\n                          initial={{ opacity: 0, y: 10 }}\n                          animate={{ opacity: 1, y: 0 }}\n                          transition={{ duration: 0.3 }}\n                        >\n                          <input\n                            type=\"text\"\n                            value={sectionData.title?.title || editData.title || ''}\n                            onChange={(e) => updateSectionField('title', 'title', e.target.value)}\n                            className=\"w-full text-xl font-bold bg-slate-700 border border-slate-600 rounded-lg px-4 py-3 text-white placeholder-slate-400 focus:ring-2 focus:ring-purple-500 focus:border-purple-500\"\n                            placeholder=\"Topic title...\"\n                          />\n                          <div className=\"flex justify-end gap-2\">\n                            <motion.button\n                              whileHover={{ scale: 1.02 }}\n                              whileTap={{ scale: 0.98 }}\n                              onClick={() => cancelEditingSection('title')}\n                              className=\"px-3 py-2 text-slate-300 hover:text-white border border-slate-600 rounded-lg hover:bg-slate-700 transition-colors text-sm\"\n                            >\n                              Cancel\n                            </motion.button>\n                            <motion.button\n                              whileHover={{ scale: 1.02 }}\n                              whileTap={{ scale: 0.98 }}\n                              onClick={() => saveSectionEdit('title')}\n                              disabled={isLoading}\n                              className=\"px-3 py-2 bg-purple-600 text-white rounded-lg hover:bg-purple-700 transition-colors text-sm flex items-center gap-2\"\n                            >\n                              {isLoading ? <Loader2 size={14} className=\"animate-spin\" /> : <Save size={14} />}\n                              Save\n                            </motion.button>\n                          </div>\n                        </motion.div>\n                      ) : (\n                        <motion.h1 \n                          className=\"text-2xl font-bold text-white\"\n                          whileHover={{ scale: 1.01 }}\n                          transition={{ duration: 0.2 }}\n                        >\n                          {editData.title || 'Untitled Topic'}\n                        </motion.h1>\n                      )}\n                    </motion.div>\n\n                    {/* Category and Progress Row */}\n                    <div className=\"grid md:grid-cols-2 gap-6\">\n                      {/* Category Selection - Direct Access (No Edit Button) */}\n                      <motion.div \n                        variants={cardVariants}\n                        initial=\"hidden\"\n                        animate=\"visible\"\n                        className=\"bg-slate-800/50 backdrop-blur-sm rounded-xl p-6 border border-slate-700\"\n                      >\n                        <label className=\"block text-sm font-medium text-slate-300 mb-3\">Category</label>\n                        <motion.select\n                          value={editData.category || 'Other'}\n                          onChange={(e) => handleCategoryChange(e.target.value)}\n                          className=\"w-full bg-slate-700 border border-slate-600 rounded-lg px-4 py-3 text-white focus:ring-2 focus:ring-purple-500 focus:border-purple-500 hover:bg-slate-650 transition-colors cursor-pointer\"\n                          whileFocus={{ scale: 1.02 }}\n                        >\n                          {Object.keys(categoryColors).map(category => (\n                            <option key={category} value={category}>{category}</option>\n                          ))}\n                        </motion.select>\n                        <p className=\"text-xs text-slate-400 mt-2\">\n                          Changes are saved automatically and will update the node color\n                        </p>\n                      </motion.div>\n\n                      {/* Flashcard Progress */}\n                      <motion.div \n                        variants={cardVariants}\n                        initial=\"hidden\"\n                        animate=\"visible\"\n                        className=\"bg-slate-800/50 backdrop-blur-sm rounded-xl p-6 border border-slate-700\"\n                      >\n                        <div className=\"flex items-center justify-between mb-3\">\n                          <span className=\"text-sm font-medium text-slate-300\">Flashcard Progress</span>\n                          <span className=\"text-sm text-slate-400\">\n                            {editData.completed_flashcards || 0} / {editData.flashcard_count || 0}\n                          </span>\n                        </div>\n                        <div className=\"w-full bg-slate-700 rounded-full h-3 mb-2\">\n                          <motion.div\n                            className=\"h-3 rounded-full bg-gradient-to-r from-purple-500 to-indigo-600\"\n                            initial={{ width: 0 }}\n                            animate={{ width: `${progressPercentage}%` }}\n                            transition={{ duration: 1, ease: \"easeOut\" }}\n                          />\n                        </div>\n                        <div className=\"text-right\">\n                          <span className=\"text-lg font-bold text-white\">{progressPercentage}%</span>\n                          <span className=\"text-sm text-slate-400 ml-1\">complete</span>\n                        </div>\n                      </motion.div>\n                    </div>\n\n                    {/* Last Updated */}\n                    <div className=\"text-xs text-slate-500 text-right\">\n                      Last updated: {editData.last_updated ? new Date(editData.last_updated).toLocaleString() : 'Never'}\n                    </div>\n                  </motion.div>\n                )}\n\n                {/* Concept Tab */}\n                {activeTab === 'concept' && (\n                  <motion.div\n                    key=\"concept\"\n                    ref={el => contentRefs.current.concept = el}\n                    initial={{ opacity: 0, x: -20 }}\n                    animate={{ opacity: 1, x: 0 }}\n                    exit={{ opacity: 0, x: 20 }}\n                    transition={{ duration: 0.3 }}\n                    className=\"h-full overflow-y-auto p-6 space-y-6\"\n                  >\n                    {/* Definition Section */}\n                    <motion.div \n                      variants={cardVariants}\n                      animate={editingSections.definition ? \"edit\" : \"visible\"}\n                      className=\"bg-slate-800/50 backdrop-blur-sm rounded-xl p-6 border border-slate-700\"\n                    >\n                      <div className=\"flex items-center justify-between mb-4\">\n                        <h3 className=\"text-lg font-semibold text-white flex items-center gap-2\">\n                          <Brain size={20} className=\"text-purple-400\" />\n                          Definition\n                        </h3>\n                        {!editingSections.definition && (\n                          <motion.button\n                            whileHover={{ scale: 1.1 }}\n                            whileTap={{ scale: 0.9 }}\n                            onClick={() => startEditingSection('definition')}\n                            className=\"text-slate-400 hover:text-white transition-colors p-1 rounded\"\n                            title=\"Edit definition\"\n                          >\n                            <Edit3 size={16} />\n                          </motion.button>\n                        )}\n                      </div>\n                      \n                      {editingSections.definition ? (\n                        <motion.div \n                          className=\"space-y-4\"\n                          initial={{ opacity: 0, y: 10 }}\n                          animate={{ opacity: 1, y: 0 }}\n                          transition={{ duration: 0.3 }}\n                        >\n                          <textarea\n                            value={sectionData.definition?.definition || editData.definition || ''}\n                            onChange={(e) => updateSectionField('definition', 'definition', e.target.value)}\n                            rows={4}\n                            className=\"w-full bg-slate-700 border border-slate-600 rounded-lg px-4 py-3 text-white placeholder-slate-400 focus:ring-2 focus:ring-purple-500 focus:border-purple-500 resize-none\"\n                            placeholder=\"Enter the definition of this topic...\"\n                          />\n                          <div className=\"flex justify-end gap-2\">\n                            <motion.button\n                              whileHover={{ scale: 1.02 }}\n                              whileTap={{ scale: 0.98 }}\n                              onClick={() => cancelEditingSection('definition')}\n                              className=\"px-3 py-2 text-slate-300 hover:text-white border border-slate-600 rounded-lg hover:bg-slate-700 transition-colors text-sm\"\n                            >\n                              Cancel\n                            </motion.button>\n                            <motion.button\n                              whileHover={{ scale: 1.02 }}\n                              whileTap={{ scale: 0.98 }}\n                              onClick={() => saveSectionEdit('definition')}\n                              disabled={isLoading}\n                              className=\"px-3 py-2 bg-purple-600 text-white rounded-lg hover:bg-purple-700 transition-colors text-sm flex items-center gap-2\"\n                            >\n                              {isLoading ? <Loader2 size={14} className=\"animate-spin\" /> : <Save size={14} />}\n                              Save\n                            </motion.button>\n                          </div>\n                        </motion.div>\n                      ) : (\n                        <motion.div \n                          className=\"text-slate-300 leading-relaxed\"\n                          whileHover={{ scale: 1.01 }}\n                          transition={{ duration: 0.2 }}\n                        >\n                          {editData.definition || <span className=\"text-slate-500 italic\">No definition provided</span>}\n                        </motion.div>\n                      )}\n                    </motion.div>\n\n                    {/* Diagnostic Criteria Section */}\n                    <motion.div \n                      variants={cardVariants}\n                      animate={editingSections.diagnostic_criteria ? \"edit\" : \"visible\"}\n                      className=\"bg-slate-800/50 backdrop-blur-sm rounded-xl p-6 border border-slate-700\"\n                    >\n                      <div className=\"flex items-center justify-between mb-4\">\n                        <h3 className=\"text-lg font-semibold text-white flex items-center gap-2\">\n                          <FileText size={20} className=\"text-indigo-400\" />\n                          Diagnostic Criteria\n                        </h3>\n                        <div className=\"flex items-center gap-2\">\n                          {!editingSections.diagnostic_criteria && (\n                            <motion.button\n                              whileHover={{ scale: 1.1 }}\n                              whileTap={{ scale: 0.9 }}\n                              onClick={() => startEditingSection('diagnostic_criteria')}\n                              className=\"text-slate-400 hover:text-white transition-colors p-1 rounded\"\n                              title=\"Edit diagnostic criteria\"\n                            >\n                              <Edit3 size={16} />\n                            </motion.button>\n                          )}\n                          <button\n                            onClick={() => setExpandedCriteria(!expandedCriteria)}\n                            className=\"text-slate-400 hover:text-white transition-colors\"\n                          >\n                            {expandedCriteria ? <ChevronDown size={20} /> : <ChevronRight size={20} />}\n                          </button>\n                        </div>\n                      </div>\n                      \n                      <AnimatePresence>\n                        {expandedCriteria && (\n                          <motion.div\n                            initial={{ height: 0, opacity: 0 }}\n                            animate={{ height: 'auto', opacity: 1 }}\n                            exit={{ height: 0, opacity: 0 }}\n                            transition={{ duration: 0.3 }}\n                            className=\"overflow-hidden\"\n                          >\n                            {editingSections.diagnostic_criteria ? (\n                              <div className=\"space-y-4\">\n                                <textarea\n                                  value={Array.isArray(sectionData.diagnostic_criteria?.diagnostic_criteria) \n                                    ? sectionData.diagnostic_criteria.diagnostic_criteria.join('\\n') \n                                    : Array.isArray(editData.diagnostic_criteria) \n                                      ? editData.diagnostic_criteria.join('\\n') \n                                      : editData.diagnostic_criteria || ''}\n                                  onChange={(e) => updateSectionField('diagnostic_criteria', 'diagnostic_criteria', e.target.value.split('\\n').filter(item => item.trim()))}\n                                  rows={6}\n                                  className=\"w-full bg-slate-700 border border-slate-600 rounded-lg px-4 py-3 text-white placeholder-slate-400 focus:ring-2 focus:ring-purple-500 focus:border-purple-500 resize-none\"\n                                  placeholder=\"Enter diagnostic criteria (one per line)...\"\n                                />\n                                <div className=\"flex justify-end gap-2\">\n                                  <button\n                                    onClick={() => cancelEditingSection('diagnostic_criteria')}\n                                    className=\"px-3 py-2 text-slate-300 hover:text-white border border-slate-600 rounded-lg hover:bg-slate-700 transition-colors text-sm\"\n                                  >\n                                    Cancel\n                                  </button>\n                                  <motion.button\n                                    onClick={() => saveSectionEdit('diagnostic_criteria')}\n                                    disabled={isLoading}\n                                    className=\"px-3 py-2 bg-purple-600 text-white rounded-lg hover:bg-purple-700 transition-colors text-sm flex items-center gap-2\"\n                                  >\n                                    {isLoading ? <Loader2 size={14} className=\"animate-spin\" /> : <Save size={14} />}\n                                    Save\n                                  </motion.button>\n                                </div>\n                              </div>\n                            ) : (\n                              <div className=\"space-y-2\">\n                                {(editData.diagnostic_criteria || []).length > 0 ? (\n                                  editData.diagnostic_criteria.map((criteria, index) => (\n                                    <div key={index} className=\"flex items-start gap-3\">\n                                      <span className=\"text-purple-400 font-medium\">{index + 1}.</span>\n                                      <span className=\"text-slate-300\">{criteria}</span>\n                                    </div>\n                                  ))\n                                ) : (\n                                  <span className=\"text-slate-500 italic\">No diagnostic criteria provided</span>\n                                )}\n                              </div>\n                            )}\n                          </motion.div>\n                        )}\n                      </AnimatePresence>\n                    </motion.div>\n                  </motion.div>\n                )}\n\n                {/* Clinical Associations Tab */}\n                {activeTab === 'clinical' && (\n                  <motion.div\n                    key=\"clinical\"\n                    ref={el => contentRefs.current.clinical = el}\n                    initial={{ opacity: 0, x: -20 }}\n                    animate={{ opacity: 1, x: 0 }}\n                    exit={{ opacity: 0, x: 20 }}\n                    transition={{ duration: 0.3 }}\n                    className=\"h-full overflow-y-auto p-6 space-y-6\"\n                  >\n                    {/* Comorbidities Section */}\n                    <motion.div \n                      variants={cardVariants}\n                      initial=\"hidden\"\n                      animate=\"visible\"\n                      className=\"bg-slate-800/50 backdrop-blur-sm rounded-xl p-6 border border-slate-700\"\n                    >\n                      <h3 className=\"text-lg font-semibold text-white mb-4 flex items-center gap-2\">\n                        <Users size={20} className=\"text-amber-400\" />\n                        Comorbidities\n                      </h3>\n                      \n                      {/* Current comorbidities list */}\n                      <div className=\"space-y-2 mb-4\">\n                        <AnimatePresence>\n                          {(editData.comorbidities || []).map((comorbidity, index) => (\n                            <motion.div\n                              key={index}\n                              initial={{ opacity: 0, scale: 0.8 }}\n                              animate={{ opacity: 1, scale: 1 }}\n                              exit={{ opacity: 0, scale: 0.8 }}\n                              className=\"flex items-center justify-between p-3 bg-amber-600/10 rounded-lg border border-amber-600/20 group hover:bg-amber-600/15 transition-colors\"\n                            >\n                              <span className=\"text-amber-300\">{comorbidity}</span>\n                              <motion.button\n                                whileHover={{ scale: 1.1 }}\n                                whileTap={{ scale: 0.9 }}\n                                onClick={() => removeItemDirectly('comorbidities', comorbidity)}\n                                className=\"text-amber-400 hover:text-amber-200 opacity-0 group-hover:opacity-100 transition-opacity p-1 rounded\"\n                                title=\"Remove comorbidity\"\n                              >\n                                <X size={16} />\n                              </motion.button>\n                            </motion.div>\n                          ))}\n                        </AnimatePresence>\n                      </div>\n                      \n                      {/* Add new comorbidity */}\n                      <div className=\"flex gap-2\">\n                        <input\n                          type=\"text\"\n                          value={getNewTag('comorbidities')}\n                          onChange={(e) => setNewTag('comorbidities', e.target.value)}\n                          placeholder=\"Add comorbidity...\"\n                          className=\"flex-1 bg-slate-700 border border-slate-600 rounded-lg px-3 py-2 text-white placeholder-slate-400 focus:ring-2 focus:ring-amber-500 focus:border-amber-500 transition-colors\"\n                          onKeyPress={(e) => {\n                            if (e.key === 'Enter' && getNewTag('comorbidities').trim()) {\n                              addItemDirectly('comorbidities', getNewTag('comorbidities'));\n                              clearNewTag('comorbidities');\n                            }\n                          }}\n                        />\n                        <motion.button\n                          whileHover={{ scale: 1.02 }}\n                          whileTap={{ scale: 0.98 }}\n                          onClick={() => {\n                            if (getNewTag('comorbidities').trim()) {\n                              addItemDirectly('comorbidities', getNewTag('comorbidities'));\n                              clearNewTag('comorbidities');\n                            }\n                          }}\n                          className=\"px-4 py-2 bg-amber-600 text-white rounded-lg hover:bg-amber-700 transition-colors flex items-center gap-2\"\n                        >\n                          <Plus size={16} />\n                          Add\n                        </motion.button>\n                      </div>\n                      \n                      {(editData.comorbidities || []).length === 0 && (\n                        <p className=\"text-slate-500 italic text-center py-4\">No comorbidities added yet</p>\n                      )}\n                    </motion.div>\n\n                    {/* Differential Diagnoses Section */}\n                    <motion.div \n                      variants={cardVariants}\n                      initial=\"hidden\"\n                      animate=\"visible\"\n                      className=\"bg-slate-800/50 backdrop-blur-sm rounded-xl p-6 border border-slate-700\"\n                    >\n                      <h3 className=\"text-lg font-semibold text-white mb-4 flex items-center gap-2\">\n                        <Activity size={20} className=\"text-cyan-400\" />\n                        Differential Diagnoses\n                      </h3>\n                      \n                      {/* Current differential diagnoses list */}\n                      <div className=\"space-y-2 mb-4\">\n                        <AnimatePresence>\n                          {(editData.differential_diagnoses || []).map((diagnosis, index) => (\n                            <motion.div\n                              key={index}\n                              initial={{ opacity: 0, scale: 0.8 }}\n                              animate={{ opacity: 1, scale: 1 }}\n                              exit={{ opacity: 0, scale: 0.8 }}\n                              className=\"flex items-center justify-between p-3 bg-cyan-600/10 rounded-lg border border-cyan-600/20 group hover:bg-cyan-600/15 transition-colors\"\n                            >\n                              <span className=\"text-cyan-300\">{diagnosis}</span>\n                              <motion.button\n                                whileHover={{ scale: 1.1 }}\n                                whileTap={{ scale: 0.9 }}\n                                onClick={() => removeItemDirectly('differential_diagnoses', diagnosis)}\n                                className=\"text-cyan-400 hover:text-cyan-200 opacity-0 group-hover:opacity-100 transition-opacity p-1 rounded\"\n                                title=\"Remove differential diagnosis\"\n                              >\n                                <X size={16} />\n                              </motion.button>\n                            </motion.div>\n                          ))}\n                        </AnimatePresence>\n                      </div>\n                      \n                      {/* Add new differential diagnosis */}\n                      <div className=\"flex gap-2\">\n                        <input\n                          type=\"text\"\n                          value={getNewTag('differential_diagnoses')}\n                          onChange={(e) => setNewTag('differential_diagnoses', e.target.value)}\n                          placeholder=\"Add differential diagnosis...\"\n                          className=\"flex-1 bg-slate-700 border border-slate-600 rounded-lg px-3 py-2 text-white placeholder-slate-400 focus:ring-2 focus:ring-cyan-500 focus:border-cyan-500 transition-colors\"\n                          onKeyPress={(e) => {\n                            if (e.key === 'Enter' && getNewTag('differential_diagnoses').trim()) {\n                              addItemDirectly('differential_diagnoses', getNewTag('differential_diagnoses'));\n                              clearNewTag('differential_diagnoses');\n                            }\n                          }}\n                        />\n                        <motion.button\n                          whileHover={{ scale: 1.02 }}\n                          whileTap={{ scale: 0.98 }}\n                          onClick={() => {\n                            if (getNewTag('differential_diagnoses').trim()) {\n                              addItemDirectly('differential_diagnoses', getNewTag('differential_diagnoses'));\n                              clearNewTag('differential_diagnoses');\n                            }\n                          }}\n                          className=\"px-4 py-2 bg-cyan-600 text-white rounded-lg hover:bg-cyan-700 transition-colors flex items-center gap-2\"\n                        >\n                          <Plus size={16} />\n                          Add\n                        </motion.button>\n                      </div>\n                      \n                      {(editData.differential_diagnoses || []).length === 0 && (\n                        <p className=\"text-slate-500 italic text-center py-4\">No differential diagnoses added yet</p>\n                      )}\n                    </motion.div>\n                  </motion.div>\n                )}\n\n                {/* Treatment Tab */}\n                {activeTab === 'treatment' && (\n                  <motion.div\n                    key=\"treatment\"\n                    ref={el => contentRefs.current.treatment = el}\n                    initial={{ opacity: 0, x: -20 }}\n                    animate={{ opacity: 1, x: 0 }}\n                    exit={{ opacity: 0, x: 20 }}\n                    transition={{ duration: 0.3 }}\n                    className=\"h-full overflow-y-auto p-6 space-y-6\"\n                  >\n                    {/* Medications Section */}\n                    <motion.div \n                      variants={cardVariants}\n                      initial=\"hidden\"\n                      animate=\"visible\"\n                      className=\"bg-slate-800/50 backdrop-blur-sm rounded-xl p-6 border border-slate-700\"\n                    >\n                      <h3 className=\"text-lg font-semibold text-white mb-4 flex items-center gap-2\">\n                        <Pill size={20} className=\"text-green-400\" />\n                        Medications\n                      </h3>\n                      \n                      {/* Current medications list */}\n                      <div className=\"space-y-2 mb-4\">\n                        <AnimatePresence>\n                          {(editData.medications || []).map((medication, index) => (\n                            <motion.div\n                              key={index}\n                              initial={{ opacity: 0, scale: 0.8 }}\n                              animate={{ opacity: 1, scale: 1 }}\n                              exit={{ opacity: 0, scale: 0.8 }}\n                              className=\"flex items-center justify-between p-3 bg-green-600/10 rounded-lg border border-green-600/20 group hover:bg-green-600/15 transition-colors\"\n                            >\n                              <span className=\"text-green-300\">{medication}</span>\n                              <motion.button\n                                whileHover={{ scale: 1.1 }}\n                                whileTap={{ scale: 0.9 }}\n                                onClick={() => removeItemDirectly('medications', medication)}\n                                className=\"text-green-400 hover:text-green-200 opacity-0 group-hover:opacity-100 transition-opacity p-1 rounded\"\n                                title=\"Remove medication\"\n                              >\n                                <X size={16} />\n                              </motion.button>\n                            </motion.div>\n                          ))}\n                        </AnimatePresence>\n                      </div>\n                      \n                      {/* Add new medication */}\n                      <div className=\"flex gap-2\">\n                        <input\n                          type=\"text\"\n                          value={getNewTag('medications')}\n                          onChange={(e) => setNewTag('medications', e.target.value)}\n                          placeholder=\"Add medication...\"\n                          className=\"flex-1 bg-slate-700 border border-slate-600 rounded-lg px-3 py-2 text-white placeholder-slate-400 focus:ring-2 focus:ring-green-500 focus:border-green-500 transition-colors\"\n                          onKeyPress={(e) => {\n                            if (e.key === 'Enter' && getNewTag('medications').trim()) {\n                              addItemDirectly('medications', getNewTag('medications'));\n                              clearNewTag('medications');\n                            }\n                          }}\n                        />\n                        <motion.button\n                          whileHover={{ scale: 1.02 }}\n                          whileTap={{ scale: 0.98 }}\n                          onClick={() => {\n                            if (getNewTag('medications').trim()) {\n                              addItemDirectly('medications', getNewTag('medications'));\n                              clearNewTag('medications');\n                            }\n                          }}\n                          className=\"px-4 py-2 bg-green-600 text-white rounded-lg hover:bg-green-700 transition-colors flex items-center gap-2\"\n                        >\n                          <Plus size={16} />\n                          Add\n                        </motion.button>\n                      </div>\n                      \n                      {(editData.medications || []).length === 0 && (\n                        <p className=\"text-slate-500 italic text-center py-4\">No medications added yet</p>\n                      )}\n                    </motion.div>\n\n                    {/* Psychotherapy Modalities Section */}\n                    <motion.div \n                      variants={cardVariants}\n                      animate={editingSections.psychotherapy_modalities ? \"edit\" : \"visible\"}\n                      className=\"bg-slate-800/50 backdrop-blur-sm rounded-xl p-6 border border-slate-700\"\n                    >\n                      <div className=\"flex items-center justify-between mb-4\">\n                        <h3 className=\"text-lg font-semibold text-white flex items-center gap-2\">\n                          <Brain size={20} className=\"text-purple-400\" />\n                          Psychotherapy Modalities\n                        </h3>\n                        {!editingSections.psychotherapy_modalities && (\n                          <motion.button\n                            whileHover={{ scale: 1.1 }}\n                            whileTap={{ scale: 0.9 }}\n                            onClick={() => startEditingSection('psychotherapy_modalities')}\n                            className=\"text-slate-400 hover:text-white transition-colors p-1 rounded\"\n                            title=\"Edit psychotherapy modalities\"\n                          >\n                            <Edit3 size={16} />\n                          </motion.button>\n                        )}\n                      </div>\n                      \n                      {editingSections.psychotherapy_modalities ? (\n                        <div className=\"space-y-4\">\n                          <textarea\n                            value={Array.isArray(sectionData.psychotherapy_modalities?.psychotherapy_modalities) \n                              ? sectionData.psychotherapy_modalities.psychotherapy_modalities.join('\\n') \n                              : Array.isArray(editData.psychotherapy_modalities)\n                                ? editData.psychotherapy_modalities.join('\\n')\n                                : editData.psychotherapy_modalities || ''}\n                            onChange={(e) => updateSectionField('psychotherapy_modalities', 'psychotherapy_modalities', e.target.value.split('\\n').filter(item => item.trim()))}\n                            rows={4}\n                            className=\"w-full bg-slate-700 border border-slate-600 rounded-lg px-4 py-3 text-white placeholder-slate-400 focus:ring-2 focus:ring-purple-500 focus:border-purple-500 resize-none\"\n                            placeholder=\"Enter psychotherapy modalities (one per line)...\"\n                          />\n                          <div className=\"flex justify-end gap-2\">\n                            <button\n                              onClick={() => cancelEditingSection('psychotherapy_modalities')}\n                              className=\"px-3 py-2 text-slate-300 hover:text-white border border-slate-600 rounded-lg hover:bg-slate-700 transition-colors text-sm\"\n                            >\n                              Cancel\n                            </button>\n                            <motion.button\n                              onClick={() => saveSectionEdit('psychotherapy_modalities')}\n                              disabled={isLoading}\n                              className=\"px-3 py-2 bg-purple-600 text-white rounded-lg hover:bg-purple-700 transition-colors text-sm flex items-center gap-2\"\n                            >\n                              {isLoading ? <Loader2 size={14} className=\"animate-spin\" /> : <Save size={14} />}\n                              Save\n                            </motion.button>\n                          </div>\n                        </div>\n                      ) : (\n                        <div className=\"space-y-2\">\n                          {(editData.psychotherapy_modalities || []).length > 0 ? (\n                            editData.psychotherapy_modalities.map((modality, index) => (\n                              <div key={index} className=\"flex items-center gap-3\">\n                                <span className=\"text-purple-400 font-medium\">•</span>\n                                <span className=\"text-slate-300\">{modality}</span>\n                              </div>\n                            ))\n                          ) : (\n                            <span className=\"text-slate-500 italic\">No psychotherapy modalities added</span>\n                          )}\n                        </div>\n                      )}\n                    </motion.div>\n                  </motion.div>\n                )}\n\n                {/* Connections Tab */}\n                {activeTab === 'connections' && (\n                  <motion.div\n                    key=\"connections\"\n                    ref={el => contentRefs.current.connections = el}\n                    initial={{ opacity: 0, x: -20 }}\n                    animate={{ opacity: 1, x: 0 }}\n                    exit={{ opacity: 0, x: 20 }}\n                    transition={{ duration: 0.3 }}\n                    className=\"h-full overflow-y-auto p-6 space-y-6\"\n                  >\n                    <motion.div \n                      variants={cardVariants}\n                      initial=\"hidden\"\n                      animate=\"visible\"\n                      className=\"bg-slate-800/50 backdrop-blur-sm rounded-xl p-6 border border-slate-700\"\n                    >\n                      <h3 className=\"text-lg font-semibold text-white mb-4 flex items-center gap-2\">\n                        <Link2 size={20} className=\"text-blue-400\" />\n                        Connected Nodes\n                      </h3>\n                      <p className=\"text-slate-400 text-center py-8\">\n                        This section will show nodes connected to this topic in the mind map.\n                      </p>\n                    </motion.div>\n                  </motion.div>\n                )}\n              </AnimatePresence>\n            </motion.div>\n          </motion.div>\n        </motion.div>\n      )}\n    </AnimatePresence>\n  );\n};\n\nexport default TopicModal;","// Enhanced Task Modal with tabbed interface and advanced animations\nimport React, { useState, useEffect, useMemo, useCallback, useRef } from 'react';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport { \n  X, \n  CheckSquare, \n  Clock, \n  AlertTriangle, \n  Flag, \n  Calendar, \n  Link2, \n  Target,\n  Edit3,\n  Trash2,\n  Save,\n  Loader2,\n  Star,\n  Play,\n  Pause,\n  RotateCcw,\n  TrendingUp,\n  Users,\n  BookOpen,\n  FileText,\n  Tag\n} from 'lucide-react';\n\n// Animation variants for Framer Motion\nconst modalVariants = {\n  hidden: {\n    opacity: 0,\n    scale: 0.3,\n    y: 50,\n    rotate: -5,\n  },\n  visible: {\n    opacity: 1,\n    scale: 1,\n    y: 0,\n    rotate: 0,\n    transition: {\n      type: \"spring\",\n      damping: 25,\n      stiffness: 300,\n      duration: 0.6,\n    }\n  },\n  exit: {\n    opacity: 0,\n    scale: 0.7,\n    y: 30,\n    rotate: -3,\n    transition: {\n      type: \"easeInOut\",\n      duration: 0.4,\n    }\n  }\n};\n\nconst backdropVariants = {\n  hidden: { \n    opacity: 0,\n    backdropFilter: 'blur(0px)'\n  },\n  visible: { \n    opacity: 1,\n    backdropFilter: 'blur(8px)',\n    transition: {\n      duration: 0.4,\n      ease: \"easeOut\"\n    }\n  },\n  exit: { \n    opacity: 0,\n    backdropFilter: 'blur(0px)',\n    transition: {\n      duration: 0.3,\n      ease: \"easeIn\"\n    }\n  }\n};\n\nconst contentVariants = {\n  hidden: {\n    opacity: 0,\n    y: 20,\n    scale: 0.95,\n  },\n  visible: {\n    opacity: 1,\n    y: 0,\n    scale: 1,\n    transition: {\n      type: \"easeOut\",\n      duration: 0.3,\n      delay: 0.1,\n    }\n  },\n  exit: {\n    opacity: 0,\n    y: -10,\n    scale: 1.02,\n    transition: {\n      type: \"easeIn\",\n      duration: 0.2,\n    }\n  }\n};\n\nconst TaskModal = ({ \n  isOpen, \n  data, \n  onClose,\n  onAnimationStart,\n  onAnimationEnd,\n  setMindMapData,\n  autoSaveMindMapData,\n  addToast\n}) => {\n  const [isAnimating, setIsAnimating] = useState(false);\n  const [isVisible, setIsVisible] = useState(false);\n  const [isClosing, setIsClosing] = useState(false);\n  const [isEditing, setIsEditing] = useState(false);\n  const [editData, setEditData] = useState({});\n  const [isLoading, setIsLoading] = useState(false);\n  const [hasInitialized, setHasInitialized] = useState(false);\n  const [activeTab, setActiveTab] = useState('overview');\n  const [isTabTransitioning, setIsTabTransitioning] = useState(false);\n\n  useEffect(() => {\n    if (isOpen && data && !hasInitialized) {\n      setIsVisible(true);\n      setEditData({ \n        ...data,\n        status: data.status || 'pending',\n        priority: data.priority || 'medium'\n      });\n      setHasInitialized(true);\n      setIsAnimating(true);\n      if (onAnimationStart) onAnimationStart();\n      \n      setTimeout(() => {\n        setIsAnimating(false);\n        if (onAnimationEnd) onAnimationEnd();\n      }, 600);\n    } else if (!isOpen && hasInitialized) {\n      setHasInitialized(false);\n    }\n  }, [isOpen, hasInitialized, onAnimationStart, onAnimationEnd]);\n\n  // Separate effect for data updates when modal is already open\n  useEffect(() => {\n    if (isOpen && data && hasInitialized && !isEditing && !isLoading && !isTabTransitioning && !isAnimating) {\n      setEditData({ \n        ...data,\n        status: data.status || 'pending',\n        priority: data.priority || 'medium'\n      });\n    }\n  }, [data?.id, isOpen, hasInitialized, isEditing, isLoading, isTabTransitioning, isAnimating]);\n\n  const priorityConfig = useMemo(() => ({\n    low: { color: 'green', label: 'Low Priority', icon: Flag },\n    medium: { color: 'yellow', label: 'Medium Priority', icon: Flag },\n    high: { color: 'red', label: 'High Priority', icon: Flag },\n    urgent: { color: 'purple', label: 'Urgent', icon: AlertTriangle }\n  }), []);\n\n  const statusConfig = useMemo(() => ({\n    pending: { color: 'gray', label: 'Pending', icon: Clock },\n    in_progress: { color: 'blue', label: 'In Progress', icon: Play },\n    completed: { color: 'green', label: 'Completed', icon: CheckSquare },\n    paused: { color: 'orange', label: 'Paused', icon: Pause }\n  }), []);\n\n  const isOverdue = useMemo(() => {\n    if (!editData.due_date) return false;\n    const dueDate = new Date(editData.due_date);\n    const today = new Date();\n    return dueDate < today && editData.status !== 'completed';\n  }, [editData.due_date, editData.status]);\n\n  const handleClose = useCallback(() => {\n    if (isAnimating || isClosing) return;\n    \n    setIsAnimating(true);\n    setIsClosing(true);\n    if (onAnimationStart) onAnimationStart();\n    \n    // Set visibility to false to trigger exit animation\n    setIsVisible(false);\n  }, [onAnimationStart, isAnimating, isClosing]);\n\n  const handleSave = useCallback(async () => {\n    if (isLoading) return;\n    \n    setIsLoading(true);\n    try {\n      setMindMapData(prevData => {\n        const updatedTasks = prevData.tasks.map(task =>\n          String(task.id) === String(data?.id) ? { ...task, ...editData } : task\n        );\n        const newData = { ...prevData, tasks: updatedTasks };\n        autoSaveMindMapData(newData);\n        return newData;\n      });\n      \n      setIsEditing(false);\n      addToast('Task updated successfully', 'success');\n    } catch (error) {\n      console.error('Error saving task:', error);\n      addToast('Failed to save task', 'error');\n    } finally {\n      setIsLoading(false);\n    }\n  }, [data?.id, editData, setMindMapData, autoSaveMindMapData, addToast, isLoading]);\n\n  const handleDelete = useCallback(async () => {\n    if (isLoading) return;\n    \n    if (!window.confirm('Are you sure you want to delete this task?')) return;\n    \n    setIsLoading(true);\n    try {\n      setMindMapData(prevData => {\n        const updatedTasks = prevData.tasks.filter(task => String(task.id) !== String(data?.id));\n        const newData = { ...prevData, tasks: updatedTasks };\n        autoSaveMindMapData(newData);\n        return newData;\n      });\n      \n      addToast('Task deleted successfully', 'success');\n      handleClose();\n    } catch (error) {\n      console.error('Error deleting task:', error);\n      addToast('Failed to delete task', 'error');\n    } finally {\n      setIsLoading(false);\n    }\n  }, [data?.id, setMindMapData, autoSaveMindMapData, addToast, handleClose, isLoading]);\n\n  const handleStatusChange = useCallback((newStatus) => {\n    setEditData(prev => ({ ...prev, status: newStatus }));\n  }, []);\n\n  const updateField = useCallback((field, value) => {\n    setEditData(prev => ({ ...prev, [field]: value }));\n  }, []);\n\n  const renderField = (label, field, type = 'text', options = {}) => {\n    const value = editData[field] || '';\n    \n    if (!isEditing) {\n      if (type === 'textarea') {\n        return (\n          <div className=\"space-y-2\">\n            <label className=\"block text-sm font-medium text-gray-700\">{label}</label>\n            <div className=\"p-3 bg-gray-50 rounded-lg border min-h-[2.5rem] text-gray-800\">\n              {value || <span className=\"text-gray-400 italic\">Not specified</span>}\n            </div>\n          </div>\n        );\n      }\n      \n      if (type === 'select') {\n        return (\n          <div className=\"space-y-2\">\n            <label className=\"block text-sm font-medium text-gray-700\">{label}</label>\n            <div className=\"p-3 bg-gray-50 rounded-lg border text-gray-800\">\n              {value || <span className=\"text-gray-400 italic\">Not specified</span>}\n            </div>\n          </div>\n        );\n      }\n      \n      if (type === 'date') {\n        return (\n          <div className=\"space-y-2\">\n            <label className=\"block text-sm font-medium text-gray-700\">{label}</label>\n            <div className=\"p-3 bg-gray-50 rounded-lg border text-gray-800\">\n              {value ? new Date(value).toLocaleDateString() : <span className=\"text-gray-400 italic\">Not set</span>}\n            </div>\n          </div>\n        );\n      }\n      \n      return (\n        <div className=\"space-y-2\">\n          <label className=\"block text-sm font-medium text-gray-700\">{label}</label>\n          <div className=\"p-3 bg-gray-50 rounded-lg border text-gray-800\">\n            {value || <span className=\"text-gray-400 italic\">Not specified</span>}\n          </div>\n        </div>\n      );\n    }\n\n    // Editing mode\n    if (type === 'textarea') {\n      return (\n        <div className=\"space-y-2\">\n          <label className=\"block text-sm font-medium text-gray-700\">{label}</label>\n          <textarea\n            value={value}\n            onChange={(e) => updateField(field, e.target.value)}\n            className=\"w-full p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-colors\"\n            rows={options.rows || 3}\n            placeholder={`Enter ${label.toLowerCase()}...`}\n          />\n        </div>\n      );\n    }\n\n    if (type === 'select' && options.choices) {\n      return (\n        <div className=\"space-y-2\">\n          <label className=\"block text-sm font-medium text-gray-700\">{label}</label>\n          <select\n            value={value}\n            onChange={(e) => updateField(field, e.target.value)}\n            className=\"w-full p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-colors\"\n          >\n            <option value=\"\">Select {label.toLowerCase()}...</option>\n            {options.choices.map(choice => (\n              <option key={choice.value} value={choice.value}>{choice.label}</option>\n            ))}\n          </select>\n        </div>\n      );\n    }\n\n    if (type === 'date') {\n      return (\n        <div className=\"space-y-2\">\n          <label className=\"block text-sm font-medium text-gray-700\">{label}</label>\n          <input\n            type=\"date\"\n            value={value}\n            onChange={(e) => updateField(field, e.target.value)}\n            className=\"w-full p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-colors\"\n          />\n        </div>\n      );\n    }\n\n    return (\n      <div className=\"space-y-2\">\n        <label className=\"block text-sm font-medium text-gray-700\">{label}</label>\n        <input\n          type={type}\n          value={value}\n          onChange={(e) => updateField(field, type === 'number' ? Number(e.target.value) : e.target.value)}\n          className=\"w-full p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-colors\"\n          placeholder={`Enter ${label.toLowerCase()}...`}\n        />\n      </div>\n    );\n  };\n\n  if (!isOpen) return null;\n\n  return (\n    <AnimatePresence mode=\"wait\" onExitComplete={() => {\n      setIsAnimating(false);\n      setIsClosing(false);\n      setHasInitialized(false);\n      onClose();\n      if (onAnimationEnd) onAnimationEnd();\n    }}>\n      {isVisible && (\n        <motion.div\n          key={`task-modal-${data?.id || 'default'}`}\n          initial=\"hidden\"\n          animate=\"visible\"\n          exit=\"exit\"\n          variants={backdropVariants}\n          className=\"fixed inset-0 bg-black flex items-center justify-center z-50\"\n          style={{ \n            willChange: 'backdrop-filter, opacity',\n            backfaceVisibility: 'hidden',\n            transform: 'translate3d(0, 0, 0)'\n          }}\n          onClick={(e) => e.target === e.currentTarget && handleClose()}\n        >\n          <motion.div\n            initial=\"hidden\"\n            animate=\"visible\"\n            exit=\"exit\"\n            variants={modalVariants}\n            className=\"bg-white rounded-2xl shadow-2xl max-w-4xl w-full mx-4 max-h-[85vh] overflow-hidden\"\n            style={{ \n              willChange: 'transform, opacity, scale',\n              backfaceVisibility: 'hidden'\n            }}\n            onClick={(e) => e.stopPropagation()}\n            onAnimationStart={() => {\n              setIsAnimating(true);\n              if (onAnimationStart) onAnimationStart();\n            }}\n            onAnimationComplete={() => {\n              setIsAnimating(false);\n              if (onAnimationEnd) onAnimationEnd();\n            }}\n          >\n            <motion.div \n              initial=\"hidden\"\n              animate=\"visible\"\n              exit=\"exit\"\n              variants={contentVariants}\n              className=\"bg-gradient-to-br from-slate-900 to-slate-800 text-white px-6 py-4 flex items-center justify-between\"\n            >\n              <div className=\"flex items-center gap-3\">\n                <CheckSquare size={24} />\n                <h2 className=\"text-xl font-semibold\">Task Details</h2>\n                {isOverdue && (\n                  <motion.div\n                    animate={{ scale: [1, 1.1, 1] }}\n                    transition={{ duration: 1, repeat: Infinity }}\n                    className=\"flex items-center gap-1 px-2 py-1 bg-red-500 rounded-full text-xs font-medium\"\n                  >\n                    <AlertTriangle size={12} />\n                    Overdue\n                  </motion.div>\n                )}\n              </div>\n              <div className=\"flex items-center gap-2\">\n                {!isEditing && !isLoading && (\n                  <>\n                    <button\n                      onClick={() => setIsEditing(true)}\n                      className=\"text-white hover:text-gray-200 p-2 rounded-full hover:bg-white hover:bg-opacity-20 transition-all\"\n                      title=\"Edit\"\n                    >\n                      <Edit3 size={20} />\n                    </button>\n                    <button\n                      onClick={handleDelete}\n                      className=\"text-white hover:text-red-200 p-2 rounded-full hover:bg-red-500 hover:bg-opacity-30 transition-all\"\n                      title=\"Delete\"\n                    >\n                      <Trash2 size={20} />\n                    </button>\n                  </>\n                )}\n                <button onClick={handleClose} className=\"text-white hover:text-gray-200 p-2 rounded-full hover:bg-white hover:bg-opacity-20 transition-all\">\n                  <X size={20} />\n                </button>\n              </div>\n            </motion.div>\n\n            {/* Tab Navigation */}\n            <div className=\"bg-gradient-to-r from-slate-900 via-slate-800 to-slate-900 border-b border-slate-600\">\n              <nav className=\"flex flex-wrap gap-2 px-6 py-4\">\n                {[\n                  { key: 'overview', label: 'Overview', icon: CheckSquare },\n                  { key: 'progress', label: 'Progress', icon: TrendingUp },\n                  { key: 'connections', label: 'Connections', icon: Link2 },\n                  { key: 'details', label: 'Details', icon: FileText }\n                ].map(({ key, label, icon: Icon }) => (\n                  <motion.button\n                    key={key}\n                    onClick={() => {\n                      if (isTabTransitioning) return;\n                      setIsTabTransitioning(true);\n                      setActiveTab(key);\n                      setTimeout(() => setIsTabTransitioning(false), 300);\n                    }}\n                    className={`relative flex items-center gap-2 px-4 py-3 rounded-xl font-medium text-sm transition-all duration-300 ${\n                      activeTab === key\n                        ? 'bg-gradient-to-r from-emerald-500 to-teal-600 text-white shadow-lg shadow-emerald-500/25'\n                        : 'text-slate-300 hover:text-white hover:bg-slate-700/50 hover:shadow-md'\n                    }`}\n                    whileHover={{ scale: activeTab === key ? 1 : 1.02 }}\n                    whileTap={{ scale: 0.98 }}\n                    initial={false}\n                    animate={{\n                      scale: activeTab === key ? 1.05 : 1,\n                      boxShadow: activeTab === key \n                        ? '0 8px 25px rgba(16, 185, 129, 0.3), 0 0 20px rgba(20, 184, 166, 0.2)' \n                        : '0 2px 8px rgba(0, 0, 0, 0.1)'\n                    }}\n                    transition={{ duration: 0.3, ease: \"easeOut\" }}\n                  >\n                    <Icon size={16} className={activeTab === key ? 'drop-shadow-sm' : ''} />\n                    {label}\n                    \n                    {activeTab === key && (\n                      <motion.div\n                        layoutId=\"taskTabGlow\"\n                        className=\"absolute inset-0 bg-gradient-to-r from-emerald-400/20 to-teal-500/20 rounded-xl blur-sm\"\n                        initial={false}\n                        transition={{ type: \"spring\", bounce: 0.2, duration: 0.6 }}\n                      />\n                    )}\n                  </motion.button>\n                ))}\n              </nav>\n            </div>\n            \n            {/* Tab Content */}\n            <motion.div \n              className=\"relative overflow-hidden bg-gradient-to-br from-slate-50 to-slate-100\"\n              layout=\"position\"\n              layoutRoot\n              transition={{ \n                layout: { duration: 0.4, ease: \"easeInOut\" },\n                height: { duration: 0.4, ease: \"easeInOut\" }\n              }}\n            >\n              <AnimatePresence mode=\"wait\" initial={false} onExitComplete={() => setIsTabTransitioning(false)}>\n                {/* Overview Tab */}\n                {activeTab === 'overview' && (\n                  <motion.div\n                    key=\"overview\"\n                    initial={{ opacity: 0, x: -30 }}\n                    animate={{ opacity: 1, x: 0 }}\n                    exit={{ opacity: 0, x: 30 }}\n                    transition={{ duration: 0.4, ease: \"easeOut\" }}\n                    layout=\"position\"\n                    layoutId=\"tabContent\"\n                    className=\"p-6 overflow-y-auto max-h-[calc(85vh-200px)] scrollbar-thin scrollbar-thumb-slate-400 scrollbar-track-slate-200\"\n                  >\n                    <div className=\"space-y-6\">\n                      <div className=\"bg-white rounded-xl p-6 shadow-lg border border-slate-200\">\n                        <h3 className=\"text-lg font-semibold text-slate-800 mb-4 flex items-center gap-2\">\n                          <Target size={20} className=\"text-emerald-600\" />\n                          Task Information\n                        </h3>\n                        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                          {renderField('Title', 'title')}\n                          {renderField('Priority', 'priority', 'select', {\n                            choices: [\n                              { value: 'low', label: 'Low Priority' },\n                              { value: 'medium', label: 'Medium Priority' },\n                              { value: 'high', label: 'High Priority' },\n                              { value: 'urgent', label: 'Urgent' }\n                            ]\n                          })}\n                        </div>\n                        <div className=\"mt-6\">\n                          {renderField('Description', 'description', 'textarea', { rows: 4 })}\n                        </div>\n                      </div>\n                      \n                      <div className=\"bg-white rounded-xl p-6 shadow-lg border border-slate-200\">\n                        <h3 className=\"text-lg font-semibold text-slate-800 mb-4 flex items-center gap-2\">\n                          <Clock size={20} className=\"text-blue-600\" />\n                          Status & Timeline\n                        </h3>\n                        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                          {renderField('Status', 'status', 'select', {\n                            choices: [\n                              { value: 'pending', label: 'Pending' },\n                              { value: 'in_progress', label: 'In Progress' },\n                              { value: 'completed', label: 'Completed' },\n                              { value: 'paused', label: 'Paused' }\n                            ]\n                          })}\n                          {renderField('Due Date', 'due_date', 'date')}\n                        </div>\n                        \n                        {/* Status Change Buttons */}\n                        <div className=\"mt-6\">\n                          <label className=\"block text-sm font-medium text-gray-700 mb-3\">Quick Status Update</label>\n                          <div className=\"flex flex-wrap gap-3\">\n                            {Object.entries(statusConfig).map(([status, config]) => {\n                              const Icon = config.icon;\n                              const isActive = editData.status === status;\n                              return (\n                                <motion.button\n                                  key={status}\n                                  onClick={() => handleStatusChange(status)}\n                                  disabled={!isEditing}\n                                  whileHover={isEditing ? { scale: 1.05 } : {}}\n                                  whileTap={isEditing ? { scale: 0.95 } : {}}\n                                  className={`flex items-center gap-2 px-4 py-2 rounded-lg font-medium text-sm transition-all ${\n                                    isActive\n                                      ? `bg-${config.color}-100 text-${config.color}-800 border-2 border-${config.color}-300`\n                                      : `bg-gray-100 text-gray-600 border-2 border-gray-200 ${isEditing ? 'hover:bg-gray-200' : 'cursor-not-allowed opacity-50'}`\n                                  }`}\n                                >\n                                  <Icon size={16} />\n                                  {config.label}\n                                </motion.button>\n                              );\n                            })}\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </motion.div>\n                )}\n\n                {/* Progress Tab */}\n                {activeTab === 'progress' && (\n                  <motion.div\n                    key=\"progress\"\n                    initial={{ opacity: 0, x: -30 }}\n                    animate={{ opacity: 1, x: 0 }}\n                    exit={{ opacity: 0, x: 30 }}\n                    transition={{ duration: 0.4, ease: \"easeOut\" }}\n                    layout=\"position\"\n                    layoutId=\"tabContent\"\n                    className=\"p-6 overflow-y-auto max-h-[calc(85vh-200px)] scrollbar-thin scrollbar-thumb-slate-400 scrollbar-track-slate-200\"\n                  >\n                    <div className=\"bg-white rounded-xl p-6 shadow-lg border border-slate-200\">\n                      <h3 className=\"text-lg font-semibold text-slate-800 mb-6 flex items-center gap-2\">\n                        <TrendingUp size={20} className=\"text-blue-600\" />\n                        Task Progress\n                      </h3>\n                      \n                      {/* Status Overview */}\n                      <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6 mb-8\">\n                        <motion.div\n                          whileHover={{ scale: 1.02 }}\n                          className={`p-4 rounded-lg border-2 ${\n                            editData.status === 'completed' \n                              ? 'bg-green-50 border-green-200' \n                              : 'bg-gray-50 border-gray-200'\n                          }`}\n                        >\n                          <div className=\"flex items-center gap-3 mb-2\">\n                            <CheckSquare size={20} className={editData.status === 'completed' ? 'text-green-600' : 'text-gray-400'} />\n                            <span className={`font-medium ${editData.status === 'completed' ? 'text-green-800' : 'text-gray-600'}`}>\n                              Completion\n                            </span>\n                          </div>\n                          <div className={`text-2xl font-bold ${editData.status === 'completed' ? 'text-green-700' : 'text-gray-700'}`}>\n                            {editData.status === 'completed' ? '100%' : '0%'}\n                          </div>\n                        </motion.div>\n                        \n                        <motion.div\n                          whileHover={{ scale: 1.02 }}\n                          className={`p-4 rounded-lg border-2 ${\n                            isOverdue \n                              ? 'bg-red-50 border-red-200' \n                              : 'bg-blue-50 border-blue-200'\n                          }`}\n                        >\n                          <div className=\"flex items-center gap-3 mb-2\">\n                            <Calendar size={20} className={isOverdue ? 'text-red-600' : 'text-blue-600'} />\n                            <span className={`font-medium ${isOverdue ? 'text-red-800' : 'text-blue-800'}`}>\n                              Due Date\n                            </span>\n                          </div>\n                          <div className={`text-lg font-bold ${isOverdue ? 'text-red-700' : 'text-blue-700'}`}>\n                            {editData.due_date ? new Date(editData.due_date).toLocaleDateString() : 'Not set'}\n                          </div>\n                          {isOverdue && (\n                            <div className=\"text-sm text-red-600 mt-1\">Overdue</div>\n                          )}\n                        </motion.div>\n                        \n                        <motion.div\n                          whileHover={{ scale: 1.02 }}\n                          className={`p-4 rounded-lg border-2 ${\n                            editData.priority === 'urgent' || editData.priority === 'high'\n                              ? 'bg-orange-50 border-orange-200'\n                              : 'bg-gray-50 border-gray-200'\n                          }`}\n                        >\n                          <div className=\"flex items-center gap-3 mb-2\">\n                            <Flag size={20} className={\n                              editData.priority === 'urgent' || editData.priority === 'high' \n                                ? 'text-orange-600' \n                                : 'text-gray-600'\n                            } />\n                            <span className={`font-medium ${\n                              editData.priority === 'urgent' || editData.priority === 'high' \n                                ? 'text-orange-800' \n                                : 'text-gray-800'\n                            }`}>\n                              Priority\n                            </span>\n                          </div>\n                          <div className={`text-lg font-bold ${\n                            editData.priority === 'urgent' || editData.priority === 'high' \n                              ? 'text-orange-700' \n                              : 'text-gray-700'\n                          }`}>\n                            {priorityConfig[editData.priority]?.label || 'Not set'}\n                          </div>\n                        </motion.div>\n                      </div>\n                    </div>\n                  </motion.div>\n                )}\n\n                {/* Connections Tab */}\n                {activeTab === 'connections' && (\n                  <motion.div\n                    key=\"connections\"\n                    initial={{ opacity: 0, x: -30 }}\n                    animate={{ opacity: 1, x: 0 }}\n                    exit={{ opacity: 0, x: 30 }}\n                    transition={{ duration: 0.4, ease: \"easeOut\" }}\n                    layout=\"position\"\n                    layoutId=\"tabContent\"\n                    className=\"p-6 overflow-y-auto max-h-[calc(85vh-200px)] scrollbar-thin scrollbar-thumb-slate-400 scrollbar-track-slate-200\"\n                  >\n                    <div className=\"bg-white rounded-xl p-6 shadow-lg border border-slate-200\">\n                      <h3 className=\"text-lg font-semibold text-slate-800 mb-6 flex items-center gap-2\">\n                        <Link2 size={20} className=\"text-indigo-600\" />\n                        Related Content\n                      </h3>\n                      \n                      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                        {renderField('Linked Case ID', 'linked_case_id')}\n                        {renderField('Linked Topic ID', 'linked_topic_id')}\n                      </div>\n                      \n                      <div className=\"mt-8 text-center py-8 text-gray-500\">\n                        <Link2 size={48} className=\"mx-auto mb-3 text-gray-300\" />\n                        <p>No connections found</p>\n                        <p className=\"text-sm mt-1\">Link this task to cases or topics to create connections</p>\n                      </div>\n                    </div>\n                  </motion.div>\n                )}\n\n                {/* Details Tab */}\n                {activeTab === 'details' && (\n                  <motion.div\n                    key=\"details\"\n                    initial={{ opacity: 0, x: -30 }}\n                    animate={{ opacity: 1, x: 0 }}\n                    exit={{ opacity: 0, x: 30 }}\n                    transition={{ duration: 0.4, ease: \"easeOut\" }}\n                    layout=\"position\"\n                    layoutId=\"tabContent\"\n                    className=\"p-6 overflow-y-auto max-h-[calc(85vh-200px)] scrollbar-thin scrollbar-thumb-slate-400 scrollbar-track-slate-200\"\n                  >\n                    <div className=\"bg-white rounded-xl p-6 shadow-lg border border-slate-200\">\n                      <h3 className=\"text-lg font-semibold text-slate-800 mb-6 flex items-center gap-2\">\n                        <FileText size={20} className=\"text-gray-600\" />\n                        Additional Details\n                      </h3>\n                      \n                      <div className=\"space-y-6\">\n                        <div className=\"text-sm text-gray-600 bg-slate-50 p-4 rounded-lg\">\n                          <p className=\"font-medium mb-2\">Task Details</p>\n                          <div className=\"space-y-2\">\n                            <p><span className=\"font-medium\">Created:</span> {data?.created_at ? new Date(data.created_at).toLocaleString() : 'Unknown'}</p>\n                            <p><span className=\"font-medium\">Last Updated:</span> {data?.updated_at ? new Date(data.updated_at).toLocaleString() : 'Unknown'}</p>\n                            <p><span className=\"font-medium\">Task ID:</span> {data?.id || 'Unknown'}</p>\n                          </div>\n                        </div>\n                        \n                        <div className=\"p-4 bg-blue-50 rounded-lg border border-blue-200\">\n                          <h4 className=\"font-medium text-blue-800 mb-2\">Task Management Tips</h4>\n                          <ul className=\"text-blue-700 text-sm space-y-1\">\n                            <li>• Break large tasks into smaller, manageable subtasks</li>\n                            <li>• Set realistic due dates to maintain accountability</li>\n                            <li>• Link tasks to relevant cases or topics for better organization</li>\n                            <li>• Update status regularly to track progress</li>\n                          </ul>\n                        </div>\n                      </div>\n                    </div>\n                  </motion.div>\n                )}\n              </AnimatePresence>\n            </motion.div>\n\n            {isEditing && (\n              <div className=\"sticky bottom-0 bg-gray-50 border-t border-gray-200 px-6 py-4 flex items-center justify-between\">\n                <div className=\"text-sm text-gray-500\">\n                  Changes will be auto-saved\n                </div>\n                <div className=\"flex items-center gap-3\">\n                  <button\n                    onClick={() => {\n                      setIsEditing(false);\n                      setEditData({ ...data });\n                    }}\n                    disabled={isLoading}\n                    className=\"px-4 py-2 text-gray-600 hover:text-gray-800 border border-gray-300 rounded-lg hover:bg-gray-100 transition-colors\"\n                  >\n                    Cancel\n                  </button>\n                  <button\n                    onClick={handleSave}\n                    disabled={isLoading}\n                    className=\"px-4 py-2 bg-emerald-600 text-white rounded-lg hover:bg-emerald-700 transition-colors flex items-center gap-2\"\n                  >\n                    {isLoading ? <Loader2 size={16} className=\"animate-spin\" /> : <Save size={16} />}\n                    {isLoading ? 'Saving...' : 'Save Changes'}\n                  </button>\n                </div>\n              </div>\n            )}\n          </motion.div>\n        </motion.div>\n      )}\n    </AnimatePresence>\n  );\n};\n\nexport default React.memo(TaskModal, (prevProps, nextProps) => {\n  return (\n    prevProps.isOpen === nextProps.isOpen &&\n    prevProps.data?.id === nextProps.data?.id &&\n    prevProps.data?.updated_at === nextProps.data?.updated_at\n  );\n});\n","// D3 Physics Timeline - Refined with proper node interactions and card behavior  \nimport React, { useRef, useState, useEffect, useCallback, useMemo } from 'react';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport { Plus, RotateCcw, Edit3, Save, X, Trash2 } from 'lucide-react';\nimport { forceSimulation, forceLink, forceManyBody, forceX, forceY } from 'd3-force';\nimport { drag } from 'd3-drag';\nimport { select } from 'd3-selection';\nimport { scaleOrdinal } from 'd3-scale';\nimport { schemeCategory10 } from 'd3-scale-chromatic';\nimport { easeElastic, easeBackOut } from 'd3-ease';\n\n// Enhanced Hover Cards with precise corner positioning\nconst TimelineHoverCard = ({\n  entry,\n  position,\n  type,\n  isVisible,\n  isEditing,\n  onEdit,\n  onSave,\n  onCancel,\n  onCardHover,\n  onCardLeave\n}) => {\n  const [editContent, setEditContent] = useState('');\n  const cardRef = useRef(null);\n\n  useEffect(() => {\n    if (isEditing) {\n      setEditContent(type === 'patient' ? entry.patient_narrative || '' : entry.clinical_notes || '');\n    }\n  }, [isEditing, entry, type]);\n\n  // Handle click outside to save\n  useEffect(() => {\n    const handleClickOutside = (event) => {\n      if (isEditing && cardRef.current && !cardRef.current.contains(event.target)) {\n        onSave(entry.id, type, editContent);\n      }\n    };\n\n    if (isEditing) {\n      document.addEventListener('mousedown', handleClickOutside);\n      return () => document.removeEventListener('mousedown', handleClickOutside);\n    }\n  }, [isEditing, editContent, entry.id, type, onSave]);\n\n  const handleCardClick = (e) => {\n    e.stopPropagation();\n    if (!isEditing) {\n      onEdit(entry.id, type);\n    }\n  };\n\n  const handleSave = () => {\n    onSave(entry.id, type, editContent);\n  };\n\n  const cardTitle = type === 'patient' ? 'Patient Narrative' : 'Clinical Notes';\n  const cardContent = type === 'patient' ? entry.patient_narrative : entry.clinical_notes;\n  const bgColor = type === 'patient' ? 'bg-green-800/95' : 'bg-blue-800/95';\n  const borderColor = type === 'patient' ? 'border-green-400' : 'border-blue-400';\n  const glowColor = type === 'patient' ? 'shadow-green-400/30' : 'shadow-blue-400/30';\n  \n  // Enhanced styling when editing\n  const editingStyles = isEditing ? 'ring-2 ring-yellow-400 ring-opacity-60' : '';\n  const cardOpacity = isEditing ? 'opacity-100' : 'opacity-90';\n\n  if (!isVisible) return null;\n\n  return (\n    <motion.div\n      ref={cardRef}\n      initial={{ opacity: 0, scale: 0.95 }}\n      animate={{ opacity: 1, scale: 1 }}\n      exit={{ opacity: 0, scale: 0.95 }}\n      transition={{ duration: 0.15, ease: \"easeOut\" }}\n      className={`absolute z-50 ${bgColor} ${cardOpacity} ${editingStyles} backdrop-blur-md rounded-lg border-2 ${borderColor} shadow-xl ${glowColor} p-4 w-80 cursor-pointer`}\n      style={{\n        left: position.x,\n        top: position.y,\n        filter: 'drop-shadow(0 4px 12px rgba(0,0,0,0.4))'\n      }}\n      onClick={handleCardClick}\n      onMouseEnter={(e) => {\n        e.stopPropagation();\n        if (onCardHover) {\n          onCardHover();\n        }\n      }}\n      onMouseLeave={(e) => {\n        e.stopPropagation();\n        if (onCardLeave) {\n          onCardLeave();\n        }\n      }}\n    >\n      {/* Connection line to node - more visible */}\n      <div \n        className={`absolute w-1 h-8 ${type === 'patient' ? 'bg-green-400' : 'bg-blue-400'} shadow-lg`}\n        style={{\n          [position.anchorSide]: '-2px',\n          [position.anchorPosition]: '16px',\n          boxShadow: `0 0 8px ${type === 'patient' ? '#34d399' : '#60a5fa'}`\n        }}\n      />\n\n      {/* Header */}\n      <div className=\"flex items-center justify-between mb-2\">\n        <h4 className=\"text-sm font-semibold text-white flex items-center gap-2\">\n          {type === 'patient' ? '👤' : '🩺'} {cardTitle}\n        </h4>\n        {isEditing && (\n          <motion.button\n            whileHover={{ scale: 1.1 }}\n            whileTap={{ scale: 0.9 }}\n            onClick={(e) => {\n              e.stopPropagation();\n              handleSave();\n            }}\n            className=\"text-green-400 hover:text-green-300 transition-colors p-1 rounded\"\n            title=\"Save changes\"\n          >\n            <Save size={12} />\n          </motion.button>\n        )}\n      </div>\n\n      {/* Content */}\n      {isEditing ? (\n        <div className=\"space-y-2\">\n          <textarea\n            value={editContent}\n            onChange={(e) => setEditContent(e.target.value)}\n            className=\"w-full h-20 bg-slate-900 border border-slate-600 rounded px-2 py-1 text-white text-sm placeholder-slate-400 focus:ring-1 focus:ring-blue-400 focus:border-blue-400 resize-none\"\n            placeholder={`Enter ${cardTitle.toLowerCase()}...`}\n            autoFocus\n            onClick={(e) => e.stopPropagation()}\n          />\n          <div className=\"text-xs text-slate-400\">Click outside to save</div>\n        </div>\n      ) : (\n        <div className=\"text-slate-200 text-sm leading-relaxed\">\n          {cardContent ? (\n            <div className=\"max-h-16 overflow-y-auto\">\n              <p>{cardContent}</p>\n            </div>\n          ) : (\n            <p className=\"text-slate-400 italic\">\n              Click to add {cardTitle.toLowerCase()}\n            </p>\n          )}\n        </div>\n      )}\n\n      {/* Timestamp */}\n      {!isEditing && entry.timestamp && (\n        <div className=\"mt-2 pt-1 border-t border-slate-600\">\n          <span className=\"text-xs text-slate-400\">\n            {new Date(entry.timestamp).toLocaleString()}\n          </span>\n        </div>\n      )}\n    </motion.div>\n  );\n};\n\nconst D3PhysicsTimeline = ({ \n  caseId, \n  initialEntries = [],\n  onEntryUpdate,\n  onEntryAdd,\n  onEntryDelete,\n  className = '',\n  width = 800,\n  height = 600\n}) => {\n  const svgRef = useRef(null);\n  const simulationRef = useRef(null);\n  const nodesRef = useRef([]);\n  const linksRef = useRef([]);\n  const hoverTimeoutRef = useRef(null);\n  const containerRef = useRef(null);\n  \n  const [hoveredNode, setHoveredNode] = useState(null);\n  const [hoveredLink, setHoveredLink] = useState(null);\n  const [entries, setEntries] = useState(initialEntries);\n  const [editingCard, setEditingCard] = useState(null); // {nodeId, type}\n  const [newNodeIds, setNewNodeIds] = useState(new Set()); // Track genuinely new nodes\n  const [undoStack, setUndoStack] = useState([]); // Undo functionality\n  const [contextMenu, setContextMenu] = useState(null); // Right-click context menu\n\n  // Enhanced save functionality with undo support\n  const saveTimelineChanges = useCallback(async (nodeId, updatedEntries, createUndoPoint = true) => {\n    if (createUndoPoint) {\n      // Create undo point before making changes\n      setUndoStack(prev => [...prev.slice(-9), entries]); // Keep last 10 states\n    }\n    \n    setEntries(updatedEntries);\n    \n    if (onEntryUpdate) {\n      return await onEntryUpdate(updatedEntries, { force: false });\n    }\n    return { success: true };\n  }, [entries, onEntryUpdate]);\n\n  // Undo functionality\n  const handleUndo = useCallback(() => {\n    if (undoStack.length > 0) {\n      const previousState = undoStack[undoStack.length - 1];\n      setUndoStack(prev => prev.slice(0, -1));\n      setEntries(previousState);\n      setEditingCard(null); // Close any editing\n      \n      if (onEntryUpdate) {\n        onEntryUpdate(previousState, { force: true });\n      }\n    }\n  }, [undoStack, onEntryUpdate]);\n\n  // Handle saving current editing cards with content check\n  const handleSaveCurrentEditingCards = useCallback(async (closeAfterSave = true) => {\n    if (!editingCard) return;\n    \n    const node = nodesRef.current?.find(n => n.id === editingCard.nodeId);\n    if (!node) return;\n    \n    // Get current card content (this would come from the card components)\n    const currentEntry = entries.find(entry => entry.id === editingCard.nodeId);\n    if (!currentEntry) return;\n    \n    // Check if both cards are empty - if so, skip saving\n    const hasPatientContent = currentEntry.patient_narrative && currentEntry.patient_narrative.trim();\n    const hasClinicalContent = currentEntry.clinical_notes && currentEntry.clinical_notes.trim();\n    \n    if (!hasPatientContent && !hasClinicalContent) {\n      // Skip saving empty cards\n      if (closeAfterSave) {\n        setEditingCard(null);\n        setHoveredNode(null);\n      }\n      return;\n    }\n    \n    // Save the timeline changes\n    await saveTimelineChanges(editingCard.nodeId, entries, true);\n    \n    if (closeAfterSave) {\n      setEditingCard(null);\n      setHoveredNode(null);\n    }\n  }, [editingCard, entries, saveTimelineChanges]);\n\n  // Delete node functionality\n  const handleDeleteNode = useCallback(async (nodeId) => {\n    const nodeToDelete = entries.find(entry => entry.id === nodeId);\n    if (!nodeToDelete) return;\n    \n    // Create undo point\n    setUndoStack(prev => [...prev.slice(-9), entries]);\n    \n    // Remove the node\n    const updatedEntries = entries.filter(entry => entry.id !== nodeId);\n    setEntries(updatedEntries);\n    setEditingCard(null); // Close any editing\n    setContextMenu(null); // Close context menu\n    \n    if (onEntryUpdate) {\n      await onEntryUpdate(updatedEntries, { force: true });\n    }\n  }, [entries, onEntryUpdate]);\n\n  // Color scale for different entry types\n  const color = scaleOrdinal(schemeCategory10);\n\n  // Calculate zigzag positions based on chronological order - with fixed first node\n  const calculateZigzagPositions = useCallback((timelineEntries) => {\n    const sortedEntries = [...timelineEntries].sort((a, b) => \n      new Date(a.timestamp) - new Date(b.timestamp)\n    );\n    \n    // Center the timeline in the available space\n    const centerX = width / 2;\n    const startY = 80;\n    const verticalSpacing = 120;\n    const horizontalOffset = 140;\n    \n    return sortedEntries.map((entry, index) => ({\n      ...entry,\n      id: entry.id || `entry-${index}`,\n      title: entry.title || `Entry ${index + 1}`,\n      type: entry.type || 'note',\n      orderIndex: index,\n      // First node is always on the left, then alternates\n      x: centerX + (index % 2 === 0 ? -horizontalOffset : horizontalOffset),\n      y: startY + (index * verticalSpacing),\n      side: index % 2 === 0 ? 'left' : 'right',\n      patient_narrative: entry.patient_narrative || '',\n      clinical_notes: entry.clinical_notes || '',\n      symptoms: entry.symptoms || [],\n      data: entry,\n      // Add positioning info for cards\n      isFirstNode: index === 0\n    }));\n  }, [width]);\n\n  // Create timeline path links\n  const createTimelineLinks = useCallback((nodes) => {\n    const links = [];\n    for (let i = 0; i < nodes.length - 1; i++) {\n      links.push({\n        id: `link-${i}`,\n        source: nodes[i].id,\n        target: nodes[i + 1].id,\n        insertIndex: i + 1 // For inserting new nodes\n      });\n    }\n    return links;\n  }, []);\n\n  // Calculate card position based on node position and zigzag side - improved alignment and visibility\n  const calculateCardPosition = useCallback((node, cardType) => {\n    if (!node) return { x: 0, y: 0 };\n    \n    // Use target positions for stable card placement, fall back to current position\n    const nodeX = node.targetX || node.x || 0;\n    const nodeY = node.targetY || node.y || 0;\n    const isLeftBend = node.side === 'left';\n    const cardWidth = 320; // Increased card width\n    const cardHeight = 140; // Increased card height\n    const cardOffset = 45; // Increased offset for better separation\n    \n    let position = {};\n\n    if (cardType === 'patient') {\n      if (isLeftBend) {\n        // Left bend: Patient card from bottom-right of node, aligned horizontally\n        position = {\n          x: nodeX + cardOffset,\n          y: nodeY - (cardHeight / 2), // Center vertically with node\n          anchorSide: 'left',\n          anchorPosition: 'center'\n        };\n      } else {\n        // Right bend: Patient card from top-right of node, aligned horizontally\n        position = {\n          x: nodeX + cardOffset,\n          y: nodeY - (cardHeight / 2), // Center vertically with node\n          anchorSide: 'left', \n          anchorPosition: 'center'\n        };\n      }\n    } else {\n      // Clinical card\n      if (isLeftBend) {\n        // Left bend: Clinical card from top-left of node, aligned horizontally\n        position = {\n          x: nodeX - cardWidth - cardOffset,\n          y: nodeY - (cardHeight / 2), // Center vertically with node\n          anchorSide: 'right',\n          anchorPosition: 'center'\n        };\n      } else {\n        // Right bend: Clinical card from bottom-left of node, aligned horizontally\n        position = {\n          x: nodeX - cardWidth - cardOffset,\n          y: nodeY - (cardHeight / 2), // Center vertically with node\n          anchorSide: 'right',\n          anchorPosition: 'center'\n        };\n      }\n    }\n\n    // Ensure cards stay within container bounds - improved bounds checking\n    const containerPadding = 40;\n    const maxX = width - cardWidth - containerPadding;\n    const maxY = Math.max(height * 0.8, 600) - cardHeight - containerPadding; // Use larger available height\n    \n    position.x = Math.max(containerPadding, Math.min(position.x, maxX));\n    position.y = Math.max(containerPadding, Math.min(position.y, maxY));\n\n    return position;\n  }, [width, height]);\n\n  // Helper functions - defined before initializeSimulation\n  const findNearestTimelinePosition = useCallback((x, y) => {\n    // Logic to find nearest valid zigzag position\n    const zigzagPositions = calculateZigzagPositions(entries);\n    let nearest = null;\n    let minDistance = Infinity;\n    \n    zigzagPositions.forEach((pos, index) => {\n      const distance = Math.sqrt((x - pos.x) ** 2 + (y - pos.y) ** 2);\n      if (distance < minDistance && distance < 100) { // Within snap range\n        minDistance = distance;\n        nearest = { ...pos, index };\n      }\n    });\n    \n    return nearest;\n  }, [entries, calculateZigzagPositions]);\n\n  const reorderTimelineStructure = useCallback((nodeId, newIndex) => {\n    // Reorder entries to maintain zigzag structure\n    const updatedEntries = [...entries];\n    const nodeIndex = updatedEntries.findIndex(entry => entry.id === nodeId);\n    \n    if (nodeIndex !== -1 && newIndex !== nodeIndex) {\n      const [movedEntry] = updatedEntries.splice(nodeIndex, 1);\n      updatedEntries.splice(newIndex, 0, movedEntry);\n      setEntries(updatedEntries);\n    }\n  }, [entries]);\n\n  const insertNewNode = useCallback((insertIndex, x, y) => {\n    const newEntry = {\n      id: `entry-${Date.now()}`,\n      title: `Entry ${entries.length + 1}`,\n      type: 'note',\n      content: '',\n      timestamp: new Date().toISOString(),\n      patient_narrative: '',\n      clinical_notes: '',\n      symptoms: []\n    };\n    \n    // Mark as new for animation\n    setNewNodeIds(prev => new Set([...prev, newEntry.id]));\n    \n    // Insert at specific position\n    const updatedEntries = [...entries];\n    updatedEntries.splice(insertIndex, 0, newEntry);\n    setEntries(updatedEntries);\n    \n    if (onEntryAdd) {\n      onEntryAdd(newEntry);\n    }\n  }, [entries, onEntryAdd]);\n\n  // Enhanced hover handling with card persistence\n  const handleNodeHover = useCallback((nodeId) => {\n    if (hoverTimeoutRef.current) {\n      clearTimeout(hoverTimeoutRef.current);\n    }\n    // Set immediately without delay for more responsive hover\n    setHoveredNode(nodeId);\n  }, []);\n\n  const handleNodeLeave = useCallback(() => {\n    // Don't hide cards if we're in editing mode\n    if (editingCard) {\n      return;\n    }\n    \n    // Use a delay to allow moving from node to cards\n    hoverTimeoutRef.current = setTimeout(() => {\n      setHoveredNode(null);\n    }, 200); // Increased delay for moving between node and cards\n  }, [editingCard]);\n\n  // Handle card hover - keep cards visible when hovering over them\n  const handleCardHover = useCallback(() => {\n    if (hoverTimeoutRef.current) {\n      clearTimeout(hoverTimeoutRef.current);\n    }\n    // Cards stay visible when hovering over them\n  }, []);\n\n  const handleCardLeave = useCallback(() => {\n    // Don't hide cards if we're in editing mode\n    if (editingCard) {\n      return;\n    }\n    \n    // Use a delay to allow moving between cards or back to node\n    hoverTimeoutRef.current = setTimeout(() => {\n      setHoveredNode(null);\n    }, 200);\n  }, [editingCard]);\n\n  // Auto-scroll to ensure cards are visible\n  const ensureCardsVisible = useCallback((nodeId) => {\n    if (!containerRef.current || !nodeId) return;\n\n    const node = nodesRef.current?.find(n => n.id === nodeId);\n    if (!node) return;\n\n    const container = containerRef.current;\n    const containerRect = container.getBoundingClientRect();\n    \n    // Calculate card positions\n    const patientCardPos = calculateCardPosition(node, 'patient');\n    const clinicalCardPos = calculateCardPosition(node, 'clinical');\n    \n    // Find the bounds that encompass both cards and the node\n    const minX = Math.min(node.x - 50, clinicalCardPos.x);\n    const maxX = Math.max(node.x + 50, patientCardPos.x + 320);\n    const minY = Math.min(node.y - 70, Math.min(patientCardPos.y, clinicalCardPos.y));\n    const maxY = Math.max(node.y + 70, Math.max(patientCardPos.y + 140, clinicalCardPos.y + 140));\n    \n    // Calculate required scroll adjustments\n    const scrollLeft = container.scrollLeft;\n    const scrollTop = container.scrollTop;\n    const containerWidth = containerRect.width;\n    const containerHeight = containerRect.height;\n    \n    let newScrollLeft = scrollLeft;\n    let newScrollTop = scrollTop;\n    \n    // Adjust horizontal scroll if needed\n    if (minX < scrollLeft) {\n      newScrollLeft = Math.max(0, minX - 50);\n    } else if (maxX > scrollLeft + containerWidth) {\n      newScrollLeft = maxX - containerWidth + 50;\n    }\n    \n    // Adjust vertical scroll if needed\n    if (minY < scrollTop) {\n      newScrollTop = Math.max(0, minY - 50);\n    } else if (maxY > scrollTop + containerHeight) {\n      newScrollTop = maxY - containerHeight + 50;\n    }\n    \n    // Smooth scroll to the new position\n    if (newScrollLeft !== scrollLeft || newScrollTop !== scrollTop) {\n      container.scrollTo({\n        left: newScrollLeft,\n        top: newScrollTop,\n        behavior: 'smooth'\n      });\n    }\n  }, [calculateCardPosition]);\n\n  // Click for editing cards - enable editing both cards on click\n  const initializeSimulation = useCallback(() => {\n    if (!svgRef.current) return;\n\n    const nodes = calculateZigzagPositions(entries);\n    const links = createTimelineLinks(nodes);\n    \n    // Preserve existing node positions if they exist (but don't use pinned state)\n    const existingNodes = nodesRef.current || [];\n    nodes.forEach(node => {\n      const existing = existingNodes.find(n => n.id === node.id);\n      if (existing && !newNodeIds.has(node.id)) {\n        // Preserve existing position but ensure it stays close to zigzag structure\n        const targetX = node.x;\n        const targetY = node.y;\n        node.x = existing.x || targetX;\n        node.y = existing.y || targetY;\n        // Store target positions for constraint forces\n        node.targetX = targetX;\n        node.targetY = targetY;\n      } else {\n        // New nodes start at target position\n        node.targetX = node.x;\n        node.targetY = node.y;\n      }\n    });\n    \n    nodesRef.current = nodes;\n    linksRef.current = links;\n\n    // Stop existing simulation before creating new one\n    if (simulationRef.current) {\n      simulationRef.current.stop();\n    }\n\n    // Create force simulation with strong zigzag position constraints\n    const simulation = forceSimulation(nodes)\n      .force(\"link\", forceLink(links)\n        .id(d => d.id)\n        .distance(120)\n        .strength(0.1) // Weaker link force\n      )\n      .force(\"charge\", forceManyBody()\n        .strength(-50) // Weaker repulsion\n        .distanceMax(150)\n      )\n      // Strong position constraints to maintain zigzag\n      .force(\"x\", forceX(d => d.targetX).strength(0.8))\n      .force(\"y\", forceY(d => d.targetY).strength(0.8))\n      .velocityDecay(0.8)\n      .alphaDecay(0.05)\n      .alphaMin(0.001);\n\n    simulationRef.current = simulation;\n\n    // Setup SVG\n    const svg = select(svgRef.current)\n      .attr(\"width\", width)\n      .attr(\"height\", height)\n      .attr(\"viewBox\", [0, 0, width, height]);\n\n    // Clear existing content\n    svg.selectAll(\"*\").remove();\n\n    // Add timeline path with hover effects\n    const linkGroup = svg.append(\"g\").attr(\"class\", \"timeline-links\");\n\n    const link = linkGroup.selectAll(\"line\")\n      .data(links)\n      .join(\"line\")\n      .attr(\"stroke\", \"#64748b\")\n      .attr(\"stroke-opacity\", 0.4)\n      .attr(\"stroke-width\", 2)\n      .attr(\"stroke-dasharray\", \"5,5\")\n      .style(\"cursor\", \"pointer\")\n      .style(\"transition\", \"all 0.2s ease\")\n      .on(\"mouseenter\", (event, d) => {\n        setHoveredLink(d.id);\n        select(event.target)\n          .attr(\"stroke-opacity\", 0.8)\n          .attr(\"stroke-width\", 3)\n          .style(\"filter\", \"drop-shadow(0 0 4px #64748b)\");\n      })\n      .on(\"mouseleave\", (event, d) => {\n        setHoveredLink(null);\n        select(event.target)\n          .attr(\"stroke-opacity\", 0.4)\n          .attr(\"stroke-width\", 2)\n          .style(\"filter\", \"none\");\n      })\n      .on(\"click\", (event, d) => {\n        // Insert new node at this position\n        const midX = (d.source.x + d.target.x) / 2;\n        const midY = (d.source.y + d.target.y) / 2;\n        insertNewNode(d.insertIndex, midX, midY);\n      });\n\n    // Add nodes\n    const nodeGroup = svg.append(\"g\").attr(\"class\", \"timeline-nodes\");\n\n    const node = nodeGroup.selectAll(\"circle\")\n      .data(nodes)\n      .join(\"circle\")\n      .attr(\"r\", 12)\n      .attr(\"fill\", d => color(d.type))\n      .attr(\"stroke\", d => {\n        // Glowing highlight for editing node\n        if (editingCard && editingCard.nodeId === d.id) {\n          return \"#fbbf24\"; // Amber glow for editing\n        }\n        return \"#fff\";\n      })\n      .attr(\"stroke-width\", d => {\n        if (editingCard && editingCard.nodeId === d.id) {\n          return 4; // Thicker stroke for editing\n        }\n        return 2;\n      })\n      .style(\"cursor\", \"pointer\")\n      .style(\"transition\", \"none\") // Remove CSS transitions that can interfere\n      .style(\"filter\", d => {\n        // Add glow effect for editing node\n        if (editingCard && editingCard.nodeId === d.id) {\n          return \"drop-shadow(0 0 12px rgba(251, 191, 36, 0.8))\";\n        }\n        return \"none\";\n      });\n\n    // ONLY animate genuinely new nodes with shorter, single animation\n    nodes.forEach(nodeData => {\n      if (newNodeIds.has(nodeData.id)) {\n        const nodeElement = node.filter(d => d.id === nodeData.id);\n        nodeElement\n          .attr(\"r\", 4)\n          .attr(\"opacity\", 0.5)\n          .transition()\n          .duration(250)\n          .ease(easeBackOut)\n          .attr(\"r\", 12)\n          .attr(\"opacity\", 1)\n          .on(\"end\", () => {\n            // Remove from new nodes set after single animation\n            setNewNodeIds(prev => {\n              const newSet = new Set(prev);\n              newSet.delete(nodeData.id);\n              return newSet;\n            });\n          });\n      }\n    });\n\n    // Drag behavior - with improved constraint handling\n    const dragBehavior = drag()\n      .on(\"start\", (event, d) => {\n        if (!event.active) simulation.alphaTarget(0.1).restart();\n        \n        // Temporarily fix position for dragging\n        d.fx = d.x;\n        d.fy = d.y;\n        \n        // Visual feedback - NO TRANSITIONS to avoid interfering with D3\n        select(event.sourceEvent.target)\n          .attr(\"r\", 16)\n          .attr(\"stroke-width\", 3)\n          .style(\"filter\", \"drop-shadow(0 4px 8px rgba(0,0,0,0.3))\");\n      })\n      .on(\"drag\", (event, d) => {\n        d.fx = event.x;\n        d.fy = event.y;\n      })\n      .on(\"end\", (event, d) => {\n        if (!event.active) simulation.alphaTarget(0);\n        \n        // Snap to nearest timeline position logic\n        const nearestPosition = findNearestTimelinePosition(event.x, event.y);\n        if (nearestPosition) {\n          // Update both current and target positions\n          d.fx = nearestPosition.x;\n          d.fy = nearestPosition.y;\n          d.targetX = nearestPosition.x;\n          d.targetY = nearestPosition.y;\n          // Update zigzag structure\n          reorderTimelineStructure(d.id, nearestPosition.index);\n        } else {\n          // Return to constraint position\n          d.fx = null;\n          d.fy = null;\n          // Let constraints pull it back to target position\n        }\n        \n        // Reset visual feedback - NO TRANSITIONS\n        select(event.sourceEvent.target)\n          .attr(\"r\", 12)\n          .attr(\"stroke-width\", 2)\n          .style(\"filter\", \"none\");\n      });\n\n    // Apply drag behavior\n    node.call(dragBehavior);\n\n    // Enhanced click for editing cards - auto-save and switch behavior\n    node.on(\"click\", (event, d) => {\n      event.stopPropagation();\n      \n      // If clicking the same node that's already being edited, save and close\n      if (editingCard && editingCard.nodeId === d.id) {\n        handleSaveCurrentEditingCards();\n        return;\n      }\n      \n      // If editing a different node, save current node first\n      if (editingCard && editingCard.nodeId !== d.id) {\n        handleSaveCurrentEditingCards(false); // Don't close, we're switching\n      }\n      \n      // Ensure proper positioning\n      d.fx = d.x;\n      d.fy = d.y;\n      \n      // Start editing mode for this node (both cards become editable)\n      setEditingCard({ nodeId: d.id, type: 'both' });\n      \n      // Show the node as hovered to display cards\n      setHoveredNode(d.id);\n      \n      // Auto-scroll to ensure cards are visible\n      setTimeout(() => {\n        ensureCardsVisible(d.id);\n      }, 100); // Small delay to ensure state is updated\n      \n      simulation.restart();\n    });\n\n    // Right-click context menu for node deletion\n    node.on(\"contextmenu\", (event, d) => {\n      event.preventDefault();\n      event.stopPropagation();\n      \n      const rect = containerRef.current.getBoundingClientRect();\n      setContextMenu({\n        x: event.clientX - rect.left,\n        y: event.clientY - rect.top,\n        nodeId: d.id,\n        nodeTitle: d.title || `Entry ${d.orderIndex + 1}`\n      });\n    });\n\n    // Hover effects - NO TRANSITIONS to prevent interference with D3\n    node\n      .on(\"mouseenter\", (event, d) => {\n        handleNodeHover(d.id);\n        // Direct DOM manipulation without transitions\n        select(event.target)\n          .attr(\"r\", 16)\n          .style(\"filter\", \"drop-shadow(0 0 15px rgba(59, 130, 246, 0.5))\");\n      })\n      .on(\"mouseleave\", (event, d) => {\n        handleNodeLeave();\n        // Direct DOM manipulation without transitions\n        select(event.target)\n          .attr(\"r\", 12)\n          .style(\"filter\", \"none\");\n      });\n\n    // Update positions on simulation tick\n    simulation.on(\"tick\", () => {\n      link\n        .attr(\"x1\", d => d.source.x)\n        .attr(\"y1\", d => d.source.y)\n        .attr(\"x2\", d => d.target.x)\n        .attr(\"y2\", d => d.target.y);\n\n      node\n        .attr(\"cx\", d => d.x)\n        .attr(\"cy\", d => d.y);\n    });\n\n    return simulation;\n  }, [entries, width, height, color, newNodeIds, calculateZigzagPositions, createTimelineLinks, handleNodeHover, handleNodeLeave, findNearestTimelinePosition, reorderTimelineStructure, insertNewNode]);\n\n  // Initialize simulation when entries change - with proper state management to prevent resets\n  useEffect(() => {\n    // Only initialize if we have entries and the simulation doesn't exist or entries actually changed\n    if (entries.length > 0) {\n      const currentEntryIds = entries.map(e => e.id).sort().join(',');\n      const existingEntryIds = nodesRef.current.map(n => n.id).sort().join(',');\n      \n      // Only re-initialize if entries actually changed, not on hover or other state changes\n      if (currentEntryIds !== existingEntryIds || !simulationRef.current) {\n        initializeSimulation();\n      }\n    }\n    \n    return () => {\n      if (hoverTimeoutRef.current) {\n        clearTimeout(hoverTimeoutRef.current);\n      }\n    };\n  }, [entries.length, entries.map(e => e.id).join(',')]); // Only depend on entry count and IDs, not full entries object\n\n  // Separate effect for cleanup only\n  useEffect(() => {\n    return () => {\n      if (simulationRef.current) {\n        simulationRef.current.stop();\n      }\n    };\n  }, []);\n\n  // Keyboard navigation for Tab between cards\n  useEffect(() => {\n    const handleKeyDown = (event) => {\n      if (!editingCard) return;\n      \n      if (event.key === 'Tab') {\n        event.preventDefault();\n        // Tab navigation between cards would be handled by the card components\n        // This is a placeholder for the tab navigation logic\n      }\n    };\n\n    if (editingCard) {\n      document.addEventListener('keydown', handleKeyDown);\n      return () => {\n        document.removeEventListener('keydown', handleKeyDown);\n      };\n    }\n  }, [editingCard]);\n\n  // Close context menu on outside click\n  useEffect(() => {\n    const handleClickOutside = (event) => {\n      if (contextMenu) {\n        setContextMenu(null);\n      }\n    };\n\n    if (contextMenu) {\n      document.addEventListener('mousedown', handleClickOutside);\n      return () => {\n        document.removeEventListener('mousedown', handleClickOutside);\n      };\n    }\n  }, [contextMenu]);\n\n  // Click outside detection to close editing mode with save\n  useEffect(() => {\n    const handleClickOutside = (event) => {\n      // If we're in editing mode and the click is outside the timeline container\n      if (editingCard && containerRef.current && !containerRef.current.contains(event.target)) {\n        // Save and close editing mode\n        handleSaveCurrentEditingCards();\n      }\n    };\n\n    // Add event listener when in editing mode\n    if (editingCard) {\n      document.addEventListener('mousedown', handleClickOutside);\n      return () => {\n        document.removeEventListener('mousedown', handleClickOutside);\n      };\n    }\n  }, [editingCard, handleSaveCurrentEditingCards]);\n\n  // Handle adding new entry at end\n  const handleAddEntry = useCallback(() => {\n    const newEntry = {\n      id: `entry-${Date.now()}`,\n      title: `Entry ${entries.length + 1}`,\n      type: 'note',\n      content: '',\n      timestamp: new Date().toISOString(),\n      patient_narrative: '',\n      clinical_notes: '',\n      symptoms: []\n    };\n    \n    setNewNodeIds(prev => new Set([...prev, newEntry.id]));\n    \n    const updatedEntries = [...entries, newEntry];\n    setEntries(updatedEntries);\n    \n    if (onEntryAdd) {\n      onEntryAdd(newEntry);\n    }\n  }, [entries, onEntryAdd]);\n\n  // Handle reset layout - simplified without pin state\n  const handleResetLayout = useCallback(() => {\n    if (simulationRef.current && nodesRef.current) {\n      const zigzagPositions = calculateZigzagPositions(entries);\n      \n      nodesRef.current.forEach((node, index) => {\n        node.fx = null;\n        node.fy = null;\n        if (zigzagPositions[index]) {\n          node.x = zigzagPositions[index].x;\n          node.y = zigzagPositions[index].y;\n        }\n      });\n      \n      simulationRef.current.alpha(1).restart();\n    }\n  }, [entries, calculateZigzagPositions]);\n\n  // Handle card editing\n  const handleEditCard = useCallback((nodeId, cardType) => {\n    setEditingCard({ nodeId, type: cardType });\n  }, []);\n\n  const handleSaveCard = useCallback((nodeId, cardType, content) => {\n    const updatedEntries = entries.map(entry => {\n      if (entry.id === nodeId) {\n        return {\n          ...entry,\n          [cardType === 'patient' ? 'patient_narrative' : 'clinical_notes']: content\n        };\n      }\n      return entry;\n    });\n    \n    setEntries(updatedEntries);\n    setEditingCard(null);\n    \n    if (onEntryUpdate) {\n      onEntryUpdate(updatedEntries);\n    }\n  }, [entries, onEntryUpdate]);\n\n  // Get hovered node data for cards - with stable reference and fallback\n  const hoveredNodeData = useMemo(() => {\n    if (!hoveredNode) return null;\n    \n    // First try to find in current nodesRef\n    let node = nodesRef.current?.find(node => node.id === hoveredNode);\n    \n    // If not found, try to find in entries and create stable node data\n    if (!node) {\n      const entry = entries.find(e => e.id === hoveredNode);\n      if (entry) {\n        const zigzagPositions = calculateZigzagPositions(entries);\n        node = zigzagPositions.find(n => n.id === hoveredNode);\n      }\n    }\n    \n    return node;\n  }, [hoveredNode, entries, calculateZigzagPositions]);\n\n  return (\n    <div className={`relative ${className}`}>\n      {/* Timeline Container with Minimalist Scroll - Expanded for better card visibility */}\n      <div\n        ref={containerRef}\n        className=\"relative border border-slate-700 rounded-lg bg-slate-900/50 mx-auto timeline-scroll-container\"\n        style={{ \n          width: Math.max(width, 1000), // Minimum width for card visibility\n          height: Math.max(height, 500), // Minimum height for better layout\n          maxHeight: '75vh', // Increased max height\n          overflow: 'auto'\n        }}\n      >\n        <svg\n          ref={svgRef}\n          className=\"min-h-full\"\n          style={{ \n            width: `${Math.max(width, 1000)}px`, // Ensure SVG matches container width\n            height: `${Math.max(height, entries.length * 150 + 200)}px` // Increased spacing for better card positioning\n          }}\n        />\n\n        {/* Hover Cards - Only visible on hover when not editing */}\n        <AnimatePresence>\n          {hoveredNodeData && !editingCard && (\n            <>\n              <TimelineHoverCard\n                entry={hoveredNodeData}\n                position={calculateCardPosition(hoveredNodeData, 'patient')}\n                type=\"patient\"\n                isVisible={true}\n                isEditing={false}\n                onEdit={(nodeId, type) => {\n                  setEditingCard({ nodeId, type: 'both' });\n                }}\n                onSave={handleSaveCard}\n                onCancel={() => setEditingCard(null)}\n                onCardHover={handleCardHover}\n                onCardLeave={handleCardLeave}\n              />\n              <TimelineHoverCard\n                entry={hoveredNodeData}\n                position={calculateCardPosition(hoveredNodeData, 'clinical')}\n                type=\"clinical\"\n                isVisible={true}\n                isEditing={false}\n                onEdit={(nodeId, type) => {\n                  setEditingCard({ nodeId, type: 'both' });\n                }}\n                onSave={handleSaveCard}\n                onCancel={() => setEditingCard(null)}\n                onCardHover={handleCardHover}\n                onCardLeave={handleCardLeave}\n              />\n            </>\n          )}\n        </AnimatePresence>\n\n        {/* Editing Cards - Show both cards when editing */}\n        <AnimatePresence>\n          {editingCard && hoveredNodeData && hoveredNodeData.id === editingCard.nodeId && (\n            <>\n              {/* Patient Card */}\n              <TimelineHoverCard\n                entry={hoveredNodeData}\n                position={calculateCardPosition(hoveredNodeData, 'patient')}\n                type=\"patient\"\n                isVisible={true}\n                isEditing={editingCard.type === 'both' || editingCard.type === 'patient'}\n                onEdit={handleEditCard}\n                onSave={handleSaveCard}\n                onCancel={() => setEditingCard(null)}\n                onCardHover={handleCardHover}\n                onCardLeave={handleCardLeave}\n              />\n              {/* Clinical Card */}\n              <TimelineHoverCard\n                entry={hoveredNodeData}\n                position={calculateCardPosition(hoveredNodeData, 'clinical')}\n                type=\"clinical\"\n                isVisible={true}\n                isEditing={editingCard.type === 'both' || editingCard.type === 'clinical'}\n                onEdit={handleEditCard}\n                onSave={handleSaveCard}\n                onCancel={() => setEditingCard(null)}\n                onCardHover={handleCardHover}\n                onCardLeave={handleCardLeave}\n              />\n            </>\n          )}\n        </AnimatePresence>\n\n        {/* Right-click Context Menu */}\n        <AnimatePresence>\n          {contextMenu && (\n            <motion.div\n              initial={{ opacity: 0, scale: 0.95 }}\n              animate={{ opacity: 1, scale: 1 }}\n              exit={{ opacity: 0, scale: 0.95 }}\n              transition={{ duration: 0.15 }}\n              className=\"absolute z-50 bg-slate-800 border border-slate-600 rounded-lg shadow-xl py-2 min-w-[150px]\"\n              style={{\n                left: `${contextMenu.x}px`,\n                top: `${contextMenu.y}px`\n              }}\n            >\n              <div className=\"px-3 py-1 text-xs text-slate-400 border-b border-slate-600 mb-1\">\n                {contextMenu.nodeTitle}\n              </div>\n              <button\n                onClick={() => handleDeleteNode(contextMenu.nodeId)}\n                className=\"w-full px-3 py-2 text-sm text-red-300 hover:bg-red-600/20 transition-colors flex items-center gap-2\"\n              >\n                <Trash2 size={14} />\n                Delete Node\n              </button>\n            </motion.div>\n          )}\n        </AnimatePresence>\n      </div>\n\n      {/* Controls */}\n      <div className=\"flex items-center justify-between mt-4\">\n        <div className=\"flex items-center gap-2\">\n          <motion.button\n            whileHover={{ scale: 1.05 }}\n            whileTap={{ scale: 0.95 }}\n            onClick={handleAddEntry}\n            className=\"px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors flex items-center gap-2 text-sm\"\n          >\n            <Plus size={16} />\n            Add Entry\n          </motion.button>\n\n          <motion.button\n            whileHover={{ scale: 1.05 }}\n            whileTap={{ scale: 0.95 }}\n            onClick={handleResetLayout}\n            className=\"px-4 py-2 bg-slate-700 text-white rounded-lg hover:bg-slate-600 transition-colors flex items-center gap-2 text-sm\"\n          >\n            <RotateCcw size={16} />\n            Reset Layout\n          </motion.button>\n\n          <motion.button\n            whileHover={{ scale: 1.05 }}\n            whileTap={{ scale: 0.95 }}\n            onClick={handleUndo}\n            disabled={undoStack.length === 0}\n            className={`px-4 py-2 rounded-lg transition-colors flex items-center gap-2 text-sm ${\n              undoStack.length > 0 \n                ? 'bg-amber-600 text-white hover:bg-amber-700' \n                : 'bg-slate-800 text-slate-500 cursor-not-allowed'\n            }`}\n          >\n            <RotateCcw size={16} />\n            Undo ({undoStack.length})\n          </motion.button>\n        </div>\n\n        <div className=\"text-xs text-slate-400 flex items-center gap-4\">\n          <span>{entries.length} {entries.length === 1 ? 'entry' : 'entries'}</span>\n          {editingCard && (\n            <span className=\"text-amber-400 flex items-center gap-1\">\n              <span className=\"w-2 h-2 bg-amber-400 rounded-full animate-pulse\"></span>\n              Editing\n            </span>\n          )}\n        </div>\n      </div>\n\n      {/* Instructions */}\n      <div className=\"mt-2 text-xs text-slate-500 space-y-1\">\n        <p>• <strong>Click</strong> nodes to edit both cards • <strong>Same node click</strong> saves & closes • <strong>Right-click</strong> to delete</p>\n        <p>• <strong>Tab</strong> moves between cards • <strong>Escape</strong> closes modal • <strong>Click outside</strong> saves & closes editing</p>\n      </div>\n    </div>\n  );\n};\n\n// For backward compatibility, export with original name\nconst AngularTimeline = D3PhysicsTimeline;\nAngularTimeline.displayName = 'AngularTimeline';\n\nexport default AngularTimeline;","// Enhanced Case Modal with tabbed interface and advanced animations\nimport React, { useState, useEffect, useMemo, useCallback, useRef } from 'react';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport { \n  X, \n  Users, \n  FileText, \n  Pill, \n  Brain, \n  Link2,\n  Edit3,\n  Trash2,\n  Save,\n  Loader2,\n  Plus,\n  Check,\n  Calendar,\n  Clock,\n  AlertCircle,\n  BookOpen,\n  Target,\n  Heart,\n  ChevronDown,\n  ChevronRight,\n  Activity\n} from 'lucide-react';\n\n// Import the Angular Timeline component\nimport AngularTimeline from './timeline/ModularAngularTimeline';\n\n// Utility function for debouncing\nconst debounce = (func, delay) => {\n  let timeoutId;\n  return (...args) => {\n    clearTimeout(timeoutId);\n    timeoutId = setTimeout(() => func.apply(null, args), delay);\n  };\n};\n\n// Animation variants for Framer Motion\nconst modalVariants = {\n  hidden: {\n    opacity: 0,\n    scale: 0.3,\n    y: 50,\n    rotate: -5,\n  },\n  visible: {\n    opacity: 1,\n    scale: 1,\n    y: 0,\n    rotate: 0,\n    transition: {\n      type: \"spring\",\n      damping: 25,\n      stiffness: 300,\n      duration: 0.6,\n    }\n  },\n  exit: {\n    opacity: 0,\n    scale: 0.7,\n    y: 30,\n    rotate: -3,\n    transition: {\n      type: \"easeInOut\",\n      duration: 0.4,\n    }\n  }\n};\n\nconst backdropVariants = {\n  hidden: { \n    opacity: 0,\n    backdropFilter: 'blur(0px)'\n  },\n  visible: { \n    opacity: 1,\n    backdropFilter: 'blur(8px)',\n    transition: {\n      duration: 0.4,\n      ease: \"easeOut\"\n    }\n  },\n  exit: { \n    opacity: 0,\n    backdropFilter: 'blur(0px)',\n    transition: {\n      duration: 0.3,\n      ease: \"easeIn\"\n    }\n  }\n};\n\nconst contentVariants = {\n  hidden: {\n    opacity: 0,\n    y: 20,\n    scale: 0.95,\n  },\n  visible: {\n    opacity: 1,\n    y: 0,\n    scale: 1,\n    transition: {\n      type: \"easeOut\",\n      duration: 0.3,\n      delay: 0.1,\n    }\n  },\n  exit: {\n    opacity: 0,\n    y: -10,\n    scale: 1.02,\n    transition: {\n      type: \"easeIn\",\n      duration: 0.2,\n    }\n  }\n};\n\n// Card animation variants for sections\nconst cardVariants = {\n  hidden: { opacity: 0, y: 20, scale: 0.95 },\n  visible: { \n    opacity: 1, \n    y: 0, \n    scale: 1,\n    transition: {\n      duration: 0.4,\n      ease: \"easeOut\"\n    }\n  },\n  edit: { \n    scale: 1.02,\n    boxShadow: \"0 8px 25px rgba(59, 130, 246, 0.15)\",\n    transition: {\n      duration: 0.3,\n      ease: \"easeOut\"\n    }\n  },\n  saved: {\n    scale: 1,\n    boxShadow: \"0 4px 15px rgba(34, 197, 94, 0.15)\",\n    transition: {\n      duration: 0.3,\n      ease: \"easeOut\"\n    }\n  }\n};\n\nconst CaseModal = ({ \n  isOpen, \n  data, \n  onClose,\n  onAnimationStart,\n  onAnimationEnd,\n  setMindMapData,\n  autoSaveMindMapData,\n  addToast\n}) => {\n  const [isAnimating, setIsAnimating] = useState(false);\n  const [isVisible, setIsVisible] = useState(false);\n  const [isClosing, setIsClosing] = useState(false);\n  const [editData, setEditData] = useState({});\n  const [isLoading, setIsLoading] = useState(false);\n  const [hasInitialized, setHasInitialized] = useState(false);\n  const [activeTab, setActiveTab] = useState('overview');\n  const [isTabTransitioning, setIsTabTransitioning] = useState(false);\n  \n  // Individual section edit states\n  const [editingSections, setEditingSections] = useState({});\n  const [sectionData, setSectionData] = useState({});\n  \n  // Tab-specific scroll positions\n  const [scrollPositions, setScrollPositions] = useState({});\n  const contentRefs = useRef({});\n  \n  // Form states for different tabs\n  const [newMedication, setNewMedication] = useState({ name: '', dosage: '', frequency: '', effect: '' });\n  const [showMedicationForm, setShowMedicationForm] = useState(false);\n\n  useEffect(() => {\n    if (isOpen && data && !hasInitialized) {\n      setIsVisible(true);\n      const initialData = { \n        ...data,\n        narrative_summary: data.narrative_summary || '',\n        medications: data.medications || [],\n        therapeutic_highlights: data.therapeutic_highlights || '',\n        timeline: data.timeline || [], // Initialize timeline\n        last_updated: data.last_updated || new Date().toISOString()\n      };\n      setEditData(initialData);\n      setHasInitialized(true);\n      setIsAnimating(true);\n      if (onAnimationStart) onAnimationStart();\n      \n      setTimeout(() => {\n        setIsAnimating(false);\n        if (onAnimationEnd) onAnimationEnd();\n      }, 600);\n    } else if (!isOpen && hasInitialized) {\n      setHasInitialized(false);\n      setScrollPositions({});\n      setEditingSections({});\n      setSectionData({});\n    }\n  }, [isOpen, data, hasInitialized, onAnimationStart, onAnimationEnd]);\n\n  // Enhanced effect for instant feedback - updates editData immediately when data changes\n  useEffect(() => {\n    if (isOpen && data && hasInitialized) {\n      // Update editData with latest data for instant feedback\n      setEditData(prevEditData => {\n        const updatedData = { \n          ...prevEditData, // Keep any local edits\n          ...data, // Override with latest data from parent\n        };\n        return updatedData;\n      });\n    }\n  }, [data, isOpen, hasInitialized]);\n\n  const handleClose = useCallback(() => {\n    if (isAnimating || isClosing) return;\n    \n    setIsAnimating(true);\n    setIsClosing(true);\n    if (onAnimationStart) onAnimationStart();\n    \n    // Set visibility to false to trigger exit animation\n    setIsVisible(false);\n  }, [onAnimationStart, isAnimating, isClosing]);\n\n  // Escape key handling to close modal - MOVED AFTER handleClose definition\n  useEffect(() => {\n    const handleKeyDown = (event) => {\n      if (event.key === 'Escape') {\n        handleClose();\n      }\n    };\n\n    if (isOpen) {\n      document.addEventListener('keydown', handleKeyDown);\n      return () => {\n        document.removeEventListener('keydown', handleKeyDown);\n      };\n    }\n  }, [isOpen, handleClose]);\n\n  const handleSave = useCallback(async () => {\n    if (isLoading) return;\n    \n    setIsLoading(true);\n    try {\n      const updatedData = {\n        ...editData,\n        last_updated: new Date().toISOString()\n      };\n      \n      setMindMapData(prevData => {\n        const updatedCases = prevData.cases.map(caseItem =>\n          String(caseItem.id) === String(data?.id) ? { ...caseItem, ...updatedData } : caseItem\n        );\n        const newData = { ...prevData, cases: updatedCases };\n        autoSaveMindMapData(newData);\n        return newData;\n      });\n      \n      setEditData(updatedData);\n      addToast('Case updated successfully', 'success');\n    } catch (error) {\n      console.error('Error saving case:', error);\n      addToast('Failed to save case', 'error');\n    } finally {\n      setIsLoading(false);\n    }\n  }, [data?.id, editData, setMindMapData, autoSaveMindMapData, addToast, isLoading]);\n\n  // Save current tab's scroll position before switching\n  const saveScrollPosition = useCallback((tabId) => {\n    const contentRef = contentRefs.current[tabId];\n    if (contentRef) {\n      setScrollPositions(prev => ({\n        ...prev,\n        [tabId]: contentRef.scrollTop\n      }));\n    }\n  }, []);\n\n  // Restore scroll position when switching to a tab\n  const restoreScrollPosition = useCallback((tabId) => {\n    setTimeout(() => {\n      const contentRef = contentRefs.current[tabId];\n      const savedPosition = scrollPositions[tabId];\n      if (contentRef && savedPosition) {\n        contentRef.scrollTop = savedPosition;\n      }\n    }, 100); // Small delay to ensure content is rendered\n  }, [scrollPositions]);\n\n  // Handle tab switching with scroll position preservation\n  const handleTabSwitch = useCallback((newTabId) => {\n    if (newTabId === activeTab || isTabTransitioning) return;\n    \n    // Save current tab's scroll position\n    saveScrollPosition(activeTab);\n    \n    setIsTabTransitioning(true);\n    setActiveTab(newTabId);\n    \n    setTimeout(() => {\n      setIsTabTransitioning(false);\n      // Restore new tab's scroll position\n      restoreScrollPosition(newTabId);\n    }, 300);\n  }, [activeTab, isTabTransitioning, saveScrollPosition, restoreScrollPosition]);\n\n  // Section editing functionality\n  const toggleEditSection = useCallback((sectionId) => {\n    setEditingSections(prev => ({\n      ...prev,\n      [sectionId]: !prev[sectionId]\n    }));\n    \n    // Initialize section data if starting to edit\n    if (!editingSections[sectionId]) {\n      setSectionData(prev => ({\n        ...prev,\n        [sectionId]: {}\n      }));\n    }\n  }, [editingSections]);\n\n  const updateSectionData = useCallback((sectionId, field, value) => {\n    setSectionData(prev => ({\n      ...prev,\n      [sectionId]: {\n        ...prev[sectionId],\n        [field]: value\n      }\n    }));\n  }, []);\n\n  const cancelEdit = useCallback((sectionId) => {\n    setEditingSections(prev => ({\n      ...prev,\n      [sectionId]: false\n    }));\n    setSectionData(prev => {\n      const newData = { ...prev };\n      delete newData[sectionId];\n      return newData;\n    });\n  }, []);\n\n  const saveSection = useCallback(async (sectionId) => {\n    if (isLoading) return;\n    \n    setIsLoading(true);\n    try {\n      const sectionChanges = sectionData[sectionId] || {};\n      let updatedData = { ...editData };\n      \n      // Apply section-specific changes\n      if (sectionId === 'basic_info') {\n        if (sectionChanges.label) {\n          updatedData.label = sectionChanges.label;\n          updatedData.title = sectionChanges.label; // Also update title for compatibility\n        }\n        if (sectionChanges.primary_diagnosis) {\n          updatedData.primary_diagnosis = sectionChanges.primary_diagnosis;\n          updatedData.primaryDiagnosis = sectionChanges.primary_diagnosis;\n        }\n        if (sectionChanges.status) {\n          updatedData.status = sectionChanges.status;\n        }\n      } else if (sectionId === 'chief_complaint') {\n        if (sectionChanges.content !== undefined) {\n          updatedData.chief_complaint = sectionChanges.content;\n          updatedData.chiefComplaint = sectionChanges.content;\n        }\n      } else if (sectionId === 'initial_presentation') {\n        if (sectionChanges.content !== undefined) {\n          updatedData.initial_presentation = sectionChanges.content;\n          updatedData.initialPresentation = sectionChanges.content;\n        }\n      }\n      \n      updatedData.last_updated = new Date().toISOString();\n      \n      // Update editData immediately for instant feedback\n      setEditData(updatedData);\n      \n      // Update parent data\n      setMindMapData(prevData => {\n        const updatedCases = prevData.cases.map(caseItem =>\n          String(caseItem.id) === String(data?.id) ? { ...caseItem, ...updatedData } : caseItem\n        );\n        const newData = { ...prevData, cases: updatedCases };\n        autoSaveMindMapData(newData);\n        return newData;\n      });\n      \n      // Clear editing state\n      setEditingSections(prev => ({\n        ...prev,\n        [sectionId]: false\n      }));\n      setSectionData(prev => {\n        const newData = { ...prev };\n        delete newData[sectionId];\n        return newData;\n      });\n      \n      addToast('Case information updated successfully', 'success');\n      \n    } catch (error) {\n      console.error('Error saving section:', error);\n      addToast('Failed to save changes', 'error');\n    } finally {\n      setIsLoading(false);\n    }\n  }, [sectionData, editData, data?.id, setMindMapData, autoSaveMindMapData, addToast, isLoading]);\n\n  const handleDelete = useCallback(async () => {\n    if (isLoading) return;\n    \n    if (!window.confirm('Are you sure you want to delete this case?')) return;\n    \n    setIsLoading(true);\n    try {\n      setMindMapData(prevData => {\n        const updatedCases = prevData.cases.filter(caseItem => String(caseItem.id) !== String(data?.id));\n        const newData = { ...prevData, cases: updatedCases };\n        autoSaveMindMapData(newData);\n        return newData;\n      });\n      \n      addToast('Case deleted successfully', 'success');\n      handleClose();\n    } catch (error) {\n      console.error('Error deleting case:', error);\n      addToast('Failed to delete case', 'error');\n    } finally {\n      setIsLoading(false);\n    }\n  }, [data?.id, setMindMapData, autoSaveMindMapData, addToast, handleClose, isLoading]);\n\n  // Individual section edit functions\n  const startEditingSection = useCallback((sectionId) => {\n    setEditingSections(prev => ({ ...prev, [sectionId]: true }));\n    // Initialize section data with current values\n    setSectionData(prev => ({\n      ...prev,\n      [sectionId]: { ...editData }\n    }));\n  }, [editData]);\n\n  const cancelEditingSection = useCallback((sectionId) => {\n    setEditingSections(prev => ({ ...prev, [sectionId]: false }));\n    setSectionData(prev => {\n      const newData = { ...prev };\n      delete newData[sectionId];\n      return newData;\n    });\n  }, []);\n\n  const saveSectionEdit = useCallback(async (sectionId) => {\n    if (isLoading) return;\n    \n    const sectionChanges = sectionData[sectionId];\n    if (!sectionChanges) return;\n    \n    setIsLoading(true);\n    try {\n      const updatedData = {\n        ...editData,\n        ...sectionChanges,\n        last_updated: new Date().toISOString()\n      };\n      \n      // Update editData immediately for instant feedback\n      setEditData(updatedData);\n      \n      setMindMapData(prevData => {\n        const updatedCases = prevData.cases.map(caseItem =>\n          String(caseItem.id) === String(data?.id) ? { ...caseItem, ...updatedData } : caseItem\n        );\n        const newData = { ...prevData, cases: updatedCases };\n        autoSaveMindMapData(newData);\n        return newData;\n      });\n      \n      setEditingSections(prev => ({ ...prev, [sectionId]: false }));\n      setSectionData(prev => {\n        const newData = { ...prev };\n        delete newData[sectionId];\n        return newData;\n      });\n      \n      addToast('Section updated successfully', 'success');\n    } catch (error) {\n      console.error('Error saving section:', error);\n      addToast('Failed to save section', 'error');\n    } finally {\n      setIsLoading(false);\n    }\n  }, [sectionData, editData, data?.id, setMindMapData, autoSaveMindMapData, addToast, isLoading]);\n\n  const updateSectionField = useCallback((sectionId, field, value) => {\n    setSectionData(prev => ({\n      ...prev,\n      [sectionId]: {\n        ...prev[sectionId],\n        [field]: value\n      }\n    }));\n  }, []);\n\n  // Medication management functions\n  const addMedication = useCallback(() => {\n    if (!newMedication.name.trim()) return;\n    \n    const updatedMedications = [...(editData.medications || []), { \n      id: Date.now(),\n      ...newMedication,\n      dateAdded: new Date().toISOString()\n    }];\n    \n    const updatedData = {\n      ...editData,\n      medications: updatedMedications,\n      last_updated: new Date().toISOString()\n    };\n    \n    setEditData(updatedData);\n    \n    setMindMapData(prevData => {\n      const updatedCases = prevData.cases.map(caseItem =>\n        String(caseItem.id) === String(data?.id) ? { ...caseItem, ...updatedData } : caseItem\n      );\n      const newData = { ...prevData, cases: updatedCases };\n      autoSaveMindMapData(newData);\n      return newData;\n    });\n    \n    setNewMedication({ name: '', dosage: '', frequency: '', effect: '' });\n    setShowMedicationForm(false);\n    addToast('Medication added successfully', 'success');\n  }, [newMedication, editData, data?.id, setMindMapData, autoSaveMindMapData, addToast]);\n\n  const removeMedication = useCallback((medicationId) => {\n    const updatedMedications = (editData.medications || []).filter(med => med.id !== medicationId);\n    const updatedData = {\n      ...editData,\n      medications: updatedMedications,\n      last_updated: new Date().toISOString()\n    };\n    \n    setEditData(updatedData);\n    \n    setMindMapData(prevData => {\n      const updatedCases = prevData.cases.map(caseItem =>\n        String(caseItem.id) === String(data?.id) ? { ...caseItem, ...updatedData } : caseItem\n      );\n      const newData = { ...prevData, cases: updatedCases };\n      autoSaveMindMapData(newData);\n      return newData;\n    });\n    \n    addToast('Medication removed successfully', 'success');\n  }, [editData, data?.id, setMindMapData, autoSaveMindMapData, addToast]);\n\n  // Enhanced timeline management with debounced auto-save and better backend integration\n  const timelineEntries = useMemo(() => editData.timeline || [], [editData.timeline]);\n  \n  // Debounced timeline save function\n  const debouncedTimelineSave = useCallback(\n    debounce(async (updatedTimeline, retryCount = 0) => {\n      try {\n        const updatedData = {\n          ...editData,\n          timeline: updatedTimeline,\n          last_updated: new Date().toISOString()\n        };\n        \n        // Update editData immediately for instant feedback\n        setEditData(updatedData);\n        \n        // Enhanced mind map data update with better timeline integration\n        setMindMapData(prevData => {\n          const updatedCases = prevData.cases.map(caseItem => {\n            if (String(caseItem.id) === String(data?.id)) {\n              return { \n                ...caseItem, \n                ...updatedData,\n                // Ensure timeline data is properly structured for backend\n                timeline: updatedTimeline.map(entry => ({\n                  id: entry.id,\n                  title: entry.title || `Entry ${entry.orderIndex + 1}`,\n                  type: entry.type || 'note',\n                  content: entry.content || '',\n                  timestamp: entry.timestamp,\n                  patient_narrative: entry.patient_narrative || '',\n                  clinical_notes: entry.clinical_notes || '',\n                  symptoms: entry.symptoms || [],\n                  orderIndex: entry.orderIndex || 0,\n                  created_at: entry.created_at || new Date().toISOString(),\n                  updated_at: new Date().toISOString()\n                }))\n              };\n            }\n            return caseItem;\n          });\n          const newData = { ...prevData, cases: updatedCases };\n          autoSaveMindMapData(newData);\n          return newData;\n        });\n        \n        return { success: true, data: updatedData };\n      } catch (error) {\n        console.error('Timeline save error:', error);\n        \n        // Retry logic - up to 3 attempts\n        if (retryCount < 3) {\n          console.log(`Retrying timeline save (attempt ${retryCount + 1}/3)`);\n          return debouncedTimelineSave(updatedTimeline, retryCount + 1);\n        }\n        \n        return { success: false, error };\n      }\n    }, 500), // 500ms debounce\n    [editData, data?.id, setMindMapData, autoSaveMindMapData]\n  );\n  \n  const updateTimeline = useCallback(async (updatedTimeline, options = {}) => {\n    if (isLoading && !options.force) return;\n    \n    // Skip saving if both patient_narrative and clinical_notes are empty for all entries\n    const hasContent = updatedTimeline.some(entry => \n      (entry.patient_narrative && entry.patient_narrative.trim()) ||\n      (entry.clinical_notes && entry.clinical_notes.trim())\n    );\n    \n    if (!hasContent && !options.force) {\n      return { success: true, skipped: true };\n    }\n    \n    return debouncedTimelineSave(updatedTimeline);\n  }, [debouncedTimelineSave, isLoading]);\n\n  // Get connected nodes for Related tab\n  const connectedNodes = useMemo(() => {\n    if (!data?.id) return { topics: [], literature: [], cases: [] };\n    \n    // This would typically come from your mind map connections data\n    // For now, return empty arrays - you can implement based on your data structure\n    return {\n      topics: [],\n      literature: [],\n      cases: []\n    };\n  }, [data?.id]);\n\n  // Tab configuration\n  const tabs = [\n    { id: 'overview', label: 'Overview', icon: Users },\n    { id: 'narrative', label: 'Narrative', icon: FileText },\n    { id: 'medications', label: 'Medications', icon: Pill },\n    { id: 'therapy', label: 'Therapy & Insights', icon: Brain },\n    { id: 'timeline', label: 'Timeline', icon: Clock },\n    { id: 'related', label: 'Related', icon: Link2 }\n  ];\n\n  if (!isOpen) return null;\n\n  return (\n    <AnimatePresence mode=\"wait\" onExitComplete={() => {\n      setIsAnimating(false);\n      setIsClosing(false);\n      setHasInitialized(false);\n      onClose();\n      if (onAnimationEnd) onAnimationEnd();\n    }}>\n      {isVisible && (\n        <motion.div\n          key={`case-modal-${data?.id || 'default'}`}\n          initial=\"hidden\"\n          animate=\"visible\"\n          exit=\"exit\"\n          variants={backdropVariants}\n          className=\"fixed inset-0 bg-black flex items-center justify-center z-50\"\n          style={{ \n            willChange: 'backdrop-filter, opacity',\n            backfaceVisibility: 'hidden',\n            transform: 'translate3d(0, 0, 0)'\n          }}\n          onClick={(e) => e.target === e.currentTarget && handleClose()}\n        >\n          <motion.div\n            initial=\"hidden\"\n            animate=\"visible\"\n            exit=\"exit\"\n            variants={modalVariants}\n            className={`bg-white rounded-2xl shadow-2xl w-full mx-4 max-h-[90vh] overflow-hidden transition-all duration-500 ease-in-out ${\n              activeTab === 'timeline' ? 'max-w-7xl' : 'max-w-4xl'\n            }`}\n            style={{ \n              willChange: 'transform, opacity, scale',\n              backfaceVisibility: 'hidden'\n            }}\n            onClick={(e) => e.stopPropagation()}\n            onAnimationStart={() => {\n              setIsAnimating(true);\n              if (onAnimationStart) onAnimationStart();\n            }}\n            onAnimationComplete={() => {\n              setIsAnimating(false);\n              if (onAnimationEnd) onAnimationEnd();\n            }}\n          >\n            <motion.div \n              initial=\"hidden\"\n              animate=\"visible\"\n              exit=\"exit\"\n              variants={contentVariants}\n              className=\"bg-gradient-to-br from-slate-900 to-slate-800 text-white px-6 py-4 flex items-center justify-between\"\n            >\n              <div className=\"flex items-center gap-3\">\n                <Users size={24} />\n                <h2 className=\"text-xl font-semibold\">Case Details</h2>\n              </div>\n              <button\n                onClick={handleClose}\n                className=\"text-slate-400 hover:text-white transition-colors\"\n              >\n                <X size={24} />\n              </button>\n            </motion.div>\n\n            {/* Tab Navigation */}\n            <div className=\"bg-gradient-to-r from-slate-900 via-slate-800 to-slate-900 border-b border-slate-600\">\n              <nav className=\"flex flex-wrap gap-2 px-6 py-4\">\n                {tabs.map(({ id, label, icon: Icon }) => (\n                  <motion.button\n                    key={id}\n                    onClick={() => handleTabSwitch(id)}\n                    className={`relative flex items-center gap-2 px-4 py-3 rounded-xl font-medium text-sm transition-all duration-300 ${\n                      activeTab === id\n                        ? 'bg-gradient-to-r from-blue-500 to-indigo-600 text-white shadow-lg shadow-blue-500/25'\n                        : 'text-slate-300 hover:text-white hover:bg-slate-700/50 hover:shadow-md'\n                    }`}\n                    whileHover={{ scale: activeTab === id ? 1 : 1.02 }}\n                    whileTap={{ scale: 0.98 }}\n                    disabled={isTabTransitioning}\n                  >\n                    <Icon size={16} className={activeTab === id ? 'drop-shadow-sm' : ''} />\n                    {label}\n                    \n                    {activeTab === id && (\n                      <motion.div\n                        layoutId=\"caseActiveTab\"\n                        className=\"absolute inset-0 bg-gradient-to-r from-blue-400/20 to-indigo-500/20 rounded-xl blur-sm\"\n                        initial={false}\n                        transition={{ duration: 0.3, ease: \"easeOut\" }}\n                      />\n                    )}\n                  </motion.button>\n                ))}\n              </nav>\n            </div>\n\n            {/* Dark Content Area */}\n            <motion.div\n              className=\"flex-1 bg-gradient-to-br from-slate-900 to-slate-800 overflow-hidden\"\n              animate={{ opacity: isTabTransitioning ? 0.7 : 1 }}\n              transition={{ duration: 0.2 }}\n            >\n              <AnimatePresence mode=\"wait\">\n                {/* Overview Tab */}\n                {activeTab === 'overview' && (\n                  <motion.div\n                    key=\"overview\"\n                    ref={el => contentRefs.current.overview = el}\n                    initial={{ opacity: 0, x: -20 }}\n                    animate={{ opacity: 1, x: 0 }}\n                    exit={{ opacity: 0, x: 20 }}\n                    transition={{ duration: 0.3 }}\n                    className=\"h-full overflow-y-auto p-6 space-y-6\"\n                  >\n                    {/* Case Title and Basic Info */}\n                    <motion.div \n                      variants={cardVariants}\n                      initial=\"hidden\"\n                      animate=\"visible\"\n                      className=\"bg-slate-800/50 backdrop-blur-sm rounded-xl p-6 border border-slate-700\"\n                    >\n                      <div className=\"flex items-center justify-between mb-4\">\n                        <h3 className=\"text-lg font-semibold text-white\">Case Information</h3>\n                        <motion.button\n                          whileHover={{ scale: 1.05 }}\n                          whileTap={{ scale: 0.95 }}\n                          onClick={() => toggleEditSection('basic_info')}\n                          className=\"text-blue-400 hover:text-blue-300 transition-colors p-2 rounded-lg hover:bg-slate-700/50\"\n                          title=\"Edit case information\"\n                        >\n                          <Edit3 size={16} />\n                        </motion.button>\n                      </div>\n                      \n                      {editingSections.basic_info ? (\n                        <div className=\"space-y-4\">\n                          <div>\n                            <label className=\"block text-sm font-medium text-slate-300 mb-2\">Case Title/Label</label>\n                            <input\n                              type=\"text\"\n                              value={sectionData.basic_info?.label || editData.label || editData.title || ''}\n                              onChange={(e) => updateSectionData('basic_info', 'label', e.target.value)}\n                              className=\"w-full bg-slate-700 border border-slate-600 rounded-lg px-3 py-2 text-white placeholder-slate-400 focus:ring-2 focus:ring-blue-400 focus:border-blue-400\"\n                              placeholder=\"Enter case title/label\"\n                            />\n                          </div>\n                          <div>\n                            <label className=\"block text-sm font-medium text-slate-300 mb-2\">Primary Diagnosis</label>\n                            <input\n                              type=\"text\"\n                              value={sectionData.basic_info?.primary_diagnosis || editData.primaryDiagnosis || editData.primary_diagnosis || ''}\n                              onChange={(e) => updateSectionData('basic_info', 'primary_diagnosis', e.target.value)}\n                              className=\"w-full bg-slate-700 border border-slate-600 rounded-lg px-3 py-2 text-white placeholder-slate-400 focus:ring-2 focus:ring-blue-400 focus:border-blue-400\"\n                              placeholder=\"Enter primary diagnosis\"\n                            />\n                          </div>\n                          <div>\n                            <label className=\"block text-sm font-medium text-slate-300 mb-2\">Status</label>\n                            <select\n                              value={sectionData.basic_info?.status || editData.status || 'active'}\n                              onChange={(e) => updateSectionData('basic_info', 'status', e.target.value)}\n                              className=\"w-full bg-slate-700 border border-slate-600 rounded-lg px-3 py-2 text-white focus:ring-2 focus:ring-blue-400 focus:border-blue-400\"\n                            >\n                              <option value=\"active\">Active</option>\n                              <option value=\"archived\">Archived</option>\n                              <option value=\"follow_up\">Follow-up</option>\n                              <option value=\"completed\">Completed</option>\n                            </select>\n                          </div>\n                          <div className=\"flex gap-2 justify-end\">\n                            <motion.button\n                              whileHover={{ scale: 1.05 }}\n                              whileTap={{ scale: 0.95 }}\n                              onClick={() => cancelEdit('basic_info')}\n                              className=\"px-4 py-2 bg-slate-600 text-white rounded-lg hover:bg-slate-500 transition-colors\"\n                            >\n                              Cancel\n                            </motion.button>\n                            <motion.button\n                              whileHover={{ scale: 1.05 }}\n                              whileTap={{ scale: 0.95 }}\n                              onClick={() => saveSection('basic_info')}\n                              className=\"px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors flex items-center gap-2\"\n                            >\n                              <Save size={16} />\n                              Save Changes\n                            </motion.button>\n                          </div>\n                        </div>\n                      ) : (\n                        <div className=\"grid md:grid-cols-2 gap-4\">\n                          <div>\n                            <label className=\"block text-sm font-medium text-slate-300 mb-2\">Case Title/Label</label>\n                            <div className=\"text-white bg-slate-700/50 rounded-lg p-3\">\n                              {editData.label || editData.title || 'Untitled case'}\n                            </div>\n                          </div>\n                          <div>\n                            <label className=\"block text-sm font-medium text-slate-300 mb-2\">Primary Diagnosis</label>\n                            <div className=\"text-white bg-slate-700/50 rounded-lg p-3\">\n                              {editData.primaryDiagnosis || editData.primary_diagnosis || 'No diagnosis specified'}\n                            </div>\n                          </div>\n                          <div>\n                            <label className=\"block text-sm font-medium text-slate-300 mb-2\">Status</label>\n                            <div className=\"text-white bg-slate-700/50 rounded-lg p-3\">\n                              {editData.status || 'Active'}\n                            </div>\n                          </div>\n                        </div>\n                      )}\n                    </motion.div>\n\n                    {/* Chief Complaint */}\n                    <motion.div \n                      variants={cardVariants}\n                      initial=\"hidden\"\n                      animate=\"visible\"\n                      className=\"bg-slate-800/50 backdrop-blur-sm rounded-xl p-6 border border-slate-700\"\n                    >\n                      <div className=\"flex items-center justify-between mb-3\">\n                        <h4 className=\"text-lg font-semibold text-white\">Chief Complaint</h4>\n                        <motion.button\n                          whileHover={{ scale: 1.05 }}\n                          whileTap={{ scale: 0.95 }}\n                          onClick={() => toggleEditSection('chief_complaint')}\n                          className=\"text-blue-400 hover:text-blue-300 transition-colors p-2 rounded-lg hover:bg-slate-700/50\"\n                          title=\"Edit chief complaint\"\n                        >\n                          <Edit3 size={16} />\n                        </motion.button>\n                      </div>\n                      \n                      {editingSections.chief_complaint ? (\n                        <div className=\"space-y-4\">\n                          <textarea\n                            value={sectionData.chief_complaint?.content || editData.chiefComplaint || editData.chief_complaint || ''}\n                            onChange={(e) => updateSectionData('chief_complaint', 'content', e.target.value)}\n                            rows={4}\n                            className=\"w-full bg-slate-700 border border-slate-600 rounded-lg px-3 py-2 text-white placeholder-slate-400 focus:ring-2 focus:ring-blue-400 focus:border-blue-400\"\n                            placeholder=\"Enter chief complaint...\"\n                          />\n                          <div className=\"flex gap-2 justify-end\">\n                            <motion.button\n                              whileHover={{ scale: 1.05 }}\n                              whileTap={{ scale: 0.95 }}\n                              onClick={() => cancelEdit('chief_complaint')}\n                              className=\"px-4 py-2 bg-slate-600 text-white rounded-lg hover:bg-slate-500 transition-colors\"\n                            >\n                              Cancel\n                            </motion.button>\n                            <motion.button\n                              whileHover={{ scale: 1.05 }}\n                              whileTap={{ scale: 0.95 }}\n                              onClick={() => saveSection('chief_complaint')}\n                              className=\"px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors flex items-center gap-2\"\n                            >\n                              <Save size={16} />\n                              Save Changes\n                            </motion.button>\n                          </div>\n                        </div>\n                      ) : (\n                        <div className=\"text-slate-300 leading-relaxed bg-slate-700/30 rounded-lg p-4\">\n                          {editData.chiefComplaint || editData.chief_complaint || 'No chief complaint documented'}\n                        </div>\n                      )}\n                    </motion.div>\n\n                    {/* Initial Presentation */}\n                    <motion.div \n                      variants={cardVariants}\n                      initial=\"hidden\"\n                      animate=\"visible\"\n                      className=\"bg-slate-800/50 backdrop-blur-sm rounded-xl p-6 border border-slate-700\"\n                    >\n                      <div className=\"flex items-center justify-between mb-3\">\n                        <h4 className=\"text-lg font-semibold text-white\">Initial Presentation</h4>\n                        <motion.button\n                          whileHover={{ scale: 1.05 }}\n                          whileTap={{ scale: 0.95 }}\n                          onClick={() => toggleEditSection('initial_presentation')}\n                          className=\"text-blue-400 hover:text-blue-300 transition-colors p-2 rounded-lg hover:bg-slate-700/50\"\n                          title=\"Edit initial presentation\"\n                        >\n                          <Edit3 size={16} />\n                        </motion.button>\n                      </div>\n                      \n                      {editingSections.initial_presentation ? (\n                        <div className=\"space-y-4\">\n                          <textarea\n                            value={sectionData.initial_presentation?.content || editData.initialPresentation || editData.initial_presentation || ''}\n                            onChange={(e) => updateSectionData('initial_presentation', 'content', e.target.value)}\n                            rows={4}\n                            className=\"w-full bg-slate-700 border border-slate-600 rounded-lg px-3 py-2 text-white placeholder-slate-400 focus:ring-2 focus:ring-blue-400 focus:border-blue-400\"\n                            placeholder=\"Enter initial presentation details...\"\n                          />\n                          <div className=\"flex gap-2 justify-end\">\n                            <motion.button\n                              whileHover={{ scale: 1.05 }}\n                              whileTap={{ scale: 0.95 }}\n                              onClick={() => cancelEdit('initial_presentation')}\n                              className=\"px-4 py-2 bg-slate-600 text-white rounded-lg hover:bg-slate-500 transition-colors\"\n                            >\n                              Cancel\n                            </motion.button>\n                            <motion.button\n                              whileHover={{ scale: 1.05 }}\n                              whileTap={{ scale: 0.95 }}\n                              onClick={() => saveSection('initial_presentation')}\n                              className=\"px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors flex items-center gap-2\"\n                            >\n                              <Save size={16} />\n                              Save Changes\n                            </motion.button>\n                          </div>\n                        </div>\n                      ) : (\n                        <div className=\"text-slate-300 leading-relaxed bg-slate-700/30 rounded-lg p-4\">\n                          {editData.initialPresentation || editData.initial_presentation || 'No initial presentation documented'}\n                        </div>\n                      )}\n                    </motion.div>\n\n                    {/* Last Updated */}\n                    <div className=\"text-xs text-slate-500 text-right\">\n                      Last updated: {editData.last_updated ? new Date(editData.last_updated).toLocaleString() : 'Never'}\n                    </div>\n                  </motion.div>\n                )}\n\n                {/* Narrative Tab */}\n                {activeTab === 'narrative' && (\n                  <motion.div\n                    key=\"narrative\"\n                    ref={el => contentRefs.current.narrative = el}\n                    initial={{ opacity: 0, x: -20 }}\n                    animate={{ opacity: 1, x: 0 }}\n                    exit={{ opacity: 0, x: 20 }}\n                    transition={{ duration: 0.3 }}\n                    className=\"h-full overflow-y-auto p-6 space-y-6\"\n                  >\n                    {/* Narrative Summary Section */}\n                    <motion.div \n                      variants={cardVariants}\n                      animate={editingSections.narrative ? \"edit\" : \"visible\"}\n                      className=\"bg-slate-800/50 backdrop-blur-sm rounded-xl p-6 border border-slate-700\"\n                    >\n                      <div className=\"flex items-center justify-between mb-4\">\n                        <h3 className=\"text-lg font-semibold text-white flex items-center gap-2\">\n                          <FileText size={20} className=\"text-blue-400\" />\n                          Narrative Summary\n                        </h3>\n                        {!editingSections.narrative && (\n                          <motion.button\n                            whileHover={{ scale: 1.1 }}\n                            whileTap={{ scale: 0.9 }}\n                            onClick={() => startEditingSection('narrative')}\n                            className=\"text-slate-400 hover:text-white transition-colors p-1 rounded\"\n                            title=\"Edit narrative summary\"\n                          >\n                            <Edit3 size={16} />\n                          </motion.button>\n                        )}\n                      </div>\n                      \n                      {editingSections.narrative ? (\n                        <motion.div \n                          className=\"space-y-4\"\n                          initial={{ opacity: 0, y: 10 }}\n                          animate={{ opacity: 1, y: 0 }}\n                          transition={{ duration: 0.3 }}\n                        >\n                          <textarea\n                            value={sectionData.narrative?.narrative_summary || editData.narrative_summary || ''}\n                            onChange={(e) => updateSectionField('narrative', 'narrative_summary', e.target.value)}\n                            rows={8}\n                            className=\"w-full bg-slate-700 border border-slate-600 rounded-lg px-4 py-3 text-white placeholder-slate-400 focus:ring-2 focus:ring-blue-500 focus:border-blue-500 resize-none\"\n                            placeholder=\"Enter the narrative summary for this case...\"\n                          />\n                          <div className=\"flex justify-end gap-2\">\n                            <motion.button\n                              whileHover={{ scale: 1.02 }}\n                              whileTap={{ scale: 0.98 }}\n                              onClick={() => cancelEditingSection('narrative')}\n                              className=\"px-3 py-2 text-slate-300 hover:text-white border border-slate-600 rounded-lg hover:bg-slate-700 transition-colors text-sm\"\n                            >\n                              Cancel\n                            </motion.button>\n                            <motion.button\n                              whileHover={{ scale: 1.02 }}\n                              whileTap={{ scale: 0.98 }}\n                              onClick={() => saveSectionEdit('narrative')}\n                              disabled={isLoading}\n                              className=\"px-3 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors text-sm flex items-center gap-2\"\n                            >\n                              {isLoading ? <Loader2 size={14} className=\"animate-spin\" /> : <Save size={14} />}\n                              Save\n                            </motion.button>\n                          </div>\n                        </motion.div>\n                      ) : (\n                        <motion.div \n                          className=\"text-slate-300 leading-relaxed cursor-pointer hover:bg-slate-700/20 rounded-lg p-4 transition-colors\"\n                          whileHover={{ scale: 1.01 }}\n                          transition={{ duration: 0.2 }}\n                          onClick={() => startEditingSection('narrative')}\n                        >\n                          {editData.narrative_summary || (\n                            <span className=\"text-slate-500 italic\">Click to add narrative summary...</span>\n                          )}\n                        </motion.div>\n                      )}\n                    </motion.div>\n                  </motion.div>\n                )}\n\n                {/* Medications Tab */}\n                {activeTab === 'medications' && (\n                  <motion.div\n                    key=\"medications\"\n                    ref={el => contentRefs.current.medications = el}\n                    initial={{ opacity: 0, x: -20 }}\n                    animate={{ opacity: 1, x: 0 }}\n                    exit={{ opacity: 0, x: 20 }}\n                    transition={{ duration: 0.3 }}\n                    className=\"h-full overflow-y-auto p-6 space-y-6\"\n                  >\n                    {/* Medications List */}\n                    <motion.div \n                      variants={cardVariants}\n                      initial=\"hidden\"\n                      animate=\"visible\"\n                      className=\"bg-slate-800/50 backdrop-blur-sm rounded-xl p-6 border border-slate-700\"\n                    >\n                      <h3 className=\"text-lg font-semibold text-white mb-4 flex items-center gap-2\">\n                        <Pill size={20} className=\"text-green-400\" />\n                        Current Medications\n                      </h3>\n                      \n                      {/* Existing Medications */}\n                      <div className=\"space-y-4 mb-6\">\n                        <AnimatePresence>\n                          {(editData.medications || []).map((medication, index) => (\n                            <motion.div\n                              key={medication.id || index}\n                              initial={{ opacity: 0, scale: 0.8 }}\n                              animate={{ opacity: 1, scale: 1 }}\n                              exit={{ opacity: 0, scale: 0.8 }}\n                              className=\"bg-green-600/10 border border-green-600/20 rounded-lg p-4 group hover:bg-green-600/15 transition-colors\"\n                            >\n                              <div className=\"flex items-start justify-between\">\n                                <div className=\"flex-1\">\n                                  <div className=\"flex items-center gap-3 mb-2\">\n                                    <h4 className=\"font-semibold text-green-300\">{medication.name}</h4>\n                                    {medication.dosage && (\n                                      <span className=\"text-xs bg-green-600/20 text-green-300 px-2 py-1 rounded\">\n                                        {medication.dosage}\n                                      </span>\n                                    )}\n                                  </div>\n                                  <div className=\"space-y-1 text-sm text-slate-300\">\n                                    {medication.frequency && (\n                                      <div className=\"flex items-center gap-2\">\n                                        <Clock size={14} className=\"text-green-400\" />\n                                        <span>Frequency: {medication.frequency}</span>\n                                      </div>\n                                    )}\n                                    {medication.effect && (\n                                      <div className=\"flex items-center gap-2\">\n                                        <Activity size={14} className=\"text-green-400\" />\n                                        <span>Effect: {medication.effect}</span>\n                                      </div>\n                                    )}\n                                    {medication.dateAdded && (\n                                      <div className=\"flex items-center gap-2\">\n                                        <Calendar size={14} className=\"text-green-400\" />\n                                        <span>Added: {new Date(medication.dateAdded).toLocaleDateString()}</span>\n                                      </div>\n                                    )}\n                                  </div>\n                                </div>\n                                <motion.button\n                                  whileHover={{ scale: 1.1 }}\n                                  whileTap={{ scale: 0.9 }}\n                                  onClick={() => removeMedication(medication.id)}\n                                  className=\"text-green-400 hover:text-green-200 opacity-0 group-hover:opacity-100 transition-opacity p-1 rounded\"\n                                  title=\"Remove medication\"\n                                >\n                                  <Trash2 size={16} />\n                                </motion.button>\n                              </div>\n                            </motion.div>\n                          ))}\n                        </AnimatePresence>\n                      </div>\n                      \n                      {/* Add New Medication */}\n                      {!showMedicationForm ? (\n                        <motion.button\n                          whileHover={{ scale: 1.02 }}\n                          whileTap={{ scale: 0.98 }}\n                          onClick={() => setShowMedicationForm(true)}\n                          className=\"w-full flex items-center justify-center gap-2 p-4 border-2 border-dashed border-green-600/30 rounded-lg text-green-400 hover:border-green-600/50 hover:bg-green-600/5 transition-colors\"\n                        >\n                          <Plus size={16} />\n                          Add New Medication\n                        </motion.button>\n                      ) : (\n                        <motion.div\n                          initial={{ opacity: 0, y: 20 }}\n                          animate={{ opacity: 1, y: 0 }}\n                          className=\"bg-slate-700/30 rounded-lg p-4 space-y-4\"\n                        >\n                          <div className=\"grid md:grid-cols-2 gap-4\">\n                            <div>\n                              <label className=\"block text-sm font-medium text-slate-300 mb-2\">\n                                Medication Name <span className=\"text-red-400\">*</span>\n                              </label>\n                              <input\n                                type=\"text\"\n                                value={newMedication.name}\n                                onChange={(e) => setNewMedication(prev => ({ ...prev, name: e.target.value }))}\n                                className=\"w-full bg-slate-700 border border-slate-600 rounded-lg px-3 py-2 text-white placeholder-slate-400 focus:ring-2 focus:ring-green-500 focus:border-green-500\"\n                                placeholder=\"Enter medication name\"\n                              />\n                            </div>\n                            <div>\n                              <label className=\"block text-sm font-medium text-slate-300 mb-2\">Dosage</label>\n                              <input\n                                type=\"text\"\n                                value={newMedication.dosage}\n                                onChange={(e) => setNewMedication(prev => ({ ...prev, dosage: e.target.value }))}\n                                className=\"w-full bg-slate-700 border border-slate-600 rounded-lg px-3 py-2 text-white placeholder-slate-400 focus:ring-2 focus:ring-green-500 focus:border-green-500\"\n                                placeholder=\"e.g., 50mg\"\n                              />\n                            </div>\n                          </div>\n                          <div className=\"grid md:grid-cols-2 gap-4\">\n                            <div>\n                              <label className=\"block text-sm font-medium text-slate-300 mb-2\">Frequency</label>\n                              <input\n                                type=\"text\"\n                                value={newMedication.frequency}\n                                onChange={(e) => setNewMedication(prev => ({ ...prev, frequency: e.target.value }))}\n                                className=\"w-full bg-slate-700 border border-slate-600 rounded-lg px-3 py-2 text-white placeholder-slate-400 focus:ring-2 focus:ring-green-500 focus:border-green-500\"\n                                placeholder=\"e.g., Once daily\"\n                              />\n                            </div>\n                            <div>\n                              <label className=\"block text-sm font-medium text-slate-300 mb-2\">Effect/Notes</label>\n                              <input\n                                type=\"text\"\n                                value={newMedication.effect}\n                                onChange={(e) => setNewMedication(prev => ({ ...prev, effect: e.target.value }))}\n                                className=\"w-full bg-slate-700 border border-slate-600 rounded-lg px-3 py-2 text-white placeholder-slate-400 focus:ring-2 focus:ring-green-500 focus:border-green-500\"\n                                placeholder=\"e.g., Improved mood\"\n                              />\n                            </div>\n                          </div>\n                          <div className=\"flex justify-end gap-2\">\n                            <motion.button\n                              whileHover={{ scale: 1.02 }}\n                              whileTap={{ scale: 0.98 }}\n                              onClick={() => {\n                                setShowMedicationForm(false);\n                                setNewMedication({ name: '', dosage: '', frequency: '', effect: '' });\n                              }}\n                              className=\"px-4 py-2 text-slate-300 hover:text-white border border-slate-600 rounded-lg hover:bg-slate-700 transition-colors\"\n                            >\n                              Cancel\n                            </motion.button>\n                            <motion.button\n                              whileHover={{ scale: 1.02 }}\n                              whileTap={{ scale: 0.98 }}\n                              onClick={addMedication}\n                              disabled={!newMedication.name.trim()}\n                              className=\"px-4 py-2 bg-green-600 text-white rounded-lg hover:bg-green-700 transition-colors flex items-center gap-2 disabled:opacity-50 disabled:cursor-not-allowed\"\n                            >\n                              <Plus size={16} />\n                              Add Medication\n                            </motion.button>\n                          </div>\n                        </motion.div>\n                      )}\n                      \n                      {(editData.medications || []).length === 0 && !showMedicationForm && (\n                        <p className=\"text-slate-500 italic text-center py-8\">No medications documented yet</p>\n                      )}\n                    </motion.div>\n                  </motion.div>\n                )}\n\n                {/* Therapy & Insights Tab */}\n                {activeTab === 'therapy' && (\n                  <motion.div\n                    key=\"therapy\"\n                    ref={el => contentRefs.current.therapy = el}\n                    initial={{ opacity: 0, x: -20 }}\n                    animate={{ opacity: 1, x: 0 }}\n                    exit={{ opacity: 0, x: 20 }}\n                    transition={{ duration: 0.3 }}\n                    className=\"h-full overflow-y-auto p-6 space-y-6\"\n                  >\n                    {/* Therapeutic Highlights Section */}\n                    <motion.div \n                      variants={cardVariants}\n                      animate={editingSections.therapeutic_highlights ? \"edit\" : \"visible\"}\n                      className=\"bg-slate-800/50 backdrop-blur-sm rounded-xl p-6 border border-slate-700\"\n                    >\n                      <div className=\"flex items-center justify-between mb-4\">\n                        <h3 className=\"text-lg font-semibold text-white flex items-center gap-2\">\n                          <Brain size={20} className=\"text-purple-400\" />\n                          Therapeutic Highlights\n                        </h3>\n                        {!editingSections.therapeutic_highlights && (\n                          <motion.button\n                            whileHover={{ scale: 1.1 }}\n                            whileTap={{ scale: 0.9 }}\n                            onClick={() => startEditingSection('therapeutic_highlights')}\n                            className=\"text-slate-400 hover:text-white transition-colors p-1 rounded\"\n                            title=\"Edit therapeutic highlights\"\n                          >\n                            <Edit3 size={16} />\n                          </motion.button>\n                        )}\n                      </div>\n                      \n                      {editingSections.therapeutic_highlights ? (\n                        <motion.div \n                          className=\"space-y-4\"\n                          initial={{ opacity: 0, y: 10 }}\n                          animate={{ opacity: 1, y: 0 }}\n                          transition={{ duration: 0.3 }}\n                        >\n                          <textarea\n                            value={sectionData.therapeutic_highlights?.therapeutic_highlights || editData.therapeutic_highlights || ''}\n                            onChange={(e) => updateSectionField('therapeutic_highlights', 'therapeutic_highlights', e.target.value)}\n                            rows={10}\n                            className=\"w-full bg-slate-700 border border-slate-600 rounded-lg px-4 py-3 text-white placeholder-slate-400 focus:ring-2 focus:ring-purple-500 focus:border-purple-500 resize-none\"\n                            placeholder=\"Enter key therapeutic moments, insights, breakthroughs, or notes on therapy process...\"\n                          />\n                          <div className=\"flex justify-end gap-2\">\n                            <motion.button\n                              whileHover={{ scale: 1.02 }}\n                              whileTap={{ scale: 0.98 }}\n                              onClick={() => cancelEditingSection('therapeutic_highlights')}\n                              className=\"px-3 py-2 text-slate-300 hover:text-white border border-slate-600 rounded-lg hover:bg-slate-700 transition-colors text-sm\"\n                            >\n                              Cancel\n                            </motion.button>\n                            <motion.button\n                              whileHover={{ scale: 1.02 }}\n                              whileTap={{ scale: 0.98 }}\n                              onClick={() => saveSectionEdit('therapeutic_highlights')}\n                              disabled={isLoading}\n                              className=\"px-3 py-2 bg-purple-600 text-white rounded-lg hover:bg-purple-700 transition-colors text-sm flex items-center gap-2\"\n                            >\n                              {isLoading ? <Loader2 size={14} className=\"animate-spin\" /> : <Save size={14} />}\n                              Save\n                            </motion.button>\n                          </div>\n                        </motion.div>\n                      ) : (\n                        <motion.div \n                          className=\"text-slate-300 leading-relaxed cursor-pointer hover:bg-slate-700/20 rounded-lg p-4 transition-colors min-h-[200px]\"\n                          whileHover={{ scale: 1.01 }}\n                          transition={{ duration: 0.2 }}\n                          onClick={() => startEditingSection('therapeutic_highlights')}\n                        >\n                          {editData.therapeutic_highlights ? (\n                            <div className=\"whitespace-pre-wrap\">{editData.therapeutic_highlights}</div>\n                          ) : (\n                            <span className=\"text-slate-500 italic\">Click to add therapeutic highlights, key moments, insights, breakthroughs, or therapy process notes...</span>\n                          )}\n                        </motion.div>\n                      )}\n                    </motion.div>\n                  </motion.div>\n                )}\n\n                {/* Timeline Tab */}\n                {activeTab === 'timeline' && (\n                  <motion.div\n                    key=\"timeline\"\n                    ref={el => contentRefs.current.timeline = el}\n                    initial={{ opacity: 0, x: -20 }}\n                    animate={{ opacity: 1, x: 0 }}\n                    exit={{ opacity: 0, x: 20 }}\n                    transition={{ duration: 0.3 }}\n                    className=\"h-full overflow-hidden\"\n                  >\n                    <AngularTimeline\n                      caseId={data?.id}\n                      initialEntries={timelineEntries}\n                      onEntryUpdate={updateTimeline}\n                      onEntryAdd={(newEntry) => {\n                        const updatedTimeline = [...timelineEntries, newEntry];\n                        updateTimeline(updatedTimeline);\n                      }}\n                      onEntryDelete={(entryId) => {\n                        const updatedTimeline = timelineEntries.filter(entry => entry.id !== entryId);\n                        updateTimeline(updatedTimeline);\n                      }}\n                      width={950} // Increased width to use expanded modal space\n                      height={500} // Increased height for better layout\n                    />\n                  </motion.div>\n                )}\n\n                {/* Related Tab */}\n                {activeTab === 'related' && (\n                  <motion.div\n                    key=\"related\"\n                    ref={el => contentRefs.current.related = el}\n                    initial={{ opacity: 0, x: -20 }}\n                    animate={{ opacity: 1, x: 0 }}\n                    exit={{ opacity: 0, x: 20 }}\n                    transition={{ duration: 0.3 }}\n                    className=\"h-full overflow-y-auto p-6 space-y-6\"\n                  >\n                    {/* Connected Nodes */}\n                    <motion.div \n                      variants={cardVariants}\n                      initial=\"hidden\"\n                      animate=\"visible\"\n                      className=\"bg-slate-800/50 backdrop-blur-sm rounded-xl p-6 border border-slate-700\"\n                    >\n                      <h3 className=\"text-lg font-semibold text-white mb-4 flex items-center gap-2\">\n                        <Link2 size={20} className=\"text-cyan-400\" />\n                        Connected Nodes\n                      </h3>\n                      \n                      {/* Topics */}\n                      <div className=\"mb-6\">\n                        <h4 className=\"text-md font-medium text-slate-300 mb-3 flex items-center gap-2\">\n                          <Brain size={16} className=\"text-blue-400\" />\n                          Related Topics\n                        </h4>\n                        {connectedNodes.topics.length > 0 ? (\n                          <div className=\"space-y-2\">\n                            {connectedNodes.topics.map((topic, index) => (\n                              <div key={index} className=\"flex items-center gap-3 p-3 bg-blue-600/10 border border-blue-600/20 rounded-lg\">\n                                <Brain size={16} className=\"text-blue-400\" />\n                                <span className=\"text-blue-300\">{topic.title}</span>\n                              </div>\n                            ))}\n                          </div>\n                        ) : (\n                          <p className=\"text-slate-500 italic text-sm\">No connected topics</p>\n                        )}\n                      </div>\n\n                      {/* Literature */}\n                      <div className=\"mb-6\">\n                        <h4 className=\"text-md font-medium text-slate-300 mb-3 flex items-center gap-2\">\n                          <BookOpen size={16} className=\"text-purple-400\" />\n                          Related Literature\n                        </h4>\n                        {connectedNodes.literature.length > 0 ? (\n                          <div className=\"space-y-2\">\n                            {connectedNodes.literature.map((lit, index) => (\n                              <div key={index} className=\"flex items-center gap-3 p-3 bg-purple-600/10 border border-purple-600/20 rounded-lg\">\n                                <BookOpen size={16} className=\"text-purple-400\" />\n                                <span className=\"text-purple-300\">{lit.title}</span>\n                              </div>\n                            ))}\n                          </div>\n                        ) : (\n                          <p className=\"text-slate-500 italic text-sm\">No connected literature</p>\n                        )}\n                      </div>\n\n                      {/* Other Cases */}\n                      <div>\n                        <h4 className=\"text-md font-medium text-slate-300 mb-3 flex items-center gap-2\">\n                          <Users size={16} className=\"text-green-400\" />\n                          Related Cases\n                        </h4>\n                        {connectedNodes.cases.length > 0 ? (\n                          <div className=\"space-y-2\">\n                            {connectedNodes.cases.map((caseNode, index) => (\n                              <div key={index} className=\"flex items-center gap-3 p-3 bg-green-600/10 border border-green-600/20 rounded-lg\">\n                                <Users size={16} className=\"text-green-400\" />\n                                <span className=\"text-green-300\">{caseNode.title}</span>\n                              </div>\n                            ))}\n                          </div>\n                        ) : (\n                          <p className=\"text-slate-500 italic text-sm\">No connected cases</p>\n                        )}\n                      </div>\n\n                      <div className=\"mt-6 p-4 bg-slate-700/20 rounded-lg border border-slate-600\">\n                        <p className=\"text-slate-400 text-sm italic\">\n                          Connected nodes will be automatically populated based on mind map relationships and connections created in the graph view.\n                        </p>\n                      </div>\n                    </motion.div>\n                  </motion.div>\n                )}\n              </AnimatePresence>\n            </motion.div>\n          </motion.div>\n        </motion.div>\n      )}\n    </AnimatePresence>\n  );\n};\n\nexport default CaseModal;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","var getProto = Object.getPrototypeOf ? (obj) => (Object.getPrototypeOf(obj)) : (obj) => (obj.__proto__);\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; (typeof current == 'object' || typeof current == 'function') && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach((key) => (def[key] = () => (value[key])));\n\t}\n\tdef['default'] = () => (value);\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = (chunkId) => {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce((promises, key) => {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks\n__webpack_require__.u = (chunkId) => {\n\t// return url for filenames based on template\n\treturn \"static/js/\" + chunkId + \".\" + {\"213\":\"953ef4c7\",\"261\":\"de3004f3\",\"524\":\"7d493d91\"}[chunkId] + \".chunk.js\";\n};","// This function allow to reference async chunks\n__webpack_require__.miniCssF = (chunkId) => {\n\t// return url for filenames based on template\n\treturn undefined;\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","var inProgress = {};\nvar dataWebpackPrefix = \"frontend:\";\n// loadScript function to load a script via script tag\n__webpack_require__.l = (url, done, key, chunkId) => {\n\tif(inProgress[url]) { inProgress[url].push(done); return; }\n\tvar script, needAttach;\n\tif(key !== undefined) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tfor(var i = 0; i < scripts.length; i++) {\n\t\t\tvar s = scripts[i];\n\t\t\tif(s.getAttribute(\"src\") == url || s.getAttribute(\"data-webpack\") == dataWebpackPrefix + key) { script = s; break; }\n\t\t}\n\t}\n\tif(!script) {\n\t\tneedAttach = true;\n\t\tscript = document.createElement('script');\n\n\t\tscript.charset = 'utf-8';\n\t\tscript.timeout = 120;\n\t\tif (__webpack_require__.nc) {\n\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n\t\t}\n\t\tscript.setAttribute(\"data-webpack\", dataWebpackPrefix + key);\n\n\t\tscript.src = url;\n\t}\n\tinProgress[url] = [done];\n\tvar onScriptComplete = (prev, event) => {\n\t\t// avoid mem leaks in IE.\n\t\tscript.onerror = script.onload = null;\n\t\tclearTimeout(timeout);\n\t\tvar doneFns = inProgress[url];\n\t\tdelete inProgress[url];\n\t\tscript.parentNode && script.parentNode.removeChild(script);\n\t\tdoneFns && doneFns.forEach((fn) => (fn(event)));\n\t\tif(prev) return prev(event);\n\t}\n\tvar timeout = setTimeout(onScriptComplete.bind(null, undefined, { type: 'timeout', target: script }), 120000);\n\tscript.onerror = onScriptComplete.bind(null, script.onerror);\n\tscript.onload = onScriptComplete.bind(null, script.onload);\n\tneedAttach && document.head.appendChild(script);\n};","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","__webpack_require__.p = \"./\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t792: 0\n};\n\n__webpack_require__.f.j = (chunkId, promises) => {\n\t\t// JSONP chunk loading for javascript\n\t\tvar installedChunkData = __webpack_require__.o(installedChunks, chunkId) ? installedChunks[chunkId] : undefined;\n\t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n\t\t\t// a Promise means \"currently loading\".\n\t\t\tif(installedChunkData) {\n\t\t\t\tpromises.push(installedChunkData[2]);\n\t\t\t} else {\n\t\t\t\tif(true) { // all chunks have JS\n\t\t\t\t\t// setup Promise in chunk cache\n\t\t\t\t\tvar promise = new Promise((resolve, reject) => (installedChunkData = installedChunks[chunkId] = [resolve, reject]));\n\t\t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n\t\t\t\t\t// start chunk loading\n\t\t\t\t\tvar url = __webpack_require__.p + __webpack_require__.u(chunkId);\n\t\t\t\t\t// create error before stack unwound to get useful stacktrace later\n\t\t\t\t\tvar error = new Error();\n\t\t\t\t\tvar loadingEnded = (event) => {\n\t\t\t\t\t\tif(__webpack_require__.o(installedChunks, chunkId)) {\n\t\t\t\t\t\t\tinstalledChunkData = installedChunks[chunkId];\n\t\t\t\t\t\t\tif(installedChunkData !== 0) installedChunks[chunkId] = undefined;\n\t\t\t\t\t\t\tif(installedChunkData) {\n\t\t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n\t\t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n\t\t\t\t\t\t\t\terror.message = 'Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')';\n\t\t\t\t\t\t\t\terror.name = 'ChunkLoadError';\n\t\t\t\t\t\t\t\terror.type = errorType;\n\t\t\t\t\t\t\t\terror.request = realSrc;\n\t\t\t\t\t\t\t\tinstalledChunkData[1](error);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t\t__webpack_require__.l(url, loadingEnded, \"chunk-\" + chunkId, chunkId);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n};\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkfrontend\"] = self[\"webpackChunkfrontend\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [967,497,96], () => (__webpack_require__(3005)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["LoadingSpinner","_ref","message","_jsx","className","children","_jsxs","Loader2","LazyRichTextEditor","lazy","LazyTemplateManager","LazyLiteratureModal","LazyCaseModal","LazyTopicModal","LazyTaskModal","withLazyLoading","LazyComponent","fallbackMessage","props","Suspense","fallback","LiteratureModal","getIntersectionPoint","rect","center","point","x","rectX","y","rectY","width","height","centerX","centerY","pointX","pointY","left","right","top","bottom","dx","dy","Math","abs","side","slope","yIntercept","intersections","leftY","push","distance","hypot","rightY","topX","bottomX","validIntersections","filter","intersection","intersectionDx","intersectionDy","sort","a","b","FloatingEdge","memo","_sourceNode","_targetNode","_sourceNode2","_sourceNode3","_targetNode2","_targetNode3","id","source","target","sourceX","sourceY","targetX","targetY","sourcePosition","targetPosition","style","markerEnd","markerStart","data","getNode","useReactFlow","sourceNode","targetNode","error","edgePath","labelX","labelY","useMemo","__isAnimating","__forceUpdate","_sourceNode$dimension","_sourceNode$data","_sourceNode$style","_targetNode$dimension","_targetNode$data","_targetNode$style","_sourceNode$positionA","_sourceNode$positionA2","_targetNode$positionA","_targetNode$positionA2","sourceHasDimensions","Boolean","dimensions","targetHasDimensions","getNodeDimensions","node","_node$dimensions","_node$data","_node$dimensions2","_node$data2","defaultWidth","type","defaultHeight","sourceDims","targetDims","floatingEdgeData","options","arguments","length","undefined","sourceWidth","sourceHeight","targetWidth","targetHeight","offset","sourceSide","targetSide","sourceCenter","targetCenter","sourceRect","targetRect","sourceIntersection","targetIntersection","sqrt","unitX","unitY","extensionAmount","debug","console","log","getFloatingEdgePath","positionAbsolute","position","sx","sy","tx","ty","warn","BaseEdge","path","stroke","strokeWidth","strokeLinecap","strokeOpacity","transition","prevProps","nextProps","_prevProps$data","_nextProps$data","EnhancedEdge","label","sourceHandleId","targetHandleId","selected","animated","getBezierPath","_Fragment","EdgeLabelRenderer","transform","fontSize","pointerEvents","displayName","fromX","fromY","toX","toY","connectionLineStyle","strokeDasharray","animation","d","fill","progress","Brain","Sparkles","max","min","isVisible","setIsVisible","useState","skipAnimation","useEffect","timer","setTimeout","clearTimeout","completionPercentage","flashcard_count","completed_flashcards","backgroundColor","color","boxShadow","Handle","Position","Top","zIndex","isConnectable","Right","Bottom","Left","priority","size","tags","Tag","onDelete","onClick","e","preventDefault","deleteTimeout","stopPropagation","currentTarget","onDoubleClick","X","category","round","slice","map","tag","index","updated_at","Clock","nodeTypes","topic","TopicNode","case","urgency","_data$chief_complaint","_data$diagnosis","complaint","chief_complaint","toLowerCase","diagnosis","some","keyword","includes","getUrgencyLevel","AlertCircle","Users","linked_topics","age","Calendar","status","getStatusColor","tasks_count","CheckSquare","completed_tasks","task","pending","in_progress","completed","due_date","Date","toLocaleDateString","literature","clickTimeout","onLiteratureClick","BookOpen","authors","year","sampleLiteratureData","title","journal","volume","pages","doi","abstract","keywords","notes","pdf_url","sampleConnections","populateSampleLiteratureData","setMindMapData","autoSaveMindMapData","addToast","prevData","existingIds","Set","item","newLiterature","has","existingCaseIds","cases","existingTopicIds","topics","newCases","primary_diagnosis","secondary_diagnoses","newTopics","existingConnectionIds","connections","conn","newConnections","updatedData","loadD3Force","API","process","replace","originalError","_len2","args","Array","_key2","Toast","onClose","duration","success","info","saving","getIcon","CheckCircle2","Info","LoadingButton","_ref2","loading","disabled","icon","Icon","STORAGE_KEY","localStorageUtils","save","timeoutId","onSaveStart","onSaveComplete","isAnimating","storageData","version","timestamp","toISOString","localStorage","setItem","JSON","stringify","name","removeItem","clearError","load","stored","getItem","parse","clear","getStorageInfo","Blob","EdgeLabelModal","_ref7","edge","isOpen","onSave","setLabel","handleSave","value","onChange","onKeyPress","key","placeholder","autoFocus","Save","DashboardComponent","_caseModal$data2","_topicModal$data2","_taskModal$data2","_caseModal$data3","_topicModal$data3","_taskModal$data3","fitView","setCenter","zoomTo","getViewport","nodes","setNodes","onNodesChange","useNodesState","edges","setEdges","onEdgesChange","useEdgesState","nodeUpdateTrigger","setNodeUpdateTrigger","mindMapData","tasks","isEditing","setIsEditing","selectedNode","setSelectedNode","setLoading","loadingProgress","setLoadingProgress","loadingMessage","setLoadingMessage","isInitialLoad","setIsInitialLoad","focusedCategory","setFocusedCategory","showNodeSelector","setShowNodeSelector","caseModal","setCaseModal","topicModal","setTopicModal","taskModal","setTaskModal","caseModalStableData","useRef","topicModalStableData","taskModalStableData","isReactFlowReady","setIsReactFlowReady","hasAppliedInitialLayout","setHasAppliedInitialLayout","isExportingCSV","setIsExportingCSV","lastSaved","setLastSaved","isSaving","setIsSaving","edgeModal","setEdgeModal","toasts","setToasts","literatureModal","setLiteratureModal","setIsAnimating","modalAnimationStates","setModalAnimationStates","useCallback","newToast","now","prev","removeToast","toast","_caseModal$data","_topicModal$data","_taskModal$data","anyModalOpen","anyModalAnimating","Object","values","state","anyModalTransitioning","isTabTransitioning","window","requestIdleCallback","saveToBackend","timeout","positionBackendSaveTimeout","current","handleDeleteNode","fullNodeId","nodeType","idParts","split","nodeId","join","collectionKey","updatedCollection","String","updatedConnections","newData","charAt","toUpperCase","nds","eds","handleLiteratureClick","literatureData","syncNodeData","currentNodes","hasChanges","updatedNodes","newLabel","newColor","needsUpdate","_mindMapData$cases","caseData","find","c","expectedLabel","primaryDiagnosis","_mindMapData$topics","topicData","t","expectedColor","_mindMapData$tasks","taskData","_mindMapData$literatu","l","lastUpdated","_mindMapData$cases2","_mindMapData$topics2","_mindMapData$tasks2","_mindMapData$literatu2","convertDataToReactFlow","async","applyLayoutImmediately","allItems","layoutNodes","hasExistingPositions","forceSimulation","forceManyBody","forceLink","forceCenter","forceCollide","simulationNodes","_item$position","_item$position2","random","d3Edges","nodeIds","n","simulation","force","strength","distanceMax","innerWidth","innerHeight","radius","stop","i","tick","positionMap","Map","forEach","set","get","quickNodes","nodeData","chiefComplaint","initialPresentation","initial_presentation","currentPresentation","current_presentation","medicationHistory","medication_history","therapyProgress","therapy_progress","defensePatterns","defense_patterns","clinicalReflection","clinical_reflection","gridSize","ceil","nodeSpacing","offsetY","floor","optimizedEdges","createOptimizedEdges","nodeIdSet","opacity","updatable","cleanData","_topic$position","_topic$position2","description","Number","resources","isArray","created_at","caseItem","_caseItem$position","_caseItem$position2","case_id","encounter_date","gender","history_present_illness","medical_history","medications","mental_status_exam","assessment_plan","_task$position","_task$position2","linked_case_id","linked_topic_id","lit","_lit$position","_lit$position2","publication","pdf_path","response","axios","put","headers","err","_err$response","_err$response2","_err$response3","_err$response3$data","detail","onConnect","params","edgeId","newEdge","interactionWidth","addEdge","onNodeClick","event","onNodeDoubleClick","parts","dataItem","onEdgeDoubleClick","onEdgeContextMenu","handleSaveEdgeLabel","onEdgeMouseEnter","onEdgeMouseLeave","forceLayout","currentEdges","validEdges","fx","fy","ticksPerFrame","totalTicks","currentTick","runSimulationChunk","remainingTicks","requestAnimationFrame","simNode","currentData","_updatedData$key","padding","applyForceLayout","handleClearMap","confirm","empty","addNewNode","_mindMapData$topics3","_mindMapData$cases3","_mindMapData$tasks3","_mindMapData$literatu3","dataId","currentDataCount","gridPosition","newNode","dataToAdd","concat","handleNodesChange","changes","positionChanges","change","_updatedData$key2","handleNodeDragStop","dragSaveTimeout","loadMindMapData","local","backendError","nodeMatchesSearch","query","searchTerm","trim","hasMatch","handleKeyDown","_document$querySelect","tagName","ctrlKey","metaKey","document","querySelector","focus","addEventListener","removeEventListener","styleSheet","getElementById","createElement","head","appendChild","textContent","OptimizedLoadingScreen","CheckCircle","toLocaleTimeString","Cloud","Shuffle","Trash2","Eye","ReactFlowErrorBoundary","ReactFlow","onNodeDragStop","edgeTypes","floating","enhanced","connectionLineComponent","ConnectionLine","nodesDraggable","nodesConnectable","elementsSelectable","onInit","reactFlowInstance","onError","snapToGrid","snapGrid","elevateEdgesOnSelect","defaultEdgeOptions","Background","gap","Controls","MiniMap","onAnimationStart","onAnimationEnd","allNodes","AnimatePresence","mode","CaseModal","TopicModal","forceNodeUpdate","TaskModal","React","constructor","super","this","hasError","getDerivedStateFromError","componentDidCatch","errorInfo","render","location","reload","Dashboard","ReactFlowProvider","ReactDOM","App","modalVariants","hidden","scale","rotate","visible","damping","stiffness","exit","backdropVariants","backdropFilter","ease","contentVariants","delay","cardVariants","edit","saved","_sectionData$title","_sectionData$definiti","_sectionData$diagnost","_sectionData$psychoth","isClosing","setIsClosing","editData","setEditData","isLoading","setIsLoading","hasInitialized","setHasInitialized","activeTab","setActiveTab","setIsTabTransitioning","editingSections","setEditingSections","sectionData","setSectionData","scrollPositions","setScrollPositions","contentRefs","expandedCriteria","setExpandedCriteria","newTags","setNewTags","newResource","setNewResource","showResourceForm","setShowResourceForm","categoryColors","primary","secondary","tabs","Stethoscope","Pill","Link2","initialData","definition","diagnostic_criteria","comorbidities","differential_diagnoses","psychotherapy_modalities","last_updated","prevEditData","progressPercentage","total","handleClose","saveScrollPosition","updatedTopics","tabId","contentRef","scrollTop","restoreScrollPosition","savedPosition","handleTabSwitch","newTabId","handleCategoryChange","_categoryColors$newCa","newCategory","Other","updatedEditData","startEditingSection","sectionId","cancelEditingSection","saveSectionEdit","sectionChanges","updateSectionField","field","setNewTag","_sectionData$sectionI","currentTags","tagToRemove","_sectionData$sectionI2","getNewTag","clearNewTag","addItemDirectly","currentItems","updatedItems","removeItemDirectly","itemToRemove","onExitComplete","motion","div","initial","animate","variants","willChange","backfaceVisibility","onAnimationComplete","button","whileHover","whileTap","layoutId","ref","el","overview","Edit3","h1","select","whileFocus","keys","toLocaleString","concept","rows","FileText","ChevronDown","ChevronRight","criteria","clinical","comorbidity","Plus","Activity","treatment","medication","modality","_priorityConfig$editD","priorityConfig","low","Flag","medium","high","urgent","AlertTriangle","statusConfig","Play","paused","Pause","isOverdue","updatedTasks","handleDelete","handleStatusChange","newStatus","updateField","renderField","choices","choice","repeat","Infinity","TrendingUp","bounce","layout","layoutRoot","Target","entries","_ref3","config","isActive","_prevProps$data2","_nextProps$data2","TimelineHoverCard","entry","onEdit","onCancel","onCardHover","onCardLeave","editContent","setEditContent","cardRef","patient_narrative","clinical_notes","handleClickOutside","contains","cardTitle","cardContent","bgColor","borderColor","glowColor","editingStyles","cardOpacity","onMouseEnter","onMouseLeave","anchorSide","anchorPosition","AngularTimeline","caseId","initialEntries","onEntryUpdate","onEntryAdd","onEntryDelete","svgRef","simulationRef","nodesRef","linksRef","hoverTimeoutRef","containerRef","hoveredNode","setHoveredNode","hoveredLink","setHoveredLink","setEntries","editingCard","setEditingCard","newNodeIds","setNewNodeIds","undoStack","setUndoStack","contextMenu","setContextMenu","saveTimelineChanges","updatedEntries","handleUndo","previousState","handleSaveCurrentEditingCards","_nodesRef$current","closeAfterSave","currentEntry","hasPatientContent","hasClinicalContent","scaleOrdinal","schemeCategory10","calculateZigzagPositions","timelineEntries","sortedEntries","orderIndex","symptoms","isFirstNode","createTimelineLinks","links","insertIndex","calculateCardPosition","cardType","nodeX","nodeY","cardHeight","maxX","maxY","findNearestTimelinePosition","zigzagPositions","nearest","minDistance","pos","reorderTimelineStructure","newIndex","nodeIndex","findIndex","movedEntry","splice","insertNewNode","newEntry","content","handleNodeHover","handleNodeLeave","handleCardHover","handleCardLeave","ensureCardsVisible","_nodesRef$current2","container","containerRect","getBoundingClientRect","patientCardPos","clinicalCardPos","minX","minY","scrollLeft","containerWidth","containerHeight","newScrollLeft","newScrollTop","scrollTo","behavior","initializeSimulation","existingNodes","existing","forceX","forceY","velocityDecay","alphaDecay","alphaMin","svg","attr","selectAll","remove","link","append","on","midX","midY","easeBackOut","newSet","delete","dragBehavior","drag","active","alphaTarget","restart","sourceEvent","nearestPosition","call","clientX","clientY","nodeTitle","handleAddEntry","handleResetLayout","alpha","handleEditCard","handleSaveCard","hoveredNodeData","_nodesRef$current3","maxHeight","overflow","RotateCcw","_sectionData$basic_in","_sectionData$basic_in2","_sectionData$basic_in3","_sectionData$chief_co","_sectionData$initial_","_sectionData$narrativ","_sectionData$therapeu","newMedication","setNewMedication","dosage","frequency","effect","showMedicationForm","setShowMedicationForm","narrative_summary","therapeutic_highlights","timeline","updatedCases","toggleEditSection","updateSectionData","cancelEdit","saveSection","addMedication","updatedMedications","dateAdded","removeMedication","medicationId","med","debouncedTimelineSave","debounce","func","_len","_key","apply","updatedTimeline","retryCount","updateTimeline","skipped","connectedNodes","basic_info","narrative","therapy","entryId","related","caseNode","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","loaded","__webpack_modules__","m","deferred","O","result","chunkIds","fn","notFulfilled","fulfilled","j","every","r","leafPrototypes","getProto","getPrototypeOf","obj","__esModule","then","ns","create","def","indexOf","getOwnPropertyNames","o","defineProperty","enumerable","f","chunkId","Promise","all","reduce","promises","u","miniCssF","g","globalThis","Function","prop","prototype","hasOwnProperty","inProgress","dataWebpackPrefix","url","done","script","needAttach","scripts","getElementsByTagName","s","getAttribute","charset","nc","setAttribute","src","onScriptComplete","onerror","onload","doneFns","parentNode","removeChild","bind","Symbol","toStringTag","nmd","paths","p","installedChunks","installedChunkData","promise","resolve","reject","Error","errorType","realSrc","request","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","chunkLoadingGlobal","self","__webpack_exports__"],"sourceRoot":""}