{"version":3,"file":"static/js/main.ba5ef7fb.js","mappings":"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","sources":["components/timeline-test/sampleVerticalTimelineData.js","components/timeline-test/SimpleGSAPTest.js","components/TimelineModal.js","components/timeline-test/TimelineTestPage.js","components/LazyComponents.js","utils/floatingEdgeUtils.js","components/FloatingEdge.js","components/EnhancedEdge.js","components/ConnectionLine.js","components/OptimizedLoadingScreen.js","components/nodes/TopicNode.js","components/nodes/CaseNode.js","components/nodes/index.js","components/nodes/TaskNode.js","components/nodes/LiteratureNode.js","utils/performanceUtils.js","data/sampleLiteratureData.js","utils/sampleDataUtils.js","App.js","index.js","components/timeline-test/VerticalTimeline.js","components/TopicModal.js","components/TaskModal.js","components/CaseModal.js","../webpack/bootstrap","../webpack/runtime/chunk loaded","../webpack/runtime/create fake namespace object","../webpack/runtime/define property getters","../webpack/runtime/ensure chunk","../webpack/runtime/get javascript chunk filename","../webpack/runtime/get mini-css chunk filename","../webpack/runtime/global","../webpack/runtime/hasOwnProperty shorthand","../webpack/runtime/load script","../webpack/runtime/make namespace object","../webpack/runtime/node module decorator","../webpack/runtime/publicPath","../webpack/runtime/jsonp chunk loading","../webpack/startup"],"sourcesContent":["export const sampleVerticalTimelineData = [\r\n  {\r\n    id: 'entry-001',\r\n    timestamp: '2024-01-14T10:00:00Z',\r\n    date: '2024-01-14',\r\n    title: 'Initial Assessment',\r\n    type: 'patient',\r\n    patientData: {\r\n      chiefComplaint: 'Feeling increasingly anxious and unable to concentrate at work',\r\n      currentStatus: 'First visit - seeking help for anxiety symptoms',\r\n      notes: 'Patient reports 3-month history of generalized anxiety, sleep disturbances, and difficulty focusing. No prior psychiatric treatment.'\r\n    },\r\n    clinicalData: {\r\n      chiefComplaint: 'Generalized Anxiety Disorder assessment',\r\n      currentStatus: 'Initial diagnostic evaluation completed',\r\n      notes: 'GAD-7 score: 14 (moderate anxiety). Recommended CBT and consider medication. No suicidal ideation. Good insight and motivation for treatment.'\r\n    }\r\n  },\r\n  {\r\n    id: 'entry-002',\r\n    timestamp: '2024-01-31T14:00:00Z',\r\n    date: '2024-01-31',\r\n    title: 'Follow-up Visit',\r\n    type: 'clinical',\r\n    patientData: {\r\n      chiefComplaint: 'Some improvement in sleep, but still feeling very anxious during work meetings',\r\n      currentStatus: 'Two weeks on sertraline 50mg, attending weekly therapy',\r\n      notes: 'Medication side effects minimal. Using breathing techniques learned in therapy with some success. Still avoiding certain social situations.'\r\n    },\r\n    clinicalData: {\r\n      chiefComplaint: 'Medication response evaluation',\r\n      currentStatus: 'Partial response to initial treatment',\r\n      notes: 'GAD-7 score: 11 (mild-moderate). Continue sertraline, increase to 75mg. Therapy showing good engagement. Consider exposure exercises.'\r\n    }\r\n  },\r\n  {\r\n    id: 'entry-003',\r\n    timestamp: '2024-02-14T11:00:00Z',\r\n    date: '2024-02-14',\r\n    title: 'Therapy Session',\r\n    type: 'patient',\r\n    patientData: {\r\n      chiefComplaint: 'Had a panic attack at work last week, but handled it better than before',\r\n      currentStatus: 'Learning coping strategies, medication helping with baseline anxiety',\r\n      notes: 'Successfully used grounding techniques during panic attack. Feeling more confident about managing symptoms. Sleep much improved.'\r\n    },\r\n    clinicalData: {\r\n      chiefComplaint: 'Panic episode management and progress review',\r\n      currentStatus: 'Good therapeutic progress with CBT techniques',\r\n      notes: 'Patient demonstrating skill acquisition in anxiety management. Panic attack was brief and well-managed. Continue current treatment plan.'\r\n    }\r\n  },\r\n  {\r\n    id: 'entry-004',\r\n    timestamp: '2024-02-29T16:00:00Z',\r\n    date: '2024-02-29',\r\n    title: 'Medication Review',\r\n    type: 'clinical',\r\n    patientData: {\r\n      chiefComplaint: 'Feeling much more stable, anxiety is manageable most days',\r\n      currentStatus: 'Sertraline 75mg working well, regular therapy sessions',\r\n      notes: 'Returned to normal work performance. Able to participate in meetings without significant anxiety. Relationship with partner improving.'\r\n    },\r\n    clinicalData: {\r\n      chiefComplaint: 'Treatment response assessment',\r\n      currentStatus: 'Good response to combined therapy and medication',\r\n      notes: 'GAD-7 score: 6 (mild). Significant improvement achieved. Plan to continue current dose, transition to bi-weekly therapy sessions.'\r\n    }\r\n  },\r\n  {\r\n    id: 'entry-005',\r\n    timestamp: '2024-03-14T13:00:00Z',\r\n    date: '2024-03-14',\r\n    title: 'Relapse Prevention',\r\n    type: 'patient',\r\n    patientData: {\r\n      chiefComplaint: 'Doing well overall, want to focus on preventing future episodes',\r\n      currentStatus: 'Stable on current treatment, learning long-term management',\r\n      notes: 'Confident in ability to manage anxiety symptoms. Interested in gradually reducing therapy frequency while maintaining medication.'\r\n    },\r\n    clinicalData: {\r\n      chiefComplaint: 'Maintenance and relapse prevention planning',\r\n      currentStatus: 'Treatment goals largely achieved, planning maintenance phase',\r\n      notes: 'Excellent treatment response. Develop relapse prevention plan, continue medication, monthly check-ins. Consider therapy as needed basis.'\r\n    }\r\n  }\r\n];\r\n","import React, { useRef, useEffect } from 'react';\r\nimport { gsap } from 'gsap';\r\n\r\nconst SimpleGSAPTest = () => {\r\n  const boxRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    if (boxRef.current) {\r\n      gsap.to(boxRef.current, {\r\n        duration: 2,\r\n        x: 200,\r\n        rotation: 360,\r\n        backgroundColor: \"blue\",\r\n        repeat: -1,\r\n        yoyo: true\r\n      });\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"p-8\">\r\n      <h1 className=\"text-2xl font-bold mb-4\">GSAP Test</h1>\r\n      <div \r\n        ref={boxRef}\r\n        className=\"w-16 h-16 bg-red-500 rounded\"\r\n      />\r\n      <p className=\"mt-4\">If GSAP is working, you should see the red box animating.</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SimpleGSAPTest;\r\n","// Timeline Modal Component for PGY3-HUB\r\nimport React, { useState, useCallback } from 'react';\r\nimport { motion, AnimatePresence } from 'framer-motion';\r\nimport { X, Clock, Users, Activity } from 'lucide-react';\r\nimport VerticalTimeline from './timeline-test/VerticalTimeline';\r\nimport { sampleVerticalTimelineData } from './timeline-test/sampleVerticalTimelineData';\r\n\r\n// Animation variants for the modal\r\nconst backdropVariants = {\r\n  hidden: { \r\n    opacity: 0,\r\n    backdropFilter: 'blur(0px)'\r\n  },\r\n  visible: { \r\n    opacity: 0.75,\r\n    backdropFilter: 'blur(4px)',\r\n    transition: {\r\n      duration: 0.3,\r\n      ease: \"easeOut\"\r\n    }\r\n  },\r\n  exit: {\r\n    opacity: 0,\r\n    backdropFilter: 'blur(0px)',\r\n    transition: {\r\n      duration: 0.2,\r\n      ease: \"easeIn\"\r\n    }\r\n  }\r\n};\r\n\r\nconst modalVariants = {\r\n  hidden: {\r\n    opacity: 0,\r\n    scale: 0.3,\r\n    y: 50,\r\n    rotate: -5,\r\n  },\r\n  visible: {\r\n    opacity: 1,\r\n    scale: 1,\r\n    y: 0,\r\n    rotate: 0,\r\n    transition: {\r\n      type: \"spring\",\r\n      stiffness: 300,\r\n      damping: 25,\r\n      duration: 0.5\r\n    }\r\n  },\r\n  exit: {\r\n    opacity: 0,\r\n    scale: 0.8,\r\n    y: -20,\r\n    transition: {\r\n      duration: 0.2,\r\n      ease: \"easeIn\"\r\n    }\r\n  }\r\n};\r\n\r\nconst TimelineModal = ({ \r\n  isOpen, \r\n  onClose, \r\n  title = \"Patient Timeline\",\r\n  data = sampleVerticalTimelineData,\r\n  onNodeClick,\r\n  onNodeHover\r\n}) => {\r\n  const [isClosing, setIsClosing] = useState(false);\r\n\r\n  const handleClose = useCallback(() => {\r\n    if (isClosing) return;\r\n    setIsClosing(true);\r\n    \r\n    // Allow animation to complete before calling onClose\r\n    setTimeout(() => {\r\n      setIsClosing(false);\r\n      onClose();\r\n    }, 200);\r\n  }, [onClose, isClosing]);\r\n\r\n  const handleNodeClick = useCallback((node) => {\r\n    console.log('Timeline node clicked:', node);\r\n    onNodeClick?.(node);\r\n  }, [onNodeClick]);\r\n\r\n  const handleNodeHover = useCallback((node, isHovering) => {\r\n    console.log('Timeline node hover:', node.id, isHovering);\r\n    onNodeHover?.(node, isHovering);\r\n  }, [onNodeHover]);\r\n\r\n  if (!isOpen) return null;\r\n\r\n  return (\r\n    <AnimatePresence mode=\"wait\" onExitComplete={() => {\r\n      setIsClosing(false);\r\n    }}>\r\n      {isOpen && (\r\n        <motion.div\r\n          key=\"timeline-modal-backdrop\"\r\n          initial=\"hidden\"\r\n          animate=\"visible\"\r\n          exit=\"exit\"\r\n          variants={backdropVariants}\r\n          className=\"fixed inset-0 bg-black flex items-center justify-center z-50 p-4\"\r\n          style={{ \r\n            willChange: 'backdrop-filter, opacity',\r\n            backfaceVisibility: 'hidden',\r\n            transform: 'translate3d(0, 0, 0)'\r\n          }}\r\n          onClick={(e) => e.target === e.currentTarget && handleClose()}\r\n        >\r\n          <motion.div\r\n            key=\"timeline-modal-content\"\r\n            initial=\"hidden\"\r\n            animate=\"visible\"\r\n            exit=\"exit\"\r\n            variants={modalVariants}\r\n            className=\"bg-white rounded-2xl shadow-2xl w-full max-w-6xl max-h-[90vh] overflow-hidden\"\r\n            style={{ \r\n              willChange: 'transform, opacity, scale',\r\n              backfaceVisibility: 'hidden'\r\n            }}\r\n            onClick={(e) => e.stopPropagation()}\r\n          >\r\n            {/* Modal Header */}\r\n            <div className=\"bg-gradient-to-r from-blue-50 to-indigo-50 border-b border-gray-200 p-6\">\r\n              <div className=\"flex items-center justify-between\">\r\n                <div className=\"flex items-center space-x-3\">\r\n                  <div className=\"p-2 bg-blue-100 rounded-lg\">\r\n                    <Clock className=\"h-6 w-6 text-blue-600\" />\r\n                  </div>\r\n                  <div>\r\n                    <h2 className=\"text-2xl font-bold text-gray-900\">{title}</h2>\r\n                    <p className=\"text-sm text-gray-600 mt-1\">\r\n                      Interactive patient timeline with drag-and-drop nodes\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n                \r\n                <div className=\"flex items-center space-x-3\">\r\n                  <div className=\"flex items-center space-x-2 text-sm text-gray-500\">\r\n                    <Users className=\"h-4 w-4\" />\r\n                    <span>{data.length} nodes</span>\r\n                  </div>\r\n                  <div className=\"flex items-center space-x-2 text-sm text-gray-500\">\r\n                    <Activity className=\"h-4 w-4\" />\r\n                    <span>Interactive</span>\r\n                  </div>\r\n                  <motion.button\r\n                    onClick={handleClose}\r\n                    className=\"p-2 hover:bg-gray-100 rounded-lg transition-colors\"\r\n                    whileHover={{ scale: 1.1 }}\r\n                    whileTap={{ scale: 0.9 }}\r\n                  >\r\n                    <X className=\"h-5 w-5 text-gray-500\" />\r\n                  </motion.button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            {/* Modal Content - Timeline Container */}\r\n            <div className=\"relative\" style={{ height: 'calc(90vh - 120px)' }}>\r\n              <VerticalTimeline\r\n                data={data}\r\n                onNodeClick={handleNodeClick}\r\n                onNodeHover={handleNodeHover}\r\n              />\r\n            </div>\r\n\r\n            {/* Modal Footer with Instructions */}\r\n            <div className=\"bg-gray-50 border-t border-gray-200 px-6 py-4\">\r\n              <div className=\"flex items-center justify-between\">\r\n                <div className=\"text-sm text-gray-600\">\r\n                  <span className=\"font-medium\">Instructions:</span> Drag nodes to reposition • Hover for details • Click to edit\r\n                </div>\r\n                <div className=\"text-xs text-gray-500\">\r\n                  Timeline Modal • Interactive Mode\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </motion.div>\r\n        </motion.div>\r\n      )}\r\n    </AnimatePresence>\r\n  );\r\n};\r\n\r\nexport default TimelineModal;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { sampleVerticalTimelineData } from './sampleVerticalTimelineData';\r\nimport SimpleGSAPTest from './SimpleGSAPTest';\r\nimport TimelineModal from '../TimelineModal';\r\n\r\nconst TimelineTestPage = () => {\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [showSimpleTest, setShowSimpleTest] = useState(false);\r\n  const [showTimelineModal, setShowTimelineModal] = useState(false);\r\n\r\n  useEffect(() => {\r\n    // Simulate loading data\r\n    const timer = setTimeout(() => {\r\n      setIsLoading(false);\r\n    }, 500);\r\n\r\n    return () => clearTimeout(timer);\r\n  }, []);\r\n\r\n  const handleNodeClick = (node) => {\r\n    console.log('Node clicked:', node);\r\n  };\r\n\r\n  const handleNodeHover = (node, isHovering) => {\r\n    console.log('Node hover:', node.id, isHovering);\r\n  };\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <div className=\"flex items-center justify-center min-h-screen bg-gray-100\">\r\n        <div className=\"text-lg text-gray-600\">Loading timeline test...</div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-100\">\r\n      <div className=\"container mx-auto px-4 py-8\">\r\n        <div className=\"mb-8\">\r\n          <h1 className=\"text-3xl font-bold text-gray-800 mb-2\">\r\n            Interactive Patient Timeline\r\n          </h1>\r\n          <p className=\"text-gray-600\">\r\n            Test timeline components in modal and standalone formats\r\n          </p>\r\n          <div className=\"mt-4 space-x-4\">\r\n            <button \r\n              onClick={() => setShowTimelineModal(true)}\r\n              className=\"px-6 py-3 bg-blue-500 text-white rounded-lg hover:bg-blue-600 shadow-md hover:shadow-lg transition-all duration-200\"\r\n            >\r\n              Open Timeline Modal\r\n            </button>\r\n            <button \r\n              onClick={() => setShowSimpleTest(!showSimpleTest)}\r\n              className=\"px-4 py-2 bg-gray-500 text-white rounded hover:bg-gray-600\"\r\n            >\r\n              {showSimpleTest ? 'Hide Simple GSAP Test' : 'Show Simple GSAP Test'}\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        {showSimpleTest && (\r\n          <div className=\"bg-white rounded-lg shadow-lg p-6 mb-8\">\r\n            <h2 className=\"text-xl font-semibold mb-4\">Simple GSAP Test</h2>\r\n            <SimpleGSAPTest />\r\n          </div>\r\n        )}\r\n\r\n        <div className=\"bg-white rounded-lg shadow p-6\">\r\n          <h2 className=\"text-xl font-semibold mb-4\">Timeline Features</h2>\r\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n            <div className=\"space-y-2\">\r\n              <h3 className=\"font-semibold text-gray-800\">Modal Interface</h3>\r\n              <ul className=\"text-sm text-gray-600 space-y-1\">\r\n                <li>• Timeline contained within a professional modal</li>\r\n                <li>• Matches existing mind map modal styling</li>\r\n                <li>• Proper backdrop blur and animations</li>\r\n                <li>• Responsive sizing with scroll containment</li>\r\n              </ul>\r\n            </div>\r\n            <div className=\"space-y-2\">\r\n              <h3 className=\"font-semibold text-gray-800\">Interaction</h3>\r\n              <ul className=\"text-sm text-gray-600 space-y-1\">\r\n                <li>• Drag nodes with instant 1:1 mouse tracking</li>\r\n                <li>• Hover over nodes to see patient/clinical cards</li>\r\n                <li>• Click nodes to edit both cards simultaneously</li>\r\n                <li>• Add new nodes with smooth animations</li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Timeline Modal */}\r\n      <TimelineModal\r\n        isOpen={showTimelineModal}\r\n        onClose={() => setShowTimelineModal(false)}\r\n        title=\"Patient Timeline - Interactive Mode\"\r\n        data={sampleVerticalTimelineData}\r\n        onNodeClick={handleNodeClick}\r\n        onNodeHover={handleNodeHover}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TimelineTestPage;\r\n","// Lazy loading component wrapper for performance optimization\nimport React, { Suspense, lazy } from 'react';\nimport { Loader2 } from 'lucide-react';\n\n// Loading fallback component\nconst LoadingSpinner = ({ message = \"Loading...\" }) => (\n  <div className=\"flex items-center justify-center p-8\">\n    <div className=\"flex flex-col items-center gap-2\">\n      <Loader2 className=\"w-6 h-6 animate-spin text-blue-600\" />\n      <span className=\"text-sm text-gray-600\">{message}</span>\n    </div>\n  </div>\n);\n\n// Lazy load components that aren't needed immediately\nexport const LazyRichTextEditor = lazy(() => import('./RichTextEditor'));\nexport const LazyTemplateManager = lazy(() => import('./TemplateManager'));\nexport const LazyLiteratureModal = lazy(() => import('./LiteratureModal'));\n\n// Lazy load modals for better initial load performance\nexport const LazyCaseModal = lazy(() => import('./CaseModal'));\nexport const LazyTopicModal = lazy(() => import('./TopicModal'));\nexport const LazyTaskModal = lazy(() => import('./TaskModal'));\n\n// HOC for wrapping lazy components with suspense\nexport const withLazyLoading = (LazyComponent, fallbackMessage) => (props) => (\n  <Suspense fallback={<LoadingSpinner message={fallbackMessage} />}>\n    <LazyComponent {...props} />\n  </Suspense>\n);\n\n// Pre-wrapped components ready to use\nexport const RichTextEditor = withLazyLoading(LazyRichTextEditor, \"Loading editor...\");\nexport const TemplateManager = withLazyLoading(LazyTemplateManager, \"Loading templates...\");\nexport const LiteratureModal = withLazyLoading(LazyLiteratureModal, \"Loading literature viewer...\");\n\n// Pre-wrapped modal components\nexport const CaseModal = withLazyLoading(LazyCaseModal, \"Loading case details...\");\nexport const TopicModal = withLazyLoading(LazyTopicModal, \"Loading topic details...\");\nexport const TaskModal = withLazyLoading(LazyTaskModal, \"Loading task details...\");\n","// Floating Edge Utilities for React Flow\n// Calculates intersection points between nodes for custom floating edges\n\n/**\n * Calculate the intersection point of a line with a rectangle\n * @param {Object} rect - Rectangle with x, y, width, height\n * @param {Object} center - Center point with x, y\n * @param {Object} point - External point with x, y\n * @returns {Object} Intersection point with x, y coordinates\n */\nfunction getIntersectionPoint(rect, center, point) {\n  const { x: rectX, y: rectY, width, height } = rect;\n  const { x: centerX, y: centerY } = center;\n  const { x: pointX, y: pointY } = point;\n\n  // Calculate rectangle bounds - no buffer as we want exact edges\n  const left = rectX;\n  const right = rectX + width;\n  const top = rectY;\n  const bottom = rectY + height;\n\n  // Direction vector from center to point\n  const dx = pointX - centerX;\n  const dy = pointY - centerY;\n\n  // Handle edge cases where the line is vertical or horizontal\n  if (Math.abs(dx) < 0.001) {\n    // Vertical line\n    return {\n      x: centerX,\n      y: dy > 0 ? bottom : top,\n      side: dy > 0 ? 'bottom' : 'top'\n    };\n  }\n\n  if (Math.abs(dy) < 0.001) {\n    // Horizontal line\n    return {\n      x: dx > 0 ? right : left,\n      y: centerY,\n      side: dx > 0 ? 'right' : 'left'\n    };\n  }\n\n  // Calculate slope and y-intercept\n  const slope = dy / dx;\n  const yIntercept = centerY - slope * centerX;\n\n  // Calculate intersection points with all four sides\n  const intersections = [];\n\n  // Left side (x = left)\n  const leftY = slope * left + yIntercept;\n  if (leftY >= top && leftY <= bottom) {\n    intersections.push({ x: left, y: leftY, side: 'left', distance: Math.hypot(left - centerX, leftY - centerY) });\n  }\n\n  // Right side (x = right)\n  const rightY = slope * right + yIntercept;\n  if (rightY >= top && rightY <= bottom) {\n    intersections.push({ x: right, y: rightY, side: 'right', distance: Math.hypot(right - centerX, rightY - centerY) });\n  }\n\n  // Top side (y = top)\n  const topX = (top - yIntercept) / slope;\n  if (topX >= left && topX <= right) {\n    intersections.push({ x: topX, y: top, side: 'top', distance: Math.hypot(topX - centerX, top - centerY) });\n  }\n\n  // Bottom side (y = bottom)\n  const bottomX = (bottom - yIntercept) / slope;\n  if (bottomX >= left && bottomX <= right) {\n    intersections.push({ x: bottomX, y: bottom, side: 'bottom', distance: Math.hypot(bottomX - centerX, bottom - centerY) });\n  }\n\n  // Find the intersection point that's in the correct direction\n  // and is closest to the center (to avoid picking the wrong side)\n  const validIntersections = intersections.filter(intersection => {\n    const intersectionDx = intersection.x - centerX;\n    const intersectionDy = intersection.y - centerY;\n    \n    // Check if the intersection is in the same direction as the target point\n    return (\n      (dx > 0 && intersectionDx >= 0) || (dx < 0 && intersectionDx <= 0)\n    ) && (\n      (dy > 0 && intersectionDy >= 0) || (dy < 0 && intersectionDy <= 0)\n    );\n  });\n\n  // Sort by distance and take the closest valid intersection\n  validIntersections.sort((a, b) => a.distance - b.distance);\n  return validIntersections[0] || { x: centerX, y: centerY, side: 'center' };\n}\n\n/**\n * Calculate the floating edge path between two nodes\n * @param {Object} sourceNode - Source node with position and measured dimensions\n * @param {Object} targetNode - Target node with position and measured dimensions\n * @param {Object} options - Optional configuration\n * @returns {Object} Edge path data with sourceX, sourceY, targetX, targetY\n */\nexport function getFloatingEdgePath(sourceNode, targetNode, options = {}) {\n  const {\n    sourcePosition = { x: 0, y: 0 },\n    targetPosition = { x: 0, y: 0 },\n    sourceWidth = 200,\n    sourceHeight = 100,\n    targetWidth = 200,\n    targetHeight = 100,\n    // Direct coordinates from React Flow (fallback)\n    sourceX,\n    sourceY,\n    targetX,\n    targetY,\n    offset = 0 // Default to zero offset to ensure edges connect to borders\n  } = options;\n  \n  // Use direct coordinates if provided and dimensions appear invalid\n  if (sourceX !== undefined && sourceY !== undefined && \n      targetX !== undefined && targetY !== undefined &&\n      (sourceWidth <= 10 || targetWidth <= 10)) {\n    return {\n      sourceX, \n      sourceY, \n      targetX, \n      targetY,\n      sourceSide: 'direct',\n      targetSide: 'direct'\n    };\n  }\n\n  // Calculate node centers\n  const sourceCenter = {\n    x: sourcePosition.x + sourceWidth / 2,\n    y: sourcePosition.y + sourceHeight / 2\n  };\n\n  const targetCenter = {\n    x: targetPosition.x + targetWidth / 2,\n    y: targetPosition.y + targetHeight / 2\n  };\n\n  // Create rectangle objects for intersection calculation\n  const sourceRect = {\n    x: sourcePosition.x,\n    y: sourcePosition.y,\n    width: sourceWidth,\n    height: sourceHeight\n  };\n\n  const targetRect = {\n    x: targetPosition.x,\n    y: targetPosition.y,\n    width: targetWidth,\n    height: targetHeight\n  };\n\n  // Calculate intersection points\n  const sourceIntersection = getIntersectionPoint(sourceRect, sourceCenter, targetCenter);\n  const targetIntersection = getIntersectionPoint(targetRect, targetCenter, sourceCenter);\n\n  // Calculate vector from source to target center\n  const dx = targetCenter.x - sourceCenter.x;\n  const dy = targetCenter.y - sourceCenter.y;\n  const distance = Math.sqrt(dx * dx + dy * dy);\n\n  // Add a stronger extension to ensure visual connection with the node borders\n  // This is done by extending the line in both directions\n  if (distance > 0) {\n    const unitX = dx / distance;\n    const unitY = dy / distance;\n    \n    // Extend lines by 3 pixels to ensure visual connection\n    // Using a larger value for more reliability across different node types\n    const extensionAmount = 3;\n\n    // Extend the line outward from the source node\n    sourceIntersection.x -= unitX * extensionAmount;\n    sourceIntersection.y -= unitY * extensionAmount;\n    \n    // Extend the line outward from the target node\n    targetIntersection.x += unitX * extensionAmount;\n    targetIntersection.y += unitY * extensionAmount;\n    \n    // Apply additional offset if needed\n    if (offset > 0) {\n      sourceIntersection.x += unitX * offset;\n      sourceIntersection.y += unitY * offset;\n      targetIntersection.x -= unitX * offset;\n      targetIntersection.y -= unitY * offset;\n    }\n  }\n\n  // Debug flag to help diagnose intersection issues\n  const debug = options.debug || false;\n  if (debug) {\n    console.log('Source Node:', sourceNode);\n    console.log('Target Node:', targetNode);\n    console.log('Source Intersection:', sourceIntersection);\n    console.log('Target Intersection:', targetIntersection);\n  }\n\n  return {\n    sourceX: sourceIntersection.x,\n    sourceY: sourceIntersection.y,\n    targetX: targetIntersection.x,\n    targetY: targetIntersection.y,\n    sourceSide: sourceIntersection.side,\n    targetSide: targetIntersection.side\n  };\n}\n\n/**\n * Generate SVG path string for a bezier curve between two points\n * @param {number} sourceX - Source X coordinate\n * @param {number} sourceY - Source Y coordinate\n * @param {number} targetX - Target X coordinate\n * @param {number} targetY - Target Y coordinate\n * @param {number} curvature - Curve intensity (0-1)\n * @returns {string} SVG path string\n */\nexport function getBezierPath(sourceX, sourceY, targetX, targetY, curvature = 0.25) {\n  const dx = targetX - sourceX;\n  const dy = targetY - sourceY;\n  \n  // Calculate control points for a smooth bezier curve\n  const controlOffset = Math.sqrt(dx * dx + dy * dy) * curvature;\n  \n  const controlX1 = sourceX + dx * 0.5 + dy * controlOffset * 0.5;\n  const controlY1 = sourceY + dy * 0.5 - dx * controlOffset * 0.5;\n  \n  const controlX2 = sourceX + dx * 0.5 - dy * controlOffset * 0.5;\n  const controlY2 = sourceY + dy * 0.5 + dx * controlOffset * 0.5;\n  \n  return `M ${sourceX},${sourceY} C ${controlX1},${controlY1} ${controlX2},${controlY2} ${targetX},${targetY}`;\n}\n\n/**\n * Calculate the center point of an edge path\n * @param {number} sourceX - Source X coordinate\n * @param {number} sourceY - Source Y coordinate\n * @param {number} targetX - Target X coordinate\n * @param {number} targetY - Target Y coordinate\n * @returns {Object} Center point with x, y coordinates\n */\nexport function getEdgeCenter(sourceX, sourceY, targetX, targetY) {\n  return {\n    x: (sourceX + targetX) / 2,\n    y: (sourceY + targetY) / 2\n  };\n}\n\n/**\n * Calculate marker end position for arrow heads\n * @param {number} sourceX - Source X coordinate\n * @param {number} sourceY - Source Y coordinate\n * @param {number} targetX - Target X coordinate\n * @param {number} targetY - Target Y coordinate\n * @returns {string} Transform string for marker positioning\n */\nexport function getMarkerEnd(sourceX, sourceY, targetX, targetY) {\n  const dx = targetX - sourceX;\n  const dy = targetY - sourceY;\n  const angle = Math.atan2(dy, dx) * (180 / Math.PI);\n  \n  return `url(#arrowhead) rotate(${angle} ${targetX} ${targetY})`;\n}\n","import React, { memo, useMemo, useEffect } from 'react';\nimport { BaseEdge, useReactFlow } from '@xyflow/react';\nimport { getFloatingEdgePath } from '../utils/floatingEdgeUtils';\n\n/**\n * High-Performance Floating Edge Component\n * \n * This is an optimized edge component that calculates intersection points\n * between nodes and renders a direct straight line between them. It's \n * specifically designed for immediate visual feedback during node dragging.\n * \n * Features:\n * - Direct path calculation using geometry\n * - Memoized path computation for performance\n * - No transition delays or animations\n * - Minimal re-rendering\n */\nconst FloatingEdge = memo(({\n  id,\n  source,\n  target,\n  sourceX,\n  sourceY,\n  targetX,\n  targetY,\n  sourcePosition,\n  targetPosition,\n  style = {},\n  markerEnd,\n  markerStart,\n  data,\n  ...props\n}) => {\n  const { getNode } = useReactFlow();\n  \n  // Safely get nodes outside of useMemo to avoid scope issues\n  let sourceNode, targetNode;\n  try {\n    sourceNode = getNode(source);\n    targetNode = getNode(target);\n  } catch (error) {\n    // Nodes not available, will use fallback\n    sourceNode = null;\n    targetNode = null;\n  }\n  \n  // Memoize the edge path calculation for better performance\n  const { edgePath, labelX, labelY } = useMemo(() => {\n    // During animations or rapid updates, use simple direct paths\n    if (data?.__isAnimating || data?.__forceUpdate) {\n      return {\n        edgePath: `M${sourceX},${sourceY} L${targetX},${targetY}`,\n        labelX: (sourceX + targetX) / 2,\n        labelY: (sourceY + targetY) / 2\n      };\n    }\n\n    // Default fallback if nodes aren't available\n    if (!sourceNode || !targetNode) {\n      return {\n        edgePath: `M${sourceX},${sourceY} L${targetX},${targetY}`,\n        labelX: (sourceX + targetX) / 2,\n        labelY: (sourceY + targetY) / 2\n      };\n    }\n\n    try {\n      // Safely check if we have enough information to calculate an accurate path\n      const sourceHasDimensions = Boolean(\n        sourceNode.width || \n        sourceNode.dimensions?.width || \n        sourceNode.data?.width || \n        sourceNode.style?.width\n      );\n      \n      const targetHasDimensions = Boolean(\n        targetNode.width || \n        targetNode.dimensions?.width || \n        targetNode.data?.width || \n        targetNode.style?.width\n      );\n      \n      // If we don't have dimensions, use the provided coordinates directly\n      if (!sourceHasDimensions || !targetHasDimensions) {\n        return {\n          edgePath: `M${sourceX},${sourceY} L${targetX},${targetY}`,\n          labelX: (sourceX + targetX) / 2,\n          labelY: (sourceY + targetY) / 2\n        };\n      }\n\n      // Safe dimension extraction with fallbacks\n      const getNodeDimensions = (node) => {\n        const defaultWidth = node.type === 'topic' ? 180 : 200;\n        const defaultHeight = node.type === 'topic' ? 50 : 100;\n        \n        return {\n          width: node.width || \n                 node.dimensions?.width || \n                 node.data?.width || \n                 defaultWidth,\n          height: node.height || \n                  node.dimensions?.height || \n                  node.data?.height || \n                  defaultHeight\n        };\n      };\n      \n      const sourceDims = getNodeDimensions(sourceNode);\n      const targetDims = getNodeDimensions(targetNode);\n\n      // Calculate floating edge with proper intersections\n      const floatingEdgeData = getFloatingEdgePath(\n        sourceNode,\n        targetNode,\n        {\n          // Use React Flow's sourceX/Y and targetX/Y if available\n          sourcePosition: {\n            x: sourceNode.positionAbsolute?.x || sourceNode.position.x,\n            y: sourceNode.positionAbsolute?.y || sourceNode.position.y\n          },\n          targetPosition: {\n            x: targetNode.positionAbsolute?.x || targetNode.position.x,\n            y: targetNode.positionAbsolute?.y || targetNode.position.y\n          },\n          // Fallback coordinates - use the direct ones provided by React Flow\n          sourceX: sourceX,\n          sourceY: sourceY,\n          targetX: targetX,\n          targetY: targetY,\n          sourceWidth: sourceDims.width,\n          sourceHeight: sourceDims.height,\n          targetWidth: targetDims.width,\n          targetHeight: targetDims.height,\n          debug: false // Set to true to debug connection issues\n        }\n      );\n\n      const { \n        sourceX: sx, \n        sourceY: sy, \n        targetX: tx, \n        targetY: ty \n      } = floatingEdgeData;\n      \n      // Return direct line path\n      return {\n        edgePath: `M ${sx},${sy} L ${tx},${ty}`,\n        labelX: (sx + tx) / 2,\n        labelY: (sy + ty) / 2\n      };\n    } catch (error) {\n      console.warn('FloatingEdge calculation error:', error);\n      return {\n        edgePath: `M${sourceX},${sourceY} L${targetX},${targetY}`,\n        labelX: (sourceX + targetX) / 2,\n        labelY: (sourceY + targetY) / 2\n      };\n    }\n  }, [\n    source,\n    target,\n    sourceX, \n    sourceY, \n    targetX, \n    targetY,\n    data?.__forceUpdate,\n    data?.__isAnimating,\n    // Safe node dimension tracking\n    sourceNode?.id,\n    targetNode?.id,\n    sourceNode?.width,\n    sourceNode?.height,\n    targetNode?.width,\n    targetNode?.height\n  ]);\n\n  // Determine connection type based on source and target node types\n  const getEdgeStyle = (sourceNode, targetNode) => {\n    // Default style\n    const defaultStyle = {\n      stroke: '#64748b',\n      strokeWidth: 3,\n      strokeLinecap: 'round',\n      strokeOpacity: 0.95,\n      filter: 'drop-shadow(0 1px 2px rgba(0,0,0,0.1))',\n      transition: 'none',\n    };\n\n    if (!sourceNode || !targetNode) return defaultStyle;\n\n    // Connection types based on node types\n    const sourceType = sourceNode.type;\n    const targetType = targetNode.type;\n\n    // Case-to-Topic connection (blue to purple gradient)\n    if (sourceType === 'case' && targetType === 'topic') {\n      return {\n        ...defaultStyle,\n        stroke: 'url(#case-to-topic-gradient)',\n        strokeWidth: 3.5,\n        strokeDasharray: '', // Solid line\n      };\n    }\n\n    // Topic-to-Literature connection (purple to pink gradient)\n    if (sourceType === 'topic' && targetType === 'literature') {\n      return {\n        ...defaultStyle,\n        stroke: 'url(#topic-to-literature-gradient)',\n        strokeWidth: 3,\n        strokeDasharray: '', // Solid line\n      };\n    }\n\n    // Topic-to-Task connection (purple to amber gradient)\n    if (sourceType === 'topic' && targetType === 'task') {\n      return {\n        ...defaultStyle,\n        stroke: 'url(#topic-to-task-gradient)',\n        strokeWidth: 3,\n        strokeDasharray: '8,4', // Dashed line for tasks\n      };\n    }\n\n    // Add more custom connections as needed\n    \n    return {\n      ...defaultStyle,\n      ...style\n    };\n  };\n\n  // Get custom edge styling based on connection type\n  const edgeStyle = getEdgeStyle(sourceNode, targetNode);\n\n  return (\n    <>\n      {/* SVG gradient definitions for edge styling */}\n      <defs>\n        <linearGradient id=\"case-to-topic-gradient\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"0%\">\n          <stop offset=\"0%\" stopColor=\"#3b82f6\" />\n          <stop offset=\"100%\" stopColor=\"#8b5cf6\" />\n        </linearGradient>\n        <linearGradient id=\"topic-to-literature-gradient\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"0%\">\n          <stop offset=\"0%\" stopColor=\"#8b5cf6\" />\n          <stop offset=\"100%\" stopColor=\"#d946ef\" />\n        </linearGradient>\n        <linearGradient id=\"topic-to-task-gradient\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"0%\">\n          <stop offset=\"0%\" stopColor=\"#8b5cf6\" />\n          <stop offset=\"100%\" stopColor=\"#f59e0b\" />\n        </linearGradient>\n      </defs>\n      \n      {/* Glow effect for selected edges */}\n      {selected && (\n        <BaseEdge\n          path={edgePath}\n          style={{\n            stroke: 'rgba(255, 255, 255, 0.6)',\n            strokeWidth: 8,\n            strokeLinecap: 'round',\n            strokeOpacity: 0.5,\n            filter: 'blur(4px)',\n            transition: 'none',\n          }}\n        />\n      )}\n      \n      <BaseEdge\n        id={id}\n        path={edgePath}\n        labelX={labelX}\n        labelY={labelY}\n        style={edgeStyle}\n        markerEnd={markerEnd}\n        markerStart={markerStart}\n      />\n    </>\n  );\n}, (prevProps, nextProps) => {\n  // Optimize re-rendering with precise dependency checking\n  return (\n    prevProps.sourceX === nextProps.sourceX &&\n    prevProps.sourceY === nextProps.sourceY &&\n    prevProps.targetX === nextProps.targetX &&\n    prevProps.targetY === nextProps.targetY &&\n    prevProps.source === nextProps.source &&\n    prevProps.target === nextProps.target &&\n    prevProps.data?.__forceUpdate === nextProps.data?.__forceUpdate\n  );\n});\n\nexport default FloatingEdge;\n\n\n","import React, { memo } from 'react';\nimport { BaseEdge, getBezierPath, EdgeLabelRenderer } from '@xyflow/react';\n\n/**\n * Enhanced Edge Component with Label Support\n * \n * This edge component supports labels and uses proper prop destructuring\n * to prevent React Flow-specific props from reaching DOM elements.\n */\nconst EnhancedEdge = memo(({\n  id,\n  source,\n  target,\n  sourceX,\n  sourceY,\n  targetX,\n  targetY,\n  sourcePosition,\n  targetPosition,\n  style = {},\n  markerEnd,\n  markerStart,\n  label,\n  // Destructure React Flow-specific props to prevent them from reaching DOM\n  sourceHandleId,\n  targetHandleId,\n  data,\n  selected,\n  animated,\n  // Don't pass any other props to BaseEdge\n}) => {\n  const [edgePath, labelX, labelY] = getBezierPath({\n    sourceX,\n    sourceY,\n    sourcePosition,\n    targetX,\n    targetY,\n    targetPosition,\n  });\n\n  // Determine connection type based on source and target node types\n  const getEdgeStyle = (sourceType, targetType, isSelected) => {\n    // Default style\n    const defaultStyle = {\n      stroke: '#64748b',\n      strokeWidth: 3,\n      strokeLinecap: 'round',\n      strokeOpacity: 0.95,\n      filter: 'drop-shadow(0 1px 2px rgba(0,0,0,0.1))',\n    };\n\n    // Connection types based on node types\n    const sourceNodeType = sourceType?.split('_')[0] || '';\n    const targetNodeType = targetType?.split('_')[0] || '';\n\n    // Case-to-Topic connection (blue to purple gradient)\n    if (sourceNodeType === 'case' && targetNodeType === 'topic') {\n      return {\n        ...defaultStyle,\n        stroke: 'url(#case-to-topic-gradient)',\n        strokeWidth: 3.5,\n        strokeDasharray: '',\n      };\n    }\n\n    // Topic-to-Literature connection (purple to pink gradient)\n    if (sourceNodeType === 'topic' && targetNodeType === 'literature') {\n      return {\n        ...defaultStyle,\n        stroke: 'url(#topic-to-literature-gradient)',\n        strokeWidth: 3,\n        strokeDasharray: '',\n      };\n    }\n\n    // Topic-to-Task connection (purple to amber gradient)\n    if (sourceNodeType === 'topic' && targetNodeType === 'task') {\n      return {\n        ...defaultStyle,\n        stroke: 'url(#topic-to-task-gradient)',\n        strokeWidth: 3,\n        strokeDasharray: '8,4',\n      };\n    }\n\n    return {\n      ...defaultStyle,\n      ...(isSelected ? { strokeWidth: 4, filter: 'drop-shadow(0 2px 4px rgba(0,0,0,0.2))' } : {}),\n      ...style\n    };\n  };\n\n  return (\n    <>\n      {/* SVG gradient definitions for edge styling */}\n      <defs>\n        <linearGradient id=\"case-to-topic-gradient\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"0%\">\n          <stop offset=\"0%\" stopColor=\"#3b82f6\" />\n          <stop offset=\"100%\" stopColor=\"#8b5cf6\" />\n        </linearGradient>\n        <linearGradient id=\"topic-to-literature-gradient\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"0%\">\n          <stop offset=\"0%\" stopColor=\"#8b5cf6\" />\n          <stop offset=\"100%\" stopColor=\"#d946ef\" />\n        </linearGradient>\n        <linearGradient id=\"topic-to-task-gradient\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"0%\">\n          <stop offset=\"0%\" stopColor=\"#8b5cf6\" />\n          <stop offset=\"100%\" stopColor=\"#f59e0b\" />\n        </linearGradient>\n      </defs>\n      \n      {/* Glow effect for selected edges */}\n      {selected && (\n        <BaseEdge\n          path={edgePath}\n          style={{\n            stroke: 'rgba(255, 255, 255, 0.6)',\n            strokeWidth: 8,\n            strokeLinecap: 'round',\n            strokeOpacity: 0.5,\n            filter: 'blur(4px)',\n          }}\n        />\n      )}\n      \n      <BaseEdge\n        id={id}\n        path={edgePath}\n        style={getEdgeStyle(source, target, selected)}\n        markerEnd={markerEnd}\n        markerStart={markerStart}\n      />\n      \n      {label && (\n        <EdgeLabelRenderer>\n          <div\n            style={{\n              position: 'absolute',\n              transform: `translate(-50%, -50%) translate(${labelX}px,${labelY}px)`,\n              fontSize: 12,\n              pointerEvents: 'all',\n              backdropFilter: 'blur(4px)',\n              transition: 'all 0.3s ease',\n            }}\n            className={`nodrag nopan px-2.5 py-1 rounded-full shadow-md text-xs font-medium\n              ${selected ? 'bg-indigo-100 text-indigo-700 ring-2 ring-indigo-200' : 'bg-white/90 text-gray-700'}`}\n          >\n            {label}\n          </div>\n        </EdgeLabelRenderer>\n      )}\n    </>\n  );\n});\n\nEnhancedEdge.displayName = 'EnhancedEdge';\n\nexport default EnhancedEdge;\n","import React from 'react';\n\n/**\n * Custom connection line component for React Flow.\n * Shows a preview of the connection as the user drags to create a new edge.\n * Styled to match our floating edge appearance but with enhanced visual feedback.\n */\nconst ConnectionLine = ({\n  fromX,\n  fromY,\n  toX,\n  toY,\n  connectionLineStyle,\n}) => {\n  // Create a straight path from source to target\n  const path = `M ${fromX},${fromY} L ${toX},${toY}`;\n  \n  // Apply our custom styling combined with any passed styling\n  const defaultStyle = {\n    stroke: '#3b82f6', // Bright blue for visibility\n    strokeWidth: 3.5,\n    strokeLinecap: 'round',\n    strokeDasharray: '5,3', \n    filter: 'drop-shadow(0 0 6px rgba(59, 130, 246, 0.6))',\n    animation: 'flowingDash 1s linear infinite',\n  };\n\n  // Merge the default style with any props passed in\n  const style = { ...defaultStyle, ...connectionLineStyle };\n\n  return (\n    <g>\n      {/* Main visible connection line */}\n      <path\n        d={path}\n        fill=\"none\"\n        style={style}\n      />\n      \n      {/* Larger invisible path for easier interaction */}\n      <path\n        d={path}\n        fill=\"none\"\n        stroke=\"transparent\"\n        strokeWidth={15}\n        style={{ pointerEvents: 'stroke' }}\n      />\n    </g>\n  );\n};\n\nexport default ConnectionLine;\n","// Optimized loading screen component\nimport React from 'react';\nimport { Loader2, Brain, Sparkles } from 'lucide-react';\n\nconst OptimizedLoadingScreen = ({ message = \"Loading your mind map...\", progress = null }) => {\n  return (\n    <div className=\"fixed inset-0 bg-gradient-to-br from-blue-50 to-purple-50 flex items-center justify-center z-50\">\n      <div className=\"text-center\">\n        {/* Animated brain icon */}\n        <div className=\"relative mb-6\">\n          <Brain className=\"w-16 h-16 text-blue-600 mx-auto animate-pulse\" />\n          <Sparkles className=\"w-6 h-6 text-purple-500 absolute -top-2 -right-2 animate-bounce\" />\n        </div>\n        \n        {/* Loading spinner */}\n        <div className=\"flex items-center justify-center gap-3 mb-4\">\n          <Loader2 className=\"w-6 h-6 animate-spin text-blue-600\" />\n          <span className=\"text-lg font-medium text-gray-700\">{message}</span>\n        </div>\n        \n        {/* Progress bar if provided */}\n        {progress !== null && (\n          <div className=\"w-64 bg-gray-200 rounded-full h-2 mx-auto mb-2\">\n            <div \n              className=\"bg-blue-600 h-2 rounded-full transition-all duration-300 ease-out\" \n              style={{ width: `${Math.max(0, Math.min(100, progress))}%` }}\n            />\n          </div>\n        )}\n        \n        {/* Helpful tips during loading */}\n        <div className=\"text-sm text-gray-500 max-w-md mx-auto mt-4\">\n          <p>💡 Tip: Use the force layout button to auto-arrange your nodes</p>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default OptimizedLoadingScreen;\n","import React, { useState, useEffect } from 'react';\nimport { Handle, Position } from '@xyflow/react';\nimport { Brain, Tag, Clock, X } from 'lucide-react';\n\nconst TopicNode = ({ data, selected }) => {\n  const [isVisible, setIsVisible] = useState(data.skipAnimation || false);\n  const [isHovered, setIsHovered] = useState(false);\n  \n  // Entry animation - only if not skipping animations\n  useEffect(() => {\n    if (!data.skipAnimation) {\n      const timer = setTimeout(() => setIsVisible(true), 100);\n      return () => clearTimeout(timer);\n    }\n  }, [data.skipAnimation]);\n\n  // Define a secondary color that's complementary to the main color\n  const getSecondaryColor = (primaryColor) => {\n    const colors = {\n      '#3B82F6': '#6366F1', // blue to indigo\n      '#10B981': '#059669', // emerald to green\n      '#8B5CF6': '#7C3AED', // violet to purple\n      '#EC4899': '#DB2777', // pink to rose\n      '#F59E0B': '#D97706', // amber to yellow\n      '#6B7280': '#4B5563', // gray to cool gray\n      '#EF4444': '#DC2626', // red to slightly darker red\n    };\n    \n    return colors[primaryColor] || '#6366F1'; // Default to indigo if no match\n  };\n\n  const completionPercentage = data.flashcard_count > 0\n    ? ((data.completed_flashcards || 0) / data.flashcard_count) * 100\n    : 0;\n    \n  const primaryColor = data.color || '#3B82F6';\n  const secondaryColor = getSecondaryColor(primaryColor);\n\n  return (\n    <div\n      className={`group transition-all duration-700 relative transform \n        ${selected ? 'scale-110' : isHovered ? 'scale-105' : 'scale-100'}\n        ${isVisible ? 'opacity-100 translate-y-0' : 'opacity-0 scale-75 translate-y-8'}`}\n      style={{\n        width: '160px',\n        height: '160px',\n        borderRadius: '50%',\n        background: `radial-gradient(circle at 30% 30%, ${primaryColor} 0%, ${secondaryColor} 100%)`,\n        color: 'white',\n        boxShadow: selected\n          ? `0 0 30px 5px ${primaryColor}80, 0 8px 32px rgba(0,0,0,0.4), inset 0 -3px 8px rgba(255,255,255,0.2)`\n          : isHovered\n            ? `0 10px 30px -5px ${primaryColor}60, 0 8px 16px rgba(0,0,0,0.2), inset 0 -3px 8px rgba(255,255,255,0.2)`\n            : `0 8px 25px -5px ${primaryColor}40, 0 4px 12px rgba(0,0,0,0.1), inset 0 -3px 8px rgba(255,255,255,0.1)`,\n        transition: 'all 0.7s cubic-bezier(0.34, 1.56, 0.64, 1), transform 0.3s ease, box-shadow 0.4s ease',\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center',\n        alignItems: 'center',\n        padding: '1rem',\n      }}\n      onMouseEnter={() => setIsHovered(true)}\n      onMouseLeave={() => setIsHovered(false)}\n    >\n      {/* Connection Hotspots - Circular handles for circular node */}\n      {/* Top handles with glow effect */}\n      <Handle\n        id=\"top\"\n        type=\"source\"\n        position={Position.Top}\n        className={`w-3 h-3 rounded-full transition-all duration-300 hover:scale-150 cursor-pointer \n          ${selected || isHovered ? 'opacity-100' : 'opacity-0'}`}\n        style={{\n          left: '50%',\n          transform: 'translateX(-50%) translateY(-50%)',\n          zIndex: 2,\n          border: '2px solid white',\n          background: primaryColor,\n          boxShadow: `0 0 10px 2px ${primaryColor}80`\n        }}\n        isConnectable={true}\n      />\n      <Handle\n        id=\"top\"\n        type=\"target\"\n        position={Position.Top}\n        className={`w-3 h-3 rounded-full transition-all duration-300 hover:scale-150 cursor-pointer \n          ${selected || isHovered ? 'opacity-100' : 'opacity-0'}`}\n        style={{\n          left: '50%',\n          transform: 'translateX(-50%) translateY(-50%)',\n          zIndex: 1,\n          border: '2px solid white',\n          background: secondaryColor,\n          boxShadow: `0 0 10px 2px ${secondaryColor}80`\n        }}\n        isConnectable={true}\n      />\n\n      {/* Right handles with glow effect */}\n      <Handle\n        id=\"right\"\n        type=\"source\"\n        position={Position.Right}\n        className={`w-3 h-3 rounded-full transition-all duration-300 hover:scale-150 cursor-pointer \n          ${selected || isHovered ? 'opacity-100' : 'opacity-0'}`}\n        style={{\n          top: '50%',\n          transform: 'translateY(-50%) translateX(50%)',\n          zIndex: 2,\n          border: '2px solid white',\n          background: primaryColor,\n          boxShadow: `0 0 10px 2px ${primaryColor}80`\n        }}\n        isConnectable={true}\n      />\n      <Handle\n        id=\"right\"\n        type=\"target\"\n        position={Position.Right}\n        className={`w-3 h-3 rounded-full transition-all duration-300 hover:scale-150 cursor-pointer \n          ${selected || isHovered ? 'opacity-100' : 'opacity-0'}`}\n        style={{\n          top: '50%',\n          transform: 'translateY(-50%) translateX(50%)',\n          zIndex: 1,\n          border: '2px solid white',\n          background: secondaryColor,\n          boxShadow: `0 0 10px 2px ${secondaryColor}80`\n        }}\n        isConnectable={true}\n      />\n\n      {/* Bottom handles with glow effect */}\n      <Handle\n        id=\"bottom\"\n        type=\"source\"\n        position={Position.Bottom}\n        className={`w-3 h-3 rounded-full transition-all duration-300 hover:scale-150 cursor-pointer \n          ${selected || isHovered ? 'opacity-100' : 'opacity-0'}`}\n        style={{\n          left: '50%',\n          transform: 'translateX(-50%) translateY(50%)',\n          zIndex: 2,\n          border: '2px solid white',\n          background: primaryColor,\n          boxShadow: `0 0 10px 2px ${primaryColor}80`\n        }}\n        isConnectable={true}\n      />\n      <Handle\n        id=\"bottom\"\n        type=\"target\"\n        position={Position.Bottom}\n        className={`w-3 h-3 rounded-full transition-all duration-300 hover:scale-150 cursor-pointer \n          ${selected || isHovered ? 'opacity-100' : 'opacity-0'}`}\n        style={{\n          left: '50%',\n          transform: 'translateX(-50%) translateY(50%)',\n          zIndex: 1,\n          border: '2px solid white',\n          background: secondaryColor,\n          boxShadow: `0 0 10px 2px ${secondaryColor}80`\n        }}\n        isConnectable={true}\n      />\n\n      {/* Left handles with glow effect */}\n      <Handle\n        id=\"left\"\n        type=\"source\"\n        position={Position.Left}\n        className={`w-3 h-3 rounded-full transition-all duration-300 hover:scale-150 cursor-pointer \n          ${selected || isHovered ? 'opacity-100' : 'opacity-0'}`}\n        style={{\n          top: '50%',\n          transform: 'translateY(-50%) translateX(-50%)',\n          zIndex: 2,\n          border: '2px solid white',\n          background: primaryColor,\n          boxShadow: `0 0 10px 2px ${primaryColor}80`\n        }}\n        isConnectable={true}\n      />\n      <Handle\n        id=\"left\"\n        type=\"target\"\n        position={Position.Left}\n        className={`w-3 h-3 rounded-full transition-all duration-300 hover:scale-150 cursor-pointer \n          ${selected || isHovered ? 'opacity-100' : 'opacity-0'}`}\n        style={{\n          top: '50%',\n          transform: 'translateY(-50%) translateX(-50%)',\n          zIndex: 1,\n          border: '2px solid white',\n          background: secondaryColor,\n          boxShadow: `0 0 10px 2px ${secondaryColor}80`\n        }}\n        isConnectable={true}\n      />\n      \n      {/* Selected/hover state ring effect */}\n      {(selected || isHovered) && (\n        <div \n          className={`absolute inset-0 rounded-full pointer-events-none ${selected ? 'animate-pulse-subtle' : ''}`}\n          style={{\n            boxShadow: `0 0 0 3px rgba(255, 255, 255, ${selected ? '0.5' : '0.3'})`,\n            animation: selected ? 'pulse 2s cubic-bezier(0.4, 0, 0.6, 1) infinite' : 'none',\n          }}\n        />\n      )}\n\n      {/* Priority indicator - enhanced positioning for circle */}\n      {data.priority && (\n        <div className=\"absolute -top-2 -right-2 z-10\">\n          <div className={`w-7 h-7 rounded-full flex items-center justify-center text-xs font-bold border-2 border-white shadow-lg ${\n              data.priority === 'high' ? 'bg-gradient-to-br from-red-400 to-red-600' :\n              data.priority === 'medium' ? 'bg-gradient-to-br from-amber-400 to-amber-600' : \n              'bg-gradient-to-br from-emerald-400 to-emerald-600'\n            }`}>\n            {data.priority === 'high' ? '!' : data.priority === 'medium' ? '•' : '✓'}\n          </div>\n        </div>\n      )}\n\n      {/* Brain icon at the top */}\n      <div className=\"mb-2 relative\">\n        <div className=\"p-2 rounded-full bg-white/20 shadow-inner mb-1\">\n          <Brain size={28} className=\"drop-shadow-lg\" />\n        </div>\n      </div>\n\n      {/* Main topic label - centered */}\n      <div className=\"font-semibold text-lg text-center mb-1 px-1\">\n        {data.label}\n      </div>\n\n      {/* Category - smaller and centered */}\n      <div className=\"text-xs opacity-90 text-center mb-2 px-1\">\n        {data.category}\n      </div>\n\n      {/* Delete button - positioned in absolute to maintain circular design */}\n      {data.onDelete && (\n        <button\n          onClick={(e) => {\n            e.preventDefault();\n            const deleteTimeout = setTimeout(() => {\n              e.stopPropagation();\n              data.onDelete();\n            }, 300);\n            e.currentTarget.deleteTimeout = deleteTimeout;\n          }}\n          onDoubleClick={(e) => {\n            if (e.currentTarget.deleteTimeout) {\n              clearTimeout(e.currentTarget.deleteTimeout);\n              e.currentTarget.deleteTimeout = null;\n            }\n          }}\n          className=\"absolute -bottom-1 -right-1 p-1.5 bg-white/30 hover:bg-white/50 rounded-full \n            transition-all duration-200 hover:scale-110 opacity-70 hover:opacity-100 backdrop-blur-sm\"\n        >\n          <X size={14} className=\"drop-shadow-sm\" />\n        </button>\n      )}\n\n      {/* Circular progress indicator */}\n      {data.flashcard_count > 0 && (\n        <div className=\"relative w-12 h-12 mx-auto mt-1\">\n          {/* Background circle */}\n          <svg className=\"w-full h-full\" viewBox=\"0 0 36 36\">\n            <circle\n              cx=\"18\" cy=\"18\" r=\"16\"\n              fill=\"none\"\n              className=\"stroke-white/30\"\n              strokeWidth=\"3\"\n            />\n            {/* Progress arc */}\n            <circle\n              cx=\"18\" cy=\"18\" r=\"16\"\n              fill=\"none\"\n              className=\"stroke-white\"\n              strokeWidth=\"3\"\n              strokeDasharray={`${completionPercentage * 100.5 / 100} 100`}\n              strokeDashoffset=\"25\"\n              strokeLinecap=\"round\"\n              transform=\"rotate(-90 18 18)\"\n            />\n            {/* Percentage text */}\n            <text\n              x=\"18\" y=\"20\"\n              textAnchor=\"middle\"\n              fontSize=\"10\"\n              fill=\"white\"\n              fontWeight=\"bold\"\n            >\n              {Math.round(completionPercentage)}%\n            </text>\n          </svg>\n          \n          {/* Tag count indicator */}\n          {data.tags && data.tags.length > 0 && (\n            <div className=\"absolute -bottom-1 -right-1 w-6 h-6 bg-white/30 backdrop-blur-sm rounded-full \n              flex items-center justify-center shadow-sm\">\n              <Tag size={10} />\n              <span className=\"text-[8px] font-bold ml-0.5\">{data.tags.length}</span>\n            </div>\n          )}\n        </div>\n      )}\n\n      {/* Last updated indicator - repositioned for circle */}\n      {data.updated_at && (\n        <div className=\"absolute -bottom-1 -left-1 w-5 h-5 rounded-full flex items-center justify-center bg-white/20 backdrop-blur-sm\">\n          <Clock size={10} className=\"opacity-80\" />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default TopicNode;","import React, { useState, useEffect } from 'react';\nimport { Handle, Position } from '@xyflow/react';\nimport { Users, Calendar, CheckSquare, Clock, X, AlertCircle } from 'lucide-react';\n\nconst CaseNode = ({ data, selected }) => {\n  const [isVisible, setIsVisible] = useState(data.skipAnimation || false);\n  const [isHovered, setIsHovered] = useState(false);\n  \n  // Entry animation with slight delay for staggered effect - only if not skipping animations\n  useEffect(() => {\n    if (!data.skipAnimation) {\n      const timer = setTimeout(() => setIsVisible(true), 150);\n      return () => clearTimeout(timer);\n    }\n  }, [data.skipAnimation]);\n\n  const getStatusColor = (status) => {\n    switch (status) {\n      case 'active': return 'text-emerald-500';\n      case 'archived': return 'text-slate-500';\n      case 'follow_up': return 'text-amber-500';\n      default: return 'text-sky-500';\n    }\n  };\n\n  const getStatusGradient = (status) => {\n    switch (status) {\n      case 'active': \n        return 'from-emerald-300 to-teal-500';\n      case 'archived': \n        return 'from-slate-300 to-slate-500';\n      case 'follow_up': \n        return 'from-amber-300 to-orange-500';\n      default: \n        return 'from-sky-300 to-indigo-500';\n    }\n  };\n\n  const getUrgencyLevel = (data) => {\n    // Simple urgency calculation based on keywords\n    const urgentKeywords = ['emergency', 'urgent', 'crisis', 'acute', 'severe'];\n    const complaint = data.chief_complaint?.toLowerCase() || '';\n    const diagnosis = data.diagnosis?.toLowerCase() || '';\n\n    if (urgentKeywords.some(keyword => complaint.includes(keyword) || diagnosis.includes(keyword))) {\n      return 'high';\n    }\n    return 'normal';\n  };\n\n  const urgency = getUrgencyLevel(data);\n  const statusGradient = getStatusGradient(data.status);\n\n  return (\n    <div\n      className={`group px-4 py-3 rounded-lg shadow-xl transition-all duration-600 min-w-[220px] relative transform \n        ${selected\n          ? 'scale-105'\n          : isHovered ? 'scale-[1.03]' : 'scale-100'\n        } ${isVisible ? 'opacity-100 translate-y-0 rotate-0' : 'opacity-0 translate-y-6 rotate-1'}`}\n      style={{\n        transition: 'all 0.6s cubic-bezier(0.25, 0.46, 0.45, 0.94), transform 0.3s ease',\n        background: 'linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%)',\n        boxShadow: selected \n          ? '0 10px 25px -5px rgba(59, 130, 246, 0.4), 0 8px 10px -6px rgba(59, 130, 246, 0.3)' \n          : isHovered \n            ? '0 10px 25px -5px rgba(0, 0, 0, 0.1), 0 8px 10px -6px rgba(0, 0, 0, 0.1)' \n            : '0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06)',\n      }}\n      onMouseEnter={() => setIsHovered(true)}\n      onMouseLeave={() => setIsHovered(false)}\n    >\n      {/* Connection Hotspots - Case-styled handles */}\n      {/* Top border with gradient accent */}\n      <div \n        className={`absolute top-0 left-0 w-full h-1.5 bg-gradient-to-r ${statusGradient} rounded-t-lg`}\n      ></div>\n\n      {/* Top handles */}\n      <Handle\n        id=\"top\"\n        type=\"source\"\n        position={Position.Top}\n        className={`w-3 h-3 rounded-full transition-all duration-300 transform hover:scale-150 cursor-pointer \n          ${selected || isHovered ? 'opacity-100' : 'opacity-0'}\n          shadow-md bg-gradient-to-br from-blue-400 to-indigo-600`}\n        style={{\n          left: '50%',\n          transform: 'translateX(-50%) translateY(-50%)',\n          zIndex: 2,\n          border: '2px solid white'\n        }}\n        isConnectable={true}\n      />\n      <Handle\n        id=\"top\"\n        type=\"target\"\n        position={Position.Top}\n        className={`w-3 h-3 rounded-full transition-all duration-300 transform hover:scale-150 cursor-pointer \n          ${selected || isHovered ? 'opacity-100' : 'opacity-0'}\n          shadow-md bg-gradient-to-br from-violet-400 to-purple-600`}\n        style={{\n          left: '50%',\n          transform: 'translateX(-50%) translateY(-50%)',\n          zIndex: 1,\n          border: '2px solid white'\n        }}\n        isConnectable={true}\n      />\n\n      {/* Right handles */}\n      <Handle\n        id=\"right\"\n        type=\"source\"\n        position={Position.Right}\n        className={`w-3 h-3 rounded-full transition-all duration-300 transform hover:scale-150 cursor-pointer \n          ${selected || isHovered ? 'opacity-100' : 'opacity-0'}\n          shadow-md bg-gradient-to-br from-blue-400 to-indigo-600`}\n        style={{\n          top: '50%',\n          transform: 'translateY(-50%) translateX(50%)',\n          zIndex: 2,\n          border: '2px solid white'\n        }}\n        isConnectable={true}\n      />\n      <Handle\n        id=\"right\"\n        type=\"target\"\n        position={Position.Right}\n        className={`w-3 h-3 rounded-full transition-all duration-300 transform hover:scale-150 cursor-pointer \n          ${selected || isHovered ? 'opacity-100' : 'opacity-0'}\n          shadow-md bg-gradient-to-br from-violet-400 to-purple-600`}\n        style={{\n          top: '50%',\n          transform: 'translateY(-50%) translateX(50%)',\n          zIndex: 1,\n          border: '2px solid white'\n        }}\n        isConnectable={true}\n      />\n\n      {/* Bottom handles */}\n      <Handle\n        id=\"bottom\"\n        type=\"source\"\n        position={Position.Bottom}\n        className={`w-3 h-3 rounded-full transition-all duration-300 transform hover:scale-150 cursor-pointer \n          ${selected || isHovered ? 'opacity-100' : 'opacity-0'}\n          shadow-md bg-gradient-to-br from-blue-400 to-indigo-600`}\n        style={{\n          left: '50%',\n          transform: 'translateX(-50%) translateY(50%)',\n          zIndex: 2,\n          border: '2px solid white'\n        }}\n        isConnectable={true}\n      />\n      <Handle\n        id=\"bottom\"\n        type=\"target\"\n        position={Position.Bottom}\n        className={`w-3 h-3 rounded-full transition-all duration-300 transform hover:scale-150 cursor-pointer \n          ${selected || isHovered ? 'opacity-100' : 'opacity-0'}\n          shadow-md bg-gradient-to-br from-violet-400 to-purple-600`}\n        style={{\n          left: '50%',\n          transform: 'translateX(-50%) translateY(50%)',\n          zIndex: 1,\n          border: '2px solid white'\n        }}\n        isConnectable={true}\n      />\n\n      {/* Left handles */}\n      <Handle\n        id=\"left\"\n        type=\"source\"\n        position={Position.Left}\n        className={`w-3 h-3 rounded-full transition-all duration-300 transform hover:scale-150 cursor-pointer \n          ${selected || isHovered ? 'opacity-100' : 'opacity-0'}\n          shadow-md bg-gradient-to-br from-blue-400 to-indigo-600`}\n        style={{\n          top: '50%',\n          transform: 'translateY(-50%) translateX(-50%)',\n          zIndex: 2,\n          border: '2px solid white'\n        }}\n        isConnectable={true}\n      />\n      <Handle\n        id=\"left\"\n        type=\"target\"\n        position={Position.Left}\n        className={`w-3 h-3 rounded-full transition-all duration-300 transform hover:scale-150 cursor-pointer \n          ${selected || isHovered ? 'opacity-100' : 'opacity-0'}\n          shadow-md bg-gradient-to-br from-violet-400 to-purple-600`}\n        style={{\n          top: '50%',\n          transform: 'translateY(-50%) translateX(-50%)',\n          zIndex: 1,\n          border: '2px solid white'\n        }}\n        isConnectable={true}\n      />\n      \n      {/* Selected/hover state effects */}\n      {(selected || isHovered) && (\n        <div className={`absolute inset-0 rounded-lg pointer-events-none ${selected ? 'animate-pulse-subtle' : ''}`} \n          style={{\n            boxShadow: `0 0 0 2px rgba(59, 130, 246, ${selected ? '0.5' : '0.3'})`,\n            animation: selected ? 'pulse 2s cubic-bezier(0.4, 0, 0.6, 1) infinite' : 'none',\n          }} \n        />\n      )}\n\n      {/* Urgency indicator - enhanced with gradient & animation */}\n      {urgency === 'high' && (\n        <div className=\"absolute -top-2 -right-2 z-10\">\n          <div className=\"w-6 h-6 bg-gradient-to-br from-red-400 to-pink-600 rounded-full flex items-center justify-center border-2 border-white animate-pulse shadow-md\">\n            <AlertCircle size={14} className=\"text-white drop-shadow-sm\" />\n          </div>\n        </div>\n      )}\n\n      <div className=\"flex items-center gap-2 mt-4 mb-2 relative\">\n        <div className=\"flex items-center gap-1\">\n          <div className={`p-1 rounded-full bg-gradient-to-r ${statusGradient} shadow-inner`}>\n            <Users size={16} className=\"text-white drop-shadow-sm\" />\n          </div>\n          {data.linked_topics && data.linked_topics.length > 0 && (\n            <div className=\"text-xs bg-white/80 backdrop-blur-sm text-gray-700 px-2 py-0.5 rounded-full shadow-sm font-medium\">\n              {data.linked_topics.length}\n            </div>\n          )}\n        </div>\n        <div className=\"font-semibold text-sm text-gray-800 truncate flex-1\">{data.label}</div>\n        {data.onDelete && (\n          <button\n            onClick={(e) => {\n              // Don't stop propagation immediately - delay the action to allow double-clicks\n              e.preventDefault(); // Prevent any default behavior but allow bubbling\n              \n              // Use a longer timeout to distinguish between single click and double-click\n              const deleteTimeout = setTimeout(() => {\n                // Only execute delete if this wasn't part of a double-click sequence\n                e.stopPropagation(); // Stop propagation only when actually deleting\n                data.onDelete();\n              }, 300); // Increased timeout\n              \n              // Store timeout ID on the button to cancel it if double-click occurs\n              e.currentTarget.deleteTimeout = deleteTimeout;\n            }}\n            onDoubleClick={(e) => {\n              // Cancel the pending delete action\n              if (e.currentTarget.deleteTimeout) {\n                clearTimeout(e.currentTarget.deleteTimeout);\n                e.currentTarget.deleteTimeout = null;\n              }\n              \n              // Don't prevent default - allow the double-click to bubble up for modal opening\n              // The parent node will handle the double-click to open the modal\n            }}\n            className=\"ml-auto p-1.5 hover:bg-red-50 rounded-full transition-all duration-200 hover:scale-110 opacity-70 hover:opacity-100 hover:text-red-500\"\n          >\n            <X size={14} className=\"drop-shadow-sm\" />\n          </button>\n        )}\n      </div>\n\n      <div className=\"text-xs text-gray-600 mb-3 font-medium truncate backdrop-blur-sm bg-white/50 rounded px-2 py-1\">\n        {data.diagnosis}\n      </div>\n\n      {/* Enhanced patient info */}\n      <div className=\"space-y-2\">\n        {data.age && (\n          <div className=\"text-xs font-medium flex items-center gap-1.5\">\n            <Calendar size={12} className={getStatusColor(data.status)} />\n            <span>Age: <span className=\"font-semibold\">{data.age}</span></span>\n          </div>\n        )}\n\n        {/* Status badge */}\n        {data.status && (\n          <span className={`inline-block px-2.5 py-1 rounded-full text-xs font-medium shadow-sm bg-white/70 backdrop-blur-sm ${getStatusColor(data.status)}`}>\n            {data.status.replace('_', ' ')}\n          </span>\n        )}\n      </div>\n\n      {/* Progress indicators with enhanced styling */}\n      {data.tasks_count && data.tasks_count > 0 && (\n        <div className=\"mt-3 mb-1\">\n          <div className=\"flex justify-between items-center text-xs mb-1\">\n            <div className=\"flex items-center gap-1.5\">\n              <CheckSquare size={12} className={getStatusColor(data.status)} />\n              <span className=\"font-medium\">{data.completed_tasks || 0}/{data.tasks_count} tasks</span>\n            </div>\n            <span className=\"font-semibold\">\n              {Math.round((data.completed_tasks || 0) / data.tasks_count * 100)}%\n            </span>\n          </div>\n          <div className=\"w-full h-1.5 bg-gray-200 rounded-full overflow-hidden\">\n            <div \n              className={`h-full transition-all duration-1000 bg-gradient-to-r ${statusGradient}`}\n              style={{ width: `${(data.completed_tasks || 0) / data.tasks_count * 100}%` }}\n            ></div>\n          </div>\n        </div>\n      )}\n\n      {/* Last updated indicator - enhanced styling */}\n      {data.updated_at && (\n        <div className=\"absolute bottom-1.5 right-1.5 opacity-60 flex items-center gap-1 text-[10px] text-gray-500 font-medium\">\n          <Clock size={10} />\n          <span>updated</span>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default CaseNode;","// Central export for all node components\nexport { default as TopicNode } from './TopicNode';\nexport { default as CaseNode } from './CaseNode';\nexport { default as TaskNode } from './TaskNode';\nexport { default as LiteratureNode } from './LiteratureNode';\n\n// Node types configuration\nimport TopicNode from './TopicNode';\nimport CaseNode from './CaseNode';\nimport TaskNode from './TaskNode';\nimport LiteratureNode from './LiteratureNode';\n\nexport const nodeTypes = {\n  topic: TopicNode,\n  case: CaseNode,\n  task: TaskNode,\n  literature: LiteratureNode,\n};","import React, { useState, useEffect } from 'react';\nimport { Handle, Position } from '@xyflow/react';\nimport { CheckSquare, X, Clock } from 'lucide-react';\n\nconst TaskNode = ({ data, selected }) => {\n  const [isVisible, setIsVisible] = useState(data.skipAnimation || false);\n  const [isHovered, setIsHovered] = useState(false);\n  \n  // Entry animation with different timing for variety - only if not skipping animations\n  useEffect(() => {\n    if (!data.skipAnimation) {\n      const timer = setTimeout(() => setIsVisible(true), 200);\n      return () => clearTimeout(timer);\n    }\n  }, [data.skipAnimation]);\n\n  // Define gradient backgrounds based on status\n  const getStatusGradient = (status) => {\n    switch (status) {\n      case 'pending':\n        return 'from-amber-400 to-amber-600';\n      case 'in_progress':\n        return 'from-sky-400 to-blue-600';\n      case 'completed':\n        return 'from-emerald-400 to-green-600';\n      default:\n        return 'from-gray-400 to-gray-600';\n    }\n  };\n  \n  const gradient = getStatusGradient(data.status);\n  \n  // Priority background indicator\n  const getPriorityAccent = (priority) => {\n    switch (priority?.toLowerCase()) {\n      case 'high':\n        return 'from-red-400 to-red-600';\n      case 'medium':\n        return 'from-orange-400 to-orange-600';\n      case 'low':\n        return 'from-emerald-400 to-emerald-600';\n      default:\n        return 'from-gray-400 to-gray-600';\n    }\n  };\n\n  return (\n    <div\n      className={`group px-6 py-3 rounded-full shadow-xl transition-all duration-500 text-white relative transform \n        ${selected ? 'scale-105' : isHovered ? 'scale-[1.02]' : 'scale-100'} \n        ${isVisible ? 'opacity-100 translate-x-0' : 'opacity-0 scale-85 -translate-x-4'}`}\n      style={{\n        background: `linear-gradient(135deg, ${data.status === 'completed' ? 'rgba(16, 185, 129, 0.85)' : 'rgba(59, 130, 246, 0.95)'} 0%, ${data.status === 'completed' ? 'rgba(5, 150, 105, 0.95)' : 'rgba(99, 102, 241, 0.98)'} 100%)`,\n        boxShadow: selected \n          ? '0 10px 25px -5px rgba(99, 102, 241, 0.5), 0 8px 10px -6px rgba(99, 102, 241, 0.5)' \n          : isHovered \n            ? '0 10px 25px -5px rgba(99, 102, 241, 0.3), 0 8px 10px -6px rgba(99, 102, 241, 0.3)' \n            : '0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -2px rgba(0, 0, 0, 0.1)',\n        transition: 'all 0.5s cubic-bezier(0.68, -0.55, 0.265, 1.55), transform 0.3s ease, box-shadow 0.3s ease',\n        backdropFilter: 'blur(8px)',\n        minWidth: '240px',\n        maxWidth: '300px'\n      }}\n      onMouseEnter={() => setIsHovered(true)}\n      onMouseLeave={() => setIsHovered(false)}\n    >\n      {/* Priority indicator on the left end of the pill */}\n      <div \n        className={`absolute left-0 top-0 bottom-0 w-2 rounded-l-full bg-gradient-to-b ${getPriorityAccent(data.priority)}`}\n      ></div>\n\n      {/* Connection Hotspots - Pill-style handles */}\n      {/* Top handles with glow effect */}\n      <Handle\n        id=\"top\"\n        type=\"source\"\n        position={Position.Top}\n        className={`w-3 h-3 rounded-full transition-all duration-300 hover:scale-150 cursor-pointer \n          ${selected || isHovered ? 'opacity-100' : 'opacity-0'}`}\n        style={{\n          left: '50%',\n          transform: 'translateX(-50%) translateY(-50%)',\n          zIndex: 2,\n          border: '2px solid white',\n          background: 'rgb(99, 102, 241)',\n          boxShadow: '0 0 8px 2px rgba(99, 102, 241, 0.7)'\n        }}\n        isConnectable={true}\n      />\n      <Handle\n        id=\"top\"\n        type=\"target\"\n        position={Position.Top}\n        className={`w-3 h-3 rounded-full transition-all duration-300 hover:scale-150 cursor-pointer \n          ${selected || isHovered ? 'opacity-100' : 'opacity-0'}`}\n        style={{\n          left: '50%',\n          transform: 'translateX(-50%) translateY(-50%)',\n          zIndex: 1,\n          border: '2px solid white',\n          background: 'rgb(124, 58, 237)',\n          boxShadow: '0 0 8px 2px rgba(124, 58, 237, 0.7)'\n        }}\n        isConnectable={true}\n      />\n\n      {/* Right handles with glow effect */}\n      <Handle\n        id=\"right\"\n        type=\"source\"\n        position={Position.Right}\n        className={`w-3 h-3 rounded-full transition-all duration-300 hover:scale-150 cursor-pointer \n          ${selected || isHovered ? 'opacity-100' : 'opacity-0'}`}\n        style={{\n          top: '50%',\n          transform: 'translateY(-50%) translateX(50%)',\n          zIndex: 2,\n          border: '2px solid white',\n          background: 'rgb(99, 102, 241)',\n          boxShadow: '0 0 8px 2px rgba(99, 102, 241, 0.7)'\n        }}\n        isConnectable={true}\n      />\n      <Handle\n        id=\"right\"\n        type=\"target\"\n        position={Position.Right}\n        className={`w-3 h-3 rounded-full transition-all duration-300 hover:scale-150 cursor-pointer \n          ${selected || isHovered ? 'opacity-100' : 'opacity-0'}`}\n        style={{\n          top: '50%',\n          transform: 'translateY(-50%) translateX(50%)',\n          zIndex: 1,\n          border: '2px solid white',\n          background: 'rgb(124, 58, 237)',\n          boxShadow: '0 0 8px 2px rgba(124, 58, 237, 0.7)'\n        }}\n        isConnectable={true}\n      />\n\n      {/* Bottom handles with glow effect */}\n      <Handle\n        id=\"bottom\"\n        type=\"source\"\n        position={Position.Bottom}\n        className={`w-3 h-3 rounded-full transition-all duration-300 hover:scale-150 cursor-pointer \n          ${selected || isHovered ? 'opacity-100' : 'opacity-0'}`}\n        style={{\n          left: '50%',\n          transform: 'translateX(-50%) translateY(50%)',\n          zIndex: 2,\n          border: '2px solid white',\n          background: 'rgb(99, 102, 241)',\n          boxShadow: '0 0 8px 2px rgba(99, 102, 241, 0.7)'\n        }}\n        isConnectable={true}\n      />\n      <Handle\n        id=\"bottom\"\n        type=\"target\"\n        position={Position.Bottom}\n        className={`w-3 h-3 rounded-full transition-all duration-300 hover:scale-150 cursor-pointer \n          ${selected || isHovered ? 'opacity-100' : 'opacity-0'}`}\n        style={{\n          left: '50%',\n          transform: 'translateX(-50%) translateY(50%)',\n          zIndex: 1,\n          border: '2px solid white',\n          background: 'rgb(124, 58, 237)',\n          boxShadow: '0 0 8px 2px rgba(124, 58, 237, 0.7)'\n        }}\n        isConnectable={true}\n      />\n\n      {/* Left handles with glow effect - positioned away from priority indicator */}\n      <Handle\n        id=\"left\"\n        type=\"source\"\n        position={Position.Left}\n        className={`w-3 h-3 rounded-full transition-all duration-300 hover:scale-150 cursor-pointer \n          ${selected || isHovered ? 'opacity-100' : 'opacity-0'}`}\n        style={{\n          top: '50%',\n          left: '10px',\n          transform: 'translateY(-50%) translateX(-50%)',\n          zIndex: 2,\n          border: '2px solid white',\n          background: 'rgb(99, 102, 241)',\n          boxShadow: '0 0 8px 2px rgba(99, 102, 241, 0.7)'\n        }}\n        isConnectable={true}\n      />\n      <Handle\n        id=\"left\"\n        type=\"target\"\n        position={Position.Left}\n        className={`w-3 h-3 rounded-full transition-all duration-300 hover:scale-150 cursor-pointer \n          ${selected || isHovered ? 'opacity-100' : 'opacity-0'}`}\n        style={{\n          top: '50%',\n          left: '10px',\n          transform: 'translateY(-50%) translateX(-50%)',\n          zIndex: 1,\n          border: '2px solid white',\n          background: 'rgb(124, 58, 237)',\n          boxShadow: '0 0 8px 2px rgba(124, 58, 237, 0.7)'\n        }}\n        isConnectable={true}\n      />\n      \n      {/* Selected/hover state ring effect */}\n      {(selected || isHovered) && (\n        <div \n          className={`absolute inset-0 rounded-full pointer-events-none ${selected ? 'animate-pulse-subtle' : ''}`}\n          style={{\n            boxShadow: `0 0 0 2px rgba(255, 255, 255, ${selected ? '0.5' : '0.3'})`,\n            animation: selected ? 'pulse 2s cubic-bezier(0.4, 0, 0.6, 1) infinite' : 'none',\n          }}\n        />\n      )}\n\n      {/* Task content - refined for pill layout */}\n      <div className=\"flex items-center\">\n        <div className=\"flex-shrink-0 mr-3\">\n          <div className={`p-1 rounded-full bg-white/20 shadow-inner ${data.status === 'completed' ? 'bg-white/40' : ''}`}>\n            <CheckSquare size={18} className=\"drop-shadow-sm\" />\n          </div>\n        </div>\n        \n        <div className=\"flex-grow min-w-0\">\n          <div className=\"font-semibold text-sm truncate\">{data.label}</div>\n          \n          {/* Status and due date info */}\n          <div className=\"flex items-center gap-2 text-xs mt-0.5\">\n            {data.due_date && (\n              <div className=\"flex items-center gap-1 bg-white/20 px-2 py-0.5 rounded-full\">\n                <Clock size={10} />\n                <span>{new Date(data.due_date).toLocaleDateString()}</span>\n              </div>\n            )}\n          </div>\n        </div>\n        \n        {/* Delete button */}\n        {data.onDelete && (\n          <button\n            onClick={(e) => {\n              e.preventDefault();\n              const deleteTimeout = setTimeout(() => {\n                e.stopPropagation();\n                data.onDelete();\n              }, 300);\n              e.currentTarget.deleteTimeout = deleteTimeout;\n            }}\n            onDoubleClick={(e) => {\n              if (e.currentTarget.deleteTimeout) {\n                clearTimeout(e.currentTarget.deleteTimeout);\n                e.currentTarget.deleteTimeout = null;\n              }\n            }}\n            className=\"ml-2 p-1.5 hover:bg-white/20 rounded-full transition-all duration-200 hover:scale-110 opacity-70 hover:opacity-100\"\n          >\n            <X size={14} className=\"drop-shadow-sm\" />\n          </button>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default TaskNode;","import React, { useState, useEffect } from 'react';\nimport { Handle, Position } from '@xyflow/react';\nimport { BookOpen, X, Calendar } from 'lucide-react';\n\nconst LiteratureNode = ({ data, selected }) => {\n  const [isVisible, setIsVisible] = useState(data.skipAnimation || false);\n  const [isHovered, setIsHovered] = useState(false);\n  \n  // Entry animation with the longest delay for final polish - only if not skipping animations\n  useEffect(() => {\n    if (!data.skipAnimation) {\n      const timer = setTimeout(() => setIsVisible(true), 250);\n      return () => clearTimeout(timer);\n    }\n  }, [data.skipAnimation]);\n\n  return (\n    <div\n      className={`group transition-all duration-650 relative transform \n        ${selected ? 'scale-105' : isHovered ? 'scale-[1.02]' : 'scale-100'}\n        ${isVisible ? 'opacity-100 translate-x-0 rotate-0' : 'opacity-0 scale-95 translate-x-4 -rotate-1'}`}\n      style={{\n        width: '130px',\n        height: '180px',\n        background: 'linear-gradient(135deg, #f3e8ff 0%, #ddd6fe 100%)',\n        borderRadius: '8px',\n        boxShadow: selected\n          ? '0 10px 30px -5px rgba(139, 92, 246, 0.5), 0 8px 10px -6px rgba(139, 92, 246, 0.4)'\n          : isHovered\n            ? '0 10px 25px -5px rgba(139, 92, 246, 0.3), 0 8px 10px -6px rgba(139, 92, 246, 0.2)'\n            : '0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -2px rgba(0, 0, 0, 0.05)',\n        transition: 'all 0.65s cubic-bezier(0.175, 0.885, 0.32, 1.275), transform 0.3s ease, box-shadow 0.3s ease',\n        borderTop: '8px solid',\n        borderImage: 'linear-gradient(to right, #8b5cf6, #6d28d9) 1',\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'space-between',\n        overflow: 'hidden',\n        transform: isHovered && !selected ? 'rotate(1deg)' : selected ? 'rotate(0deg)' : 'rotate(0deg)'\n      }}\n      onMouseEnter={() => setIsHovered(true)}\n      onMouseLeave={() => setIsHovered(false)}\n    >\n      {/* Connection Hotspots for Literature Card - vertical placement */}\n      {/* Top handles */}\n      <Handle\n        id=\"top\"\n        type=\"source\"\n        position={Position.Top}\n        className={`w-3 h-3 rounded-full transition-all duration-300 hover:scale-150 cursor-pointer \n          ${selected || isHovered ? 'opacity-100' : 'opacity-0'}`}\n        style={{\n          left: '50%',\n          transform: 'translateX(-50%) translateY(-50%)',\n          zIndex: 2,\n          border: '2px solid white',\n          background: 'rgb(139, 92, 246)',\n          boxShadow: '0 0 8px 2px rgba(139, 92, 246, 0.7)'\n        }}\n        isConnectable={true}\n      />\n      <Handle\n        id=\"top\"\n        type=\"target\"\n        position={Position.Top}\n        className={`w-3 h-3 rounded-full transition-all duration-300 hover:scale-150 cursor-pointer \n          ${selected || isHovered ? 'opacity-100' : 'opacity-0'}`}\n        style={{\n          left: '50%',\n          transform: 'translateX(-50%) translateY(-50%)',\n          zIndex: 1,\n          border: '2px solid white',\n          background: 'rgb(109, 40, 217)',\n          boxShadow: '0 0 8px 2px rgba(109, 40, 217, 0.7)'\n        }}\n        isConnectable={true}\n      />\n\n      {/* Right handles */}\n      <Handle\n        id=\"right\"\n        type=\"source\"\n        position={Position.Right}\n        className={`w-3 h-3 rounded-full transition-all duration-300 hover:scale-150 cursor-pointer \n          ${selected || isHovered ? 'opacity-100' : 'opacity-0'}`}\n        style={{\n          top: '50%',\n          transform: 'translateY(-50%) translateX(50%)',\n          zIndex: 2,\n          border: '2px solid white',\n          background: 'rgb(139, 92, 246)',\n          boxShadow: '0 0 8px 2px rgba(139, 92, 246, 0.7)'\n        }}\n        isConnectable={true}\n      />\n      <Handle\n        id=\"right\"\n        type=\"target\"\n        position={Position.Right}\n        className={`w-3 h-3 rounded-full transition-all duration-300 hover:scale-150 cursor-pointer \n          ${selected || isHovered ? 'opacity-100' : 'opacity-0'}`}\n        style={{\n          top: '50%',\n          transform: 'translateY(-50%) translateX(50%)',\n          zIndex: 1,\n          border: '2px solid white',\n          background: 'rgb(109, 40, 217)',\n          boxShadow: '0 0 8px 2px rgba(109, 40, 217, 0.7)'\n        }}\n        isConnectable={true}\n      />\n\n      {/* Bottom handles */}\n      <Handle\n        id=\"bottom\"\n        type=\"source\"\n        position={Position.Bottom}\n        className={`w-3 h-3 rounded-full transition-all duration-300 hover:scale-150 cursor-pointer \n          ${selected || isHovered ? 'opacity-100' : 'opacity-0'}`}\n        style={{\n          left: '50%',\n          transform: 'translateX(-50%) translateY(50%)',\n          zIndex: 2,\n          border: '2px solid white',\n          background: 'rgb(139, 92, 246)',\n          boxShadow: '0 0 8px 2px rgba(139, 92, 246, 0.7)'\n        }}\n        isConnectable={true}\n      />\n      <Handle\n        id=\"bottom\"\n        type=\"target\"\n        position={Position.Bottom}\n        className={`w-3 h-3 rounded-full transition-all duration-300 hover:scale-150 cursor-pointer \n          ${selected || isHovered ? 'opacity-100' : 'opacity-0'}`}\n        style={{\n          left: '50%',\n          transform: 'translateX(-50%) translateY(50%)',\n          zIndex: 1,\n          border: '2px solid white',\n          background: 'rgb(109, 40, 217)',\n          boxShadow: '0 0 8px 2px rgba(109, 40, 217, 0.7)'\n        }}\n        isConnectable={true}\n      />\n\n      {/* Left handles */}\n      <Handle\n        id=\"left\"\n        type=\"source\"\n        position={Position.Left}\n        className={`w-3 h-3 rounded-full transition-all duration-300 hover:scale-150 cursor-pointer \n          ${selected || isHovered ? 'opacity-100' : 'opacity-0'}`}\n        style={{\n          top: '50%',\n          transform: 'translateY(-50%) translateX(-50%)',\n          zIndex: 2,\n          border: '2px solid white',\n          background: 'rgb(139, 92, 246)',\n          boxShadow: '0 0 8px 2px rgba(139, 92, 246, 0.7)'\n        }}\n        isConnectable={true}\n      />\n      <Handle\n        id=\"left\"\n        type=\"target\"\n        position={Position.Left}\n        className={`w-3 h-3 rounded-full transition-all duration-300 hover:scale-150 cursor-pointer \n          ${selected || isHovered ? 'opacity-100' : 'opacity-0'}`}\n        style={{\n          top: '50%',\n          transform: 'translateY(-50%) translateX(-50%)',\n          zIndex: 1,\n          border: '2px solid white',\n          background: 'rgb(109, 40, 217)',\n          boxShadow: '0 0 8px 2px rgba(109, 40, 217, 0.7)'\n        }}\n        isConnectable={true}\n      />\n      \n      {/* Selected/hover state ring effect */}\n      {(selected || isHovered) && (\n        <div \n          className={`absolute inset-0 rounded-lg pointer-events-none ${selected ? 'animate-pulse-subtle' : ''}`}\n          style={{\n            boxShadow: `0 0 0 2px rgba(139, 92, 246, ${selected ? '0.5' : '0.3'})`,\n            animation: selected ? 'pulse 2s cubic-bezier(0.4, 0, 0.6, 1) infinite' : 'none',\n          }}\n        />\n      )}\n\n      {/* Literature Card Content - Vertical layout */}\n      <div className=\"flex flex-col h-full\">\n        {/* Card Header with book icon */}\n        <div \n          className=\"px-3 pt-3 pb-2 cursor-pointer\"\n          onClick={(e) => {\n            e.preventDefault();\n            const clickTimeout = setTimeout(() => {\n              e.stopPropagation();\n              if (data.onLiteratureClick) {\n                data.onLiteratureClick(data);\n              }\n            }, 300);\n            e.currentTarget.clickTimeout = clickTimeout;\n          }}\n          onDoubleClick={(e) => {\n            if (e.currentTarget.clickTimeout) {\n              clearTimeout(e.currentTarget.clickTimeout);\n              e.currentTarget.clickTimeout = null;\n            }\n          }}\n        >\n          <div className=\"flex justify-center mb-2\">\n            <div className=\"p-1.5 rounded-full bg-purple-100 shadow-inner\">\n              <BookOpen size={20} className=\"text-purple-600\" />\n            </div>\n          </div>\n          <div className=\"text-center font-semibold text-sm text-gray-800 line-clamp-3 mb-1\">\n            {data.label}\n          </div>\n        </div>\n\n        {/* Card Body */}\n        <div className=\"px-3 flex-grow flex flex-col justify-end\">\n          {/* Author info - truncated for vertical card */}\n          <div className=\"text-xs text-center text-gray-600 mb-1 line-clamp-2\">\n            {data.authors}\n          </div>\n          \n          {/* Year with calendar icon */}\n          <div className=\"flex items-center justify-center text-xs text-purple-700 font-medium mt-1 mb-3\">\n            <Calendar size={10} className=\"mr-1\" />\n            {data.year}\n          </div>\n        </div>\n\n        {/* Delete button - positioned absolutely */}\n        {data.onDelete && (\n          <button\n            onClick={(e) => {\n              e.preventDefault();\n              const deleteTimeout = setTimeout(() => {\n                e.stopPropagation();\n                data.onDelete();\n              }, 300);\n              e.currentTarget.deleteTimeout = deleteTimeout;\n            }}\n            onDoubleClick={(e) => {\n              if (e.currentTarget.deleteTimeout) {\n                clearTimeout(e.currentTarget.deleteTimeout);\n                e.currentTarget.deleteTimeout = null;\n              }\n            }}\n            className=\"absolute top-0.5 right-0.5 p-1 hover:bg-purple-200 rounded-full transition-all duration-200 hover:scale-110 opacity-70 hover:opacity-100\"\n          >\n            <X size={12} className=\"text-purple-700\" />\n          </button>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default LiteratureNode;","// Performance optimizations for mind map rendering\nimport { useMemo, useCallback } from 'react';\n\n// Memoized node data to prevent unnecessary re-renders\nexport const useMemoizedNodeData = (data, dependencies = []) => {\n  return useMemo(() => data, dependencies);\n};\n\n// Throttled layout calculation to prevent excessive computations\nexport const useThrottledLayout = (layoutFunction, delay = 100) => {\n  return useCallback(\n    throttle(layoutFunction, delay),\n    [layoutFunction, delay]\n  );\n};\n\n// Throttle function implementation\nfunction throttle(func, delay) {\n  let timeoutId;\n  let lastExecTime = 0;\n  \n  return function (...args) {\n    const currentTime = Date.now();\n    \n    if (currentTime - lastExecTime > delay) {\n      func.apply(this, args);\n      lastExecTime = currentTime;\n    } else {\n      clearTimeout(timeoutId);\n      timeoutId = setTimeout(() => {\n        func.apply(this, args);\n        lastExecTime = Date.now();\n      }, delay - (currentTime - lastExecTime));\n    }\n  };\n}\n\n// Optimized data conversion with chunking for large datasets\nexport const convertDataInChunks = (data, chunkSize = 50) => {\n  return new Promise((resolve) => {\n    const chunks = [];\n    const allItems = [\n      ...data.topics.map(item => ({ ...item, type: 'topic' })),\n      ...data.cases.map(item => ({ ...item, type: 'case' })),\n      ...data.tasks.map(item => ({ ...item, type: 'task' })),\n      ...data.literature.map(item => ({ ...item, type: 'literature' }))\n    ];\n    \n    for (let i = 0; i < allItems.length; i += chunkSize) {\n      chunks.push(allItems.slice(i, i + chunkSize));\n    }\n    \n    resolve(chunks);\n  });\n};\n\n// Fast initial layout without force simulation\nexport const getQuickLayout = (nodes) => {\n  const gridSize = Math.ceil(Math.sqrt(nodes.length));\n  const nodeSpacing = 200;\n  \n  return nodes.map((node, index) => ({\n    ...node,\n    position: {\n      x: (index % gridSize) * nodeSpacing,\n      y: Math.floor(index / gridSize) * nodeSpacing\n    }\n  }));\n};\n\n// Memory-efficient edge creation\nexport const createOptimizedEdges = (connections, nodeIds) => {\n  const nodeIdSet = new Set(nodeIds);\n  \n  return connections\n    .filter(conn => nodeIdSet.has(conn.source) && nodeIdSet.has(conn.target))\n    .map(conn => ({\n      id: conn.id,\n      source: conn.source,\n      target: conn.target,\n      label: conn.label,\n      type: 'floating',\n      style: {\n        strokeWidth: 2,\n        stroke: '#64748b',\n        opacity: 0.85\n      },\n      animated: false,\n      updatable: true\n    }));\n};\n","// Sample literature data for testing the enhanced Literature modal\nexport const sampleLiteratureData = [\n  {\n    id: 1,\n    title: \"Efficacy of Cognitive Behavioral Therapy for Depression: A Meta-Analysis\",\n    authors: \"Smith, J.A., Johnson, B.K., Williams, C.D.\",\n    year: \"2023\",\n    type: \"meta-analysis\",\n    journal: \"Journal of Clinical Psychology\",\n    volume: \"79\",\n    pages: \"234-251\",\n    doi: \"10.1002/jclp.23456\",\n    abstract: \"This meta-analysis examines the efficacy of cognitive behavioral therapy (CBT) for treating major depressive disorder across 45 randomized controlled trials involving 3,242 participants. Results indicate that CBT shows significant effectiveness with a large effect size (d = 0.85) compared to control conditions. The analysis also reveals that individual CBT may be more effective than group CBT for severe depression cases.\",\n    keywords: \"cognitive behavioral therapy, depression, meta-analysis, psychotherapy, mental health\",\n    notes: \"\",\n    pdf_url: \"https://example.com/sample-cbt-meta-analysis.pdf\",\n    position: { x: 300, y: 100 }\n  },\n  {\n    id: 2,\n    title: \"DSM-5-TR Clinical Cases\",\n    authors: \"American Psychiatric Association\",\n    year: \"2022\",\n    type: \"guideline\",\n    journal: \"American Psychiatric Publishing\",\n    abstract: \"A comprehensive collection of clinical cases that illustrate the diagnostic criteria and clinical features of mental disorders as defined in the DSM-5-TR. Each case includes detailed patient presentations, differential diagnoses, and treatment considerations.\",\n    keywords: \"DSM-5, diagnosis, clinical cases, psychiatric disorders, differential diagnosis\",\n    notes: \"Essential reference for diagnostic clarity\",\n    position: { x: 500, y: 200 }\n  },\n  {\n    id: 3,\n    title: \"Pharmacological Treatment of Bipolar Disorder: Current Evidence\",\n    authors: \"Rodriguez, M.L., Chen, K.H., Anderson, P.R.\",\n    year: \"2023\",\n    type: \"review\",\n    journal: \"Bipolar Disorders\",\n    volume: \"25\",\n    pages: \"123-145\",\n    doi: \"10.1111/bdi.13289\",\n    abstract: \"This comprehensive review examines current evidence for pharmacological treatments of bipolar disorder, including mood stabilizers, antipsychotics, and adjunctive therapies. The review covers efficacy, safety profiles, and treatment-resistant cases.\",\n    keywords: \"bipolar disorder, pharmacotherapy, mood stabilizers, lithium, antipsychotics\",\n    notes: \"Important for medication management decisions\",\n    position: { x: 700, y: 150 }\n  },\n  {\n    id: 4,\n    title: \"Mindfulness-Based Interventions for Anxiety Disorders: A Systematic Review\",\n    authors: \"Taylor, S.M., Brown, A.J., Davis, L.K.\",\n    year: \"2023\",\n    type: \"review\",\n    journal: \"Clinical Psychology Review\",\n    volume: \"88\",\n    pages: \"102-118\",\n    abstract: \"Systematic review of mindfulness-based interventions for treating various anxiety disorders. Analysis of 28 studies shows moderate to large effect sizes for reducing anxiety symptoms, with particular effectiveness for generalized anxiety disorder.\",\n    keywords: \"mindfulness, anxiety disorders, meditation, systematic review, GAD\",\n    notes: \"Good evidence for mindfulness approaches\",\n    position: { x: 400, y: 300 }\n  },\n  {\n    id: 5,\n    title: \"Case Study: Treatment-Resistant Schizophrenia with Clozapine\",\n    authors: \"Wilson, K.R., Martinez, E.S.\",\n    year: \"2022\",\n    type: \"case-study\",\n    journal: \"Schizophrenia Bulletin\",\n    volume: \"48\",\n    pages: \"567-572\",\n    abstract: \"Detailed case study of a 28-year-old male with treatment-resistant schizophrenia who showed significant improvement after clozapine initiation. The case discusses monitoring protocols, side effect management, and long-term outcomes.\",\n    keywords: \"schizophrenia, clozapine, treatment-resistant, case study, antipsychotics\",\n    notes: \"Useful for understanding clozapine protocols\",\n    position: { x: 600, y: 400 }\n  }\n];\n\n// Sample connections between literature and other nodes\nexport const sampleConnections = [\n  {\n    id: \"conn-1\",\n    source: \"literature-1\",\n    target: \"case-101\", // Depression case\n    label: \"Treatment approach\"\n  },\n  {\n    id: \"conn-2\", \n    source: \"literature-2\",\n    target: \"topic-201\", // Diagnostic criteria topic\n    label: \"Reference guide\"\n  },\n  {\n    id: \"conn-3\",\n    source: \"literature-3\",\n    target: \"case-102\", // Bipolar case\n    label: \"Medication guidance\"\n  },\n  {\n    id: \"conn-4\",\n    source: \"literature-4\",\n    target: \"case-103\", // Anxiety case\n    label: \"Treatment option\"\n  },\n  {\n    id: \"conn-5\",\n    source: \"literature-5\",\n    target: \"case-104\", // Schizophrenia case\n    label: \"Treatment protocol\"\n  }\n];\n\n// Enhanced literature node factory\nexport const createLiteratureNode = (data) => ({\n  ...data,\n  label: data.title || 'Literature Item',\n  created_at: new Date().toISOString(),\n  updated_at: new Date().toISOString()\n});\n","// Utility to populate sample literature data for testing\nimport { sampleLiteratureData, sampleConnections } from '../data/sampleLiteratureData';\n\nexport const populateSampleLiteratureData = (setMindMapData, autoSaveMindMapData, addToast) => {\n  setMindMapData(prevData => {\n    // Add sample literature items if they don't already exist\n    const existingIds = new Set(prevData.literature.map(item => item.id));\n    const newLiterature = sampleLiteratureData.filter(item => !existingIds.has(item.id));\n    \n    if (newLiterature.length === 0) {\n      addToast('Sample literature data already exists', 'info');\n      return prevData;\n    }\n\n    // Create sample case and topic nodes to connect with literature\n    const sampleCases = [\n      {\n        id: 101,\n        label: 'Major Depression Case',\n        primary_diagnosis: 'Major Depressive Disorder',\n        chief_complaint: 'Persistent sadness and loss of interest',\n        secondary_diagnoses: ['Anxiety', 'Insomnia'],\n        position: { x: 100, y: 100 }\n      },\n      {\n        id: 102,\n        label: 'Bipolar Disorder Case', \n        primary_diagnosis: 'Bipolar I Disorder',\n        chief_complaint: 'Mood swings and impulsivity',\n        position: { x: 200, y: 200 }\n      },\n      {\n        id: 103,\n        label: 'Generalized Anxiety Case',\n        primary_diagnosis: 'Generalized Anxiety Disorder',\n        chief_complaint: 'Excessive worry and restlessness',\n        position: { x: 300, y: 300 }\n      },\n      {\n        id: 104,\n        label: 'Schizophrenia Case',\n        primary_diagnosis: 'Schizophrenia',\n        chief_complaint: 'Auditory hallucinations and delusions',\n        position: { x: 400, y: 400 }\n      }\n    ];\n\n    const sampleTopics = [\n      {\n        id: 201,\n        title: 'Diagnostic Criteria',\n        category: 'Assessment',\n        tags: ['DSM-5', 'diagnosis', 'criteria'],\n        position: { x: 150, y: 50 }\n      }\n    ];\n\n    // Filter out existing cases and topics\n    const existingCaseIds = new Set(prevData.cases.map(item => item.id));\n    const existingTopicIds = new Set(prevData.topics.map(item => item.id));\n    \n    const newCases = sampleCases.filter(item => !existingCaseIds.has(item.id));\n    const newTopics = sampleTopics.filter(item => !existingTopicIds.has(item.id));\n\n    // Add sample connections\n    const existingConnectionIds = new Set(prevData.connections.map(conn => conn.id));\n    const newConnections = sampleConnections.filter(conn => !existingConnectionIds.has(conn.id));\n\n    const updatedData = {\n      ...prevData,\n      literature: [...prevData.literature, ...newLiterature],\n      cases: [...prevData.cases, ...newCases],\n      topics: [...prevData.topics, ...newTopics],\n      connections: [...prevData.connections, ...newConnections]\n    };\n\n    // Save the updated data\n    autoSaveMindMapData(updatedData);\n    addToast(`Added ${newLiterature.length} literature items, ${newCases.length} cases, and ${newTopics.length} topics`, 'success');\n    \n    return updatedData;\n  });\n};\n\nexport const clearSampleData = (setMindMapData, autoSaveMindMapData, addToast) => {\n  setMindMapData(prevData => {\n    // Remove sample data based on IDs\n    const sampleLiteratureIds = new Set(sampleLiteratureData.map(item => item.id));\n    const sampleConnectionIds = new Set(sampleConnections.map(conn => conn.id));\n    const sampleCaseIds = new Set([101, 102, 103, 104]);\n    const sampleTopicIds = new Set([201]);\n\n    const updatedData = {\n      ...prevData,\n      literature: prevData.literature.filter(item => !sampleLiteratureIds.has(item.id)),\n      cases: prevData.cases.filter(item => !sampleCaseIds.has(item.id)),\n      topics: prevData.topics.filter(item => !sampleTopicIds.has(item.id)),\n      connections: prevData.connections.filter(conn => !sampleConnectionIds.has(conn.id))\n    };\n\n    autoSaveMindMapData(updatedData);\n    addToast('Sample literature data cleared', 'success');\n    \n    return updatedData;\n  });\n};\n","import React, { useState, useEffect, useCallback, useRef, useMemo, Suspense, lazy } from 'react';\nimport '@xyflow/react/dist/style.css';\nimport './App.css';\nimport axios from 'axios';\nimport { motion, AnimatePresence } from 'framer-motion';\n\n// Import timeline test component\nimport TimelineTestPage from './components/timeline-test/TimelineTestPage';\nimport {\n  ReactFlow,\n  addEdge,\n  Background,\n  Controls,\n  MiniMap,\n  useNodesState,\n  useEdgesState,\n  ReactFlowProvider,\n  Panel,\n  Handle,\n  Position,\n  useReactFlow,\n} from '@xyflow/react';\n\n// Lazy load heavy D3 dependencies\nconst loadD3Force = () => import('d3-force');\nconst loadDagre = () => import('dagre');\n\nimport {\n  Plus,\n  Brain,\n  Users,\n  CheckSquare,\n  Edit3,\n  Save,\n  ArrowLeft,\n  FileText,\n  Calendar,\n  Target,\n  BookOpen,\n  Trash2,\n  X,\n  Shuffle,\n  Download,\n  Cloud,\n  CheckCircle,\n  Tag,\n  Clock,\n  AlertCircle,\n  Info,\n  Star,\n  Zap,\n  Settings,\n  Eye,\n  Upload,\n  Bell,\n  CheckCircle2,\n  Loader2,\n  Sparkles,\n  Search, // Added for global search functionality\n  Heart,\n  Bookmark,\n  User,\n  Clipboard,\n  StickyNote,\n  Paperclip,\n  ChevronDown,\n  ChevronUp,\n  ArrowDown\n} from 'lucide-react';\n\n// Lazy load components for better initial load time\nimport { RichTextEditor, LiteratureModal } from './components/LazyComponents';\nimport CaseModal from './components/CaseModal';\nimport TopicModal from './components/TopicModal';\nimport TaskModal from './components/TaskModal';\nimport FloatingEdge from './components/FloatingEdge'; // Import the custom FloatingEdge component\nimport EnhancedEdge from './components/EnhancedEdge'; // Import the enhanced edge component\nimport ConnectionLine from './components/ConnectionLine'; // Import the custom connection line for previews\nimport OptimizedLoadingScreen from './components/OptimizedLoadingScreen';\n\n// Import node components\nimport { nodeTypes } from './components/nodes';\n\n// Import performance utilities\nimport { \n  useMemoizedNodeData, \n  convertDataInChunks, \n  getQuickLayout, \n  createOptimizedEdges \n} from './utils/performanceUtils';\nimport { populateSampleLiteratureData, clearSampleData } from './utils/sampleDataUtils';\n\n// Use the environment variable for the backend URL, but provide a fallback\n// to the local server for development. This is a more robust pattern.\n// The .replace() call removes any trailing slashes to prevent \"404 Not Found\"\n// errors caused by double slashes in the request path (e.g., \"//api/\").\nconst BACKEND_URL = (process.env.REACT_APP_BACKEND_URL || 'http://localhost:8000').replace(/\\/$/, '');\nconst API = `${BACKEND_URL}/api`;\n\n// Fix ResizeObserver error that prevents React Flow from working\nconst debounce = (func, wait) => {\n  let timeout;\n  return function executedFunction(...args) {\n    const later = () => {\n      clearTimeout(timeout);\n      func(...args);\n    };\n    clearTimeout(timeout);\n    timeout = setTimeout(later, wait);\n  };\n};\n\n// Suppress ResizeObserver errors that don't affect functionality\nconst originalError = console.error;\nconsole.error = (...args) => {\n  if (args[0] && args[0].includes && args[0].includes('ResizeObserver loop')) {\n    return;\n  }\n  originalError(...args);\n};\n\n// Toast Notification System\nconst Toast = ({ message, type = 'success', onClose, duration = 3000 }) => {\n  useEffect(() => {\n    const timer = setTimeout(onClose, duration);\n    return () => clearTimeout(timer);\n  }, [onClose, duration]);\n\n  const getToastStyles = () => {\n    const baseStyles = \"fixed top-4 right-4 z-50 px-6 py-3 rounded-lg shadow-lg transition-all duration-500 transform\";\n    const typeStyles = {\n      success: \"bg-green-600 text-white border-l-4 border-green-400\",\n      error: \"bg-red-600 text-white border-l-4 border-red-400\",\n      info: \"bg-blue-600 text-white border-l-4 border-blue-400\",\n      saving: \"bg-purple-600 text-white border-l-4 border-purple-400\"\n    };\n    return `${baseStyles} ${typeStyles[type]}`;\n  };\n\n  const getIcon = () => {\n    switch (type) {\n      case 'success': return <CheckCircle2 size={16} className=\"mr-2\" />;\n      case 'error': return <AlertCircle size={16} className=\"mr-2\" />;\n      case 'info': return <Info size={16} className=\"mr-2\" />;\n      case 'saving': return <Loader2 size={16} className=\"mr-2 animate-spin\" />;\n      default: return <CheckCircle2 size={16} className=\"mr-2\" />;\n    }\n  };\n\n  return (\n    <div className={getToastStyles()}>\n      <div className=\"flex items-center\">\n        {getIcon()}\n        <span className=\"text-sm font-medium\">{message}</span>\n        <button\n          onClick={onClose}\n          className=\"ml-4 text-white hover:text-gray-200 transition-colors\"\n        >\n          <X size={14} />\n        </button>\n      </div>\n    </div>\n  );\n};\n\n// Enhanced Loading Button Component\nconst LoadingButton = ({ onClick, loading, disabled, children, className, icon: Icon, ...props }) => {\n  return (\n    <button\n      onClick={onClick}\n      disabled={disabled || loading}\n      className={`${className} transform transition-all duration-200 hover:scale-105 active:scale-95 ${disabled || loading ? 'cursor-not-allowed opacity-50' : 'hover:shadow-lg'\n        }`}\n      {...props}\n    >\n      <div className=\"flex items-center gap-2\">\n        {loading ? (\n          <Loader2 size={16} className=\"animate-spin\" />\n        ) : Icon ? (\n          <Icon size={16} />\n        ) : null}\n        {children}\n      </div>\n    </button>\n  );\n};\n\n// localStorage utilities with enhanced feedback\nconst STORAGE_KEY = 'pgy3_mindmap_data';\nconst STORAGE_VERSION = '1.1';\n\nconst localStorageUtils = {\n  // Save data to localStorage with debouncing and callback for UI feedback\n  save: (() => {\n    let timeoutId;\n    return (data, onSaveStart, onSaveComplete, isAnimating = false) => {\n      clearTimeout(timeoutId);\n\n      if (onSaveStart) onSaveStart();\n\n      // Increase debounce delay during animations\n      const debounceDelay = isAnimating ? 1200 : 800;\n\n      timeoutId = setTimeout(() => {\n        try {\n          const storageData = {\n            version: STORAGE_VERSION,\n            timestamp: new Date().toISOString(),\n            data: data\n          };\n          localStorage.setItem(STORAGE_KEY, JSON.stringify(storageData));\n          console.log('Mind map data auto-saved to localStorage');\n          if (onSaveComplete) onSaveComplete(true);\n        } catch (error) {\n          console.error('Error saving to localStorage:', error);\n          if (onSaveComplete) onSaveComplete(false, error);\n\n          if (error.name === 'QuotaExceededError') {\n            console.warn('localStorage quota exceeded, clearing old data...');\n            try {\n              localStorage.removeItem(STORAGE_KEY);\n            } catch (clearError) {\n              console.error('Error clearing localStorage:', clearError);\n            }\n          }\n        }\n      }, debounceDelay); // Variable debounce delay\n    };\n  })(),\n\n  // Load data from localStorage\n  load: () => {\n    try {\n      const stored = localStorage.getItem(STORAGE_KEY);\n      if (!stored) {\n        console.log('No localStorage data found');\n        return null;\n      }\n\n      const storageData = JSON.parse(stored);\n\n      // Version check\n      if (storageData.version !== STORAGE_VERSION) {\n        console.log('localStorage version mismatch, clearing old data');\n        localStorage.removeItem(STORAGE_KEY);\n        return null;\n      }\n\n      console.log('Mind map data loaded from localStorage', storageData.timestamp);\n      return storageData.data;\n    } catch (error) {\n      console.error('Error loading from localStorage:', error);\n      // Clear corrupted data\n      try {\n        localStorage.removeItem(STORAGE_KEY);\n      } catch (clearError) {\n        console.error('Error clearing corrupted localStorage:', clearError);\n      }\n      return null;\n    }\n  },\n\n  // Clear stored data\n  clear: () => {\n    try {\n      localStorage.removeItem(STORAGE_KEY);\n      console.log('localStorage data cleared');\n    } catch (error) {\n      console.error('Error clearing localStorage:', error);\n    }\n  },\n\n  // Get storage info\n  getStorageInfo: () => {\n    try {\n      const stored = localStorage.getItem(STORAGE_KEY);\n      if (!stored) return null;\n\n      const data = JSON.parse(stored);\n      return {\n        version: data.version,\n        timestamp: data.timestamp,\n        size: new Blob([stored]).size\n      };\n    } catch (error) {\n      return null;\n    }\n  }\n};\n\n// Enhanced CSV export utilities\nconst csvUtils = {\n  generatePatientCasesCSV: (cases, onProgress) => {\n    if (!cases || cases.length === 0) {\n      return '';\n    }\n\n    if (onProgress) onProgress(10, 'Preparing headers...');\n\n    // Enhanced CSV headers with more detailed information\n    const headers = [\n      'Case ID',\n      'Encounter Date',\n      'Primary Diagnosis',\n      'Secondary Diagnoses',\n      'Age',\n      'Gender',\n      'Chief Complaint',\n      'History of Present Illness',\n      'Medical History',\n      'Medications',\n      'Mental Status Exam',\n      'Assessment & Plan',\n      'Status',\n      'Notes',\n      'Created Date',\n      'Updated Date',\n      'Linked Topics Count',\n      'Last Modified By'\n    ];\n\n    if (onProgress) onProgress(30, 'Processing case data...');\n\n    // Convert cases to CSV rows with enhanced data\n    const rows = cases.map((caseItem, index) => {\n      if (onProgress) onProgress(30 + (index / cases.length) * 50, `Processing case ${index + 1}/${cases.length}...`);\n\n      return [\n        caseItem.case_id || '',\n        caseItem.encounter_date ? new Date(caseItem.encounter_date).toLocaleDateString() : '',\n        caseItem.primary_diagnosis || '',\n        Array.isArray(caseItem.secondary_diagnoses) ? caseItem.secondary_diagnoses.join('; ') : '',\n        caseItem.age || '',\n        caseItem.gender || '',\n        caseItem.chief_complaint || '',\n        caseItem.history_present_illness || '',\n        caseItem.medical_history || '',\n        Array.isArray(caseItem.medications) ? caseItem.medications.join('; ') : '',\n        caseItem.mental_status_exam || '',\n        caseItem.assessment_plan || '',\n        caseItem.status || '',\n        caseItem.notes || '',\n        caseItem.created_at ? new Date(caseItem.created_at).toLocaleDateString() : '',\n        caseItem.updated_at ? new Date(caseItem.updated_at).toLocaleDateString() : '',\n        Array.isArray(caseItem.linked_topics) ? caseItem.linked_topics.length : '0',\n        'PGY-3 System'\n      ];\n    });\n\n    if (onProgress) onProgress(85, 'Formatting CSV content...');\n\n    // Escape CSV values and join\n    const escapeCsvValue = (value) => {\n      const stringValue = String(value);\n      if (stringValue.includes(',') || stringValue.includes('\"') || stringValue.includes('\\n')) {\n        return `\"${stringValue.replace(/\"/g, '\"\"')}\"`;\n      }\n      return stringValue;\n    };\n\n    const csvContent = [\n      headers.map(escapeCsvValue).join(','),\n      ...rows.map(row => row.map(escapeCsvValue).join(','))\n    ].join('\\n');\n\n    if (onProgress) onProgress(100, 'CSV generation complete!');\n\n    return csvContent;\n  },\n\n  downloadCSV: (csvContent, filename = 'patient_cases.csv') => {\n    const blob = new Blob([csvContent], { type: 'text/csv;charset=utf-8;' });\n    const link = document.createElement('a');\n    const url = URL.createObjectURL(blob);\n\n    link.setAttribute('href', url);\n    link.setAttribute('download', filename);\n    link.style.visibility = 'hidden';\n\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n\n    URL.revokeObjectURL(url);\n  },\n\n  // Generate summary statistics\n  generateCasesSummary: (cases) => {\n    if (!cases || cases.length === 0) return null;\n\n    const diagnoses = {};\n    const statuses = {};\n    const ageGroups = { '18-30': 0, '31-50': 0, '51-70': 0, '70+': 0, 'Unknown': 0 };\n    const genders = {};\n\n    cases.forEach(caseItem => {\n      // Diagnoses\n      if (caseItem.primary_diagnosis) {\n        diagnoses[caseItem.primary_diagnosis] = (diagnoses[caseItem.primary_diagnosis] || 0) + 1;\n      }\n\n      // Status\n      if (caseItem.status) {\n        statuses[caseItem.status] = (statuses[caseItem.status] || 0) + 1;\n      }\n\n      // Age groups\n      if (caseItem.age) {\n        if (caseItem.age <= 30) ageGroups['18-30']++;\n        else if (caseItem.age <= 50) ageGroups['31-50']++;\n        else if (caseItem.age <= 70) ageGroups['51-70']++;\n        else ageGroups['70+']++;\n      } else {\n        ageGroups['Unknown']++;\n      }\n\n      // Gender\n      if (caseItem.gender) {\n        genders[caseItem.gender] = (genders[caseItem.gender] || 0) + 1;\n      }\n    });\n\n    return {\n      totalCases: cases.length,\n      diagnoses,\n      statuses,\n      ageGroups,\n      genders\n    };\n  }\n};\n\n// Enhanced Custom Node Components - extracted to separate files for better maintainability\n\n\n\n// Enhanced Dedicated Editing Form Component\nconst EnhancedEditingForm = ({ type, data, onClose, onSave, onDelete }) => {\n  // Initialize formData with proper field structure based on node type\n  const getInitialFormData = (type, data) => {\n    const baseData = data || {};\n    \n    switch (type) {\n      case 'case':\n        return {\n          case_id: '',\n          age: '',\n          primary_diagnosis: '',\n          gender: '',\n          chiefComplaint: '',\n          initialPresentation: '',\n          currentPresentation: '',\n          medicationHistory: '',\n          therapyProgress: '',\n          defensePatterns: '',\n          clinicalReflection: '',\n          ...baseData // Existing data takes precedence\n        };\n      case 'topic':\n        return {\n          title: '',\n          category: '',\n          color: '#3B82F6',\n          description: '',\n          notes: '',\n          tags: [],\n          ...baseData\n        };\n      case 'task':\n        return {\n          title: '',\n          description: '',\n          status: 'pending',\n          priority: 'medium',\n          due_date: '',\n          ...baseData\n        };\n      case 'literature':\n        return {\n          title: '',\n          authors: '',\n          year: '',\n          doi: '',\n          abstract: '',\n          notes: '',\n          tags: [],\n          ...baseData\n        };\n      default:\n        return baseData;\n    }\n  };\n\n  const [formData, setFormData] = useState(() => getInitialFormData(type, data));\n  const [activeTab, setActiveTab] = useState('basic');\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [errors, setErrors] = useState({});\n\n  // Update formData when data prop changes\n  useEffect(() => {\n    setFormData(getInitialFormData(type, data));\n  }, [type, data]);\n\n  const tabs = {\n    basic: 'Basic Info',\n    details: 'Details',\n    notes: 'Notes & Tags',\n    history: 'History'\n  };\n\n  const validateForm = () => {\n    const newErrors = {};\n\n    switch (type) {\n      case 'topic':\n        if (!formData.title?.trim()) newErrors.title = 'Title is required';\n        if (!formData.category?.trim()) newErrors.category = 'Category is required';\n        break;\n      case 'case':\n        if (!formData.case_id?.trim()) newErrors.case_id = 'Case ID is required';\n        if (!formData.primary_diagnosis?.trim()) newErrors.primary_diagnosis = 'Primary diagnosis is required';\n        break;\n      case 'task':\n        if (!formData.title?.trim()) newErrors.title = 'Title is required';\n        break;\n      case 'literature':\n        if (!formData.title?.trim()) newErrors.title = 'Title is required';\n        if (!formData.authors?.trim()) newErrors.authors = 'Authors are required';\n        break;\n    }\n\n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  };\n\n  const handleSubmit = async () => {\n    if (!validateForm()) return;\n\n    setIsSubmitting(true);\n    try {\n      await onSave(formData);\n    } catch (error) {\n      console.error('Error saving:', error);\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n\n  const updateFormData = (field, value) => {\n    setFormData(prev => ({ ...prev, [field]: value }));\n    if (errors[field]) {\n      setErrors(prev => ({ ...prev, [field]: null }));\n    }\n  };\n\n  const renderBasicTab = () => {\n    switch (type) {\n      case 'topic':\n        return (\n          <div className=\"space-y-4\">\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-1\">Title *</label>\n              <input\n                type=\"text\"\n                value={formData.title || ''}\n                onChange={(e) => updateFormData('title', e.target.value)}\n                className={`w-full p-3 border rounded-lg focus:ring-2 focus:ring-blue-500 ${errors.title ? 'border-red-500' : 'border-gray-300'\n                  }`}\n                placeholder=\"Enter topic title\"\n              />\n              {errors.title && <p className=\"text-red-500 text-xs mt-1\">{errors.title}</p>}\n            </div>\n\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-1\">Category *</label>\n              <select\n                value={formData.category || ''}\n                onChange={(e) => updateFormData('category', e.target.value)}\n                className={`w-full p-3 border rounded-lg focus:ring-2 focus:ring-blue-500 ${errors.category ? 'border-red-500' : 'border-gray-300'\n                  }`}\n              >\n                <option value=\"\">Select category</option>\n                <option value=\"Mood Disorders\">Mood Disorders</option>\n                <option value=\"Anxiety Disorders\">Anxiety Disorders</option>\n                <option value=\"Psychotic Disorders\">Psychotic Disorders</option>\n                <option value=\"Personality Disorders\">Personality Disorders</option>\n                <option value=\"Substance Use Disorders\">Substance Use Disorders</option>\n                <option value=\"Other\">Other</option>\n              </select>\n              {errors.category && <p className=\"text-red-500 text-xs mt-1\">{errors.category}</p>}\n            </div>\n\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-1\">Color Theme</label>\n              <div className=\"flex gap-2\">\n                {['#3B82F6', '#EF4444', '#10B981', '#F59E0B', '#8B5CF6', '#EC4899'].map(color => (\n                  <button\n                    key={color}\n                    onClick={() => updateFormData('color', color)}\n                    className={`w-8 h-8 rounded-full border-2 ${formData.color === color ? 'border-gray-800' : 'border-gray-300'\n                      }`}\n                    style={{ backgroundColor: color }}\n                  />\n                ))}\n              </div>\n            </div>\n          </div>\n        );\n\n      case 'case':\n        return (\n          <div className=\"space-y-4\">\n            <div className=\"grid grid-cols-2 gap-4\">\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-1\">Case ID *</label>\n                <input\n                  type=\"text\"\n                  value={formData.case_id || ''}\n                  onChange={(e) => updateFormData('case_id', e.target.value)}\n                  className={`w-full p-3 border rounded-lg focus:ring-2 focus:ring-blue-500 ${errors.case_id ? 'border-red-500' : 'border-gray-300'\n                    }`}\n                  placeholder=\"CASE-001\"\n                />\n                {errors.case_id && <p className=\"text-red-500 text-xs mt-1\">{errors.case_id}</p>}\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-1\">Age</label>\n                <input\n                  type=\"number\"\n                  value={formData.age || ''}\n                  onChange={(e) => updateFormData('age', e.target.value)}\n                  className=\"w-full p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500\"\n                  min=\"0\"\n                  max=\"120\"\n                />\n              </div>\n            </div>\n\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-1\">Primary Diagnosis *</label>\n              <input\n                type=\"text\"\n                value={formData.primary_diagnosis || ''}\n                onChange={(e) => updateFormData('primary_diagnosis', e.target.value)}\n                className={`w-full p-3 border rounded-lg focus:ring-2 focus:ring-blue-500 ${errors.primary_diagnosis ? 'border-red-500' : 'border-gray-300'\n                  }`}\n                placeholder=\"Enter primary diagnosis\"\n              />\n              {errors.primary_diagnosis && <p className=\"text-red-500 text-xs mt-1\">{errors.primary_diagnosis}</p>}\n            </div>\n\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-1\">Gender</label>\n              <select\n                value={formData.gender || ''}\n                onChange={(e) => updateFormData('gender', e.target.value)}\n                className=\"w-full p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500\"\n              >\n                <option value=\"\">Select gender</option>\n                <option value=\"Male\">Male</option>\n                <option value=\"Female\">Female</option>\n                <option value=\"Non-binary\">Non-binary</option>\n                <option value=\"Other\">Other</option>\n              </select>\n            </div>\n\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-1\">Chief Complaint</label>\n              <textarea\n                value={formData.chiefComplaint || ''}\n                onChange={(e) => updateFormData('chiefComplaint', e.target.value)}\n                className=\"w-full p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500\"\n                rows={2}\n                placeholder=\"Describe the primary concern\"\n              />\n            </div>\n\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-1\">Initial Presentation</label>\n              <textarea\n                value={formData.initialPresentation || ''}\n                onChange={(e) => updateFormData('initialPresentation', e.target.value)}\n                className=\"w-full p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500\"\n                rows={3}\n                placeholder=\"Symptoms and context at first visit\"\n              />\n            </div>\n\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-1\">Current Presentation</label>\n              <textarea\n                value={formData.currentPresentation || ''}\n                onChange={(e) => updateFormData('currentPresentation', e.target.value)}\n                className=\"w-full p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500\"\n                rows={3}\n                placeholder=\"Describe how the case looks now\"\n              />\n            </div>\n\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-1\">Medication History</label>\n              <textarea\n                value={formData.medicationHistory || ''}\n                onChange={(e) => updateFormData('medicationHistory', e.target.value)}\n                className=\"w-full p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500\"\n                rows={2}\n                placeholder=\"e.g. SSRI trials, mood stabilizers, etc.\"\n              />\n            </div>\n\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-1\">Therapy Progress</label>\n              <textarea\n                value={formData.therapyProgress || ''}\n                onChange={(e) => updateFormData('therapyProgress', e.target.value)}\n                className=\"w-full p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500\"\n                rows={2}\n                placeholder=\"How the patient has responded to therapy\"\n              />\n            </div>\n\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-1\">Defense Patterns</label>\n              <textarea\n                value={formData.defensePatterns || ''}\n                onChange={(e) => updateFormData('defensePatterns', e.target.value)}\n                className=\"w-full p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500\"\n                rows={2}\n                placeholder=\"e.g. projection, denial, rationalization\"\n              />\n            </div>\n\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-1\">Clinical Reflection</label>\n              <textarea\n                value={formData.clinicalReflection || ''}\n                onChange={(e) => updateFormData('clinicalReflection', e.target.value)}\n                className=\"w-full p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500\"\n                rows={3}\n                placeholder=\"Your thoughts or questions about the case\"\n              />\n            </div>\n          </div>\n        );\n\n      default:\n        return <div>Basic form for {type}</div>;\n    }\n  };\n\n  return (\n    <div className=\"fixed inset-0 bg-black bg-opacity-60 flex items-center justify-center z-50 backdrop-blur-sm\">\n      <div className=\"bg-white rounded-xl shadow-2xl max-w-4xl w-full mx-4 max-h-[90vh] overflow-hidden\">\n        {/* Header */}\n        <div className=\"bg-gradient-to-r from-blue-600 to-purple-600 text-white p-6\">\n          <div className=\"flex items-center justify-between\">\n            <h2 className=\"text-xl font-semibold capitalize flex items-center gap-2\">\n              <Sparkles size={20} />\n              Enhanced {type} Editor\n            </h2>\n            <button\n              onClick={onClose}\n              className=\"text-white hover:text-gray-200 transition-colors\"\n            >\n              <X size={24} />\n            </button>\n          </div>\n        </div>\n\n        {/* Tabs */}\n        <div className=\"border-b border-gray-200\">\n          <div className=\"flex\">\n            {Object.entries(tabs).map(([key, label]) => (\n              <button\n                key={key}\n                onClick={() => setActiveTab(key)}\n                className={`px-6 py-3 text-sm font-medium transition-colors ${activeTab === key\n                    ? 'border-b-2 border-blue-500 text-blue-600 bg-blue-50'\n                    : 'text-gray-500 hover:text-gray-700'\n                  }`}\n              >\n                {label}\n              </button>\n            ))}\n          </div>\n        </div>\n\n        {/* Content */}\n        <div className=\"p-6 overflow-y-auto max-h-[calc(90vh-200px)]\">\n          {activeTab === 'basic' && renderBasicTab()}\n          {activeTab === 'details' && <div>Details content for {type}</div>}\n          {activeTab === 'notes' && <div>Notes and tags content</div>}\n          {activeTab === 'history' && <div>History content</div>}\n        </div>\n\n        {/* Footer */}\n        <div className=\"bg-gray-50 px-6 py-4 flex items-center justify-between border-t\">\n          <div className=\"flex gap-2\">\n            {onDelete && (\n              <LoadingButton\n                onClick={onDelete}\n                icon={Trash2}\n                className=\"bg-red-600 hover:bg-red-700 text-white px-4 py-2 rounded-lg\"\n              >\n                Delete\n              </LoadingButton>\n            )}\n          </div>\n\n          <div className=\"flex gap-2\">\n            <button\n              onClick={onClose}\n              className=\"px-4 py-2 text-gray-600 hover:text-gray-800 border border-gray-300 rounded-lg hover:bg-gray-100 transition-colors\"\n            >\n              Cancel\n            </button>\n            <LoadingButton\n              onClick={handleSubmit}\n              loading={isSubmitting}\n              icon={isSubmitting ? Loader2 : Save}\n              className=\"bg-blue-600 hover:bg-blue-700 text-white px-4 py-2 rounded-lg\"\n            >\n              {isSubmitting ? 'Saving...' : 'Save Changes'}\n            </LoadingButton>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\nconst NodeSelector = ({ isOpen, onClose, onSelect }) => {\n  const [selectedNodeType, setSelectedNodeType] = useState(null);\n\n  // When the modal is closed, reset the internal state\n  useEffect(() => {\n    if (!isOpen) {\n      // Add a small delay to allow the closing animation to finish before state reset\n      const timer = setTimeout(() => setSelectedNodeType(null), 300);\n      return () => clearTimeout(timer);\n    }\n  }, [isOpen]);\n\n  if (!isOpen) return null;\n\n  const nodeTypes = [\n    { type: 'topic', label: 'Psychiatric Topic', icon: Brain, color: 'bg-blue-600', description: 'Add a new psychiatric topic or disorder' },\n    { type: 'literature', label: 'Literature', icon: BookOpen, color: 'bg-purple-600', description: 'Add research papers, articles, or references' },\n    { type: 'case', label: 'Patient Case', icon: Users, color: 'bg-indigo-600', description: 'Add a new patient case study' },\n    { type: 'task', label: 'Task', icon: CheckSquare, color: 'bg-amber-600', description: 'Add a task or to-do item' }\n  ];\n\n  const handleNodeTypeSelect = (nodeType) => {\n    setSelectedNodeType(nodeType);\n  };\n\n  const handleFinalSelect = () => {\n    onSelect(selectedNodeType);\n    onClose();\n  };\n\n  return (\n    <div className=\"fixed inset-0 bg-black bg-opacity-60 flex items-center justify-center z-50 backdrop-blur-sm animate-in fade-in-25 duration-300\">\n      <div className=\"bg-white rounded-xl shadow-2xl p-6 max-w-md w-full mx-4 transform transition-all duration-300 ease-out\">\n        {/* Header */}\n        <div className=\"flex items-center justify-between mb-6\">\n          <div className=\"flex items-center gap-3\">\n            {selectedNodeType && (\n              <button\n                onClick={() => setSelectedNodeType(null)}\n                className=\"text-gray-400 hover:text-gray-600 p-1 rounded-full hover:bg-gray-100 transition-colors\"\n              >\n                <ArrowLeft size={20} />\n              </button>\n            )}\n            <h3 className=\"text-xl font-semibold text-gray-800\">\n              {selectedNodeType ? `Create ${selectedNodeType}` : 'Add New Node'}\n            </h3>\n          </div>\n          <button\n            onClick={onClose}\n            className=\"text-gray-400 hover:text-gray-600 p-1\"\n          >\n            <X size={20} />\n          </button>\n        </div>\n\n        <div className=\"relative overflow-hidden\" style={{ minHeight: '200px' }}>\n          {/* View 1: Node Type Selection */}\n          <div className={`transition-transform duration-300 ease-in-out ${selectedNodeType ? '-translate-x-full opacity-0' : 'translate-x-0 opacity-100'}`}>\n            <div className=\"space-y-3\">\n              {nodeTypes.map(({ type, label, icon: Icon, color, description }) => (\n                <button\n                  key={type}\n                  onClick={() => handleNodeTypeSelect(type)}\n                  className=\"w-full flex items-center gap-4 p-4 rounded-lg border-2 border-gray-200 hover:border-blue-400 hover:bg-blue-50 transition-all text-left\"\n                >\n                  <div className={`${color} p-2 rounded-lg text-white`}>\n                    <Icon size={20} />\n                  </div>\n                  <div>\n                    <div className=\"font-medium text-gray-800\">{label}</div>\n                    <div className=\"text-sm text-gray-500\">{description}</div>\n                  </div>\n                </button>\n              ))}\n            </div>\n          </div>\n\n          {/* View 2: Node Creation */}\n          <div className={`absolute top-0 left-0 w-full transition-transform duration-300 ease-in-out ${selectedNodeType ? 'translate-x-0 opacity-100' : 'translate-x-full opacity-0'}`}>\n            {selectedNodeType && (\n              <div className=\"space-y-3\">\n                {/* Create Blank Option */}\n                <button\n                  onClick={() => handleFinalSelect()}\n                  className=\"w-full flex items-center gap-4 p-4 rounded-lg border-2 border-dashed border-gray-300 hover:border-blue-400 hover:bg-blue-50 transition-all text-left\"\n                >\n                  <div className=\"bg-gray-200 p-2 rounded-lg text-gray-600\">\n                    <Plus size={20} />\n                  </div>\n                  <div>\n                    <div className=\"font-medium text-gray-800\">Create Blank {selectedNodeType}</div>\n                    <div className=\"text-sm text-gray-500\">Start with an empty node.</div>\n                  </div>\n                </button>\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\n// Edge Label Modal Component\nconst EdgeLabelModal = ({ edge, isOpen, onClose, onSave }) => {\n  const [label, setLabel] = useState(edge?.label || '');\n\n  // Update label when edge changes\n  useEffect(() => {\n    setLabel(edge?.label || '');\n  }, [edge]);\n\n  const handleSave = () => {\n    onSave(edge.id, label);\n    onClose();\n  };\n\n  const handleKeyPress = (e) => {\n    if (e.key === 'Enter') {\n      handleSave();\n    } else if (e.key === 'Escape') {\n      onClose();\n    }\n  };\n\n  if (!isOpen || !edge) return null;\n\n  return (\n    <div className=\"fixed inset-0 bg-black bg-opacity-60 flex items-center justify-center z-50 backdrop-blur-sm\">\n      <div className=\"bg-white rounded-xl shadow-2xl p-6 max-w-md w-full mx-4 transform transition-all\">\n        <div className=\"flex items-center justify-between mb-6\">\n          <h3 className=\"text-xl font-semibold text-gray-800\">Edit Connection Label</h3>\n          <button\n            onClick={onClose}\n            className=\"text-gray-400 hover:text-gray-600 p-1 transition-colors\"\n          >\n            <X size={20} />\n          </button>\n        </div>\n\n        <div className=\"mb-6\">\n          <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n            Connection Label\n          </label>\n          <input\n            type=\"text\"\n            value={label}\n            onChange={(e) => setLabel(e.target.value)}\n            onKeyPress={handleKeyPress}\n            placeholder=\"Enter a label for this connection...\"\n            className=\"w-full p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all\"\n            autoFocus\n          />\n          <p className=\"text-xs text-gray-500 mt-1\">\n            Press Enter to save, Escape to cancel\n          </p>\n        </div>\n\n        <div className=\"flex items-center justify-end gap-3\">\n          <button\n            onClick={onClose}\n            className=\"px-4 py-2 text-gray-600 hover:text-gray-800 border border-gray-300 rounded-lg hover:bg-gray-100 transition-colors\"\n          >\n            Cancel\n          </button>\n          <button\n            onClick={handleSave}\n            className=\"px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors flex items-center gap-2\"\n          >\n            <Save size={16} />\n            Save Label\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\n// Enhanced Main Dashboard Component with improved visual effects\nconst DashboardComponent = () => {\n  const { fitView, setCenter, zoomTo, getViewport } = useReactFlow();\n\n  const [nodes, setNodes, onNodesChange] = useNodesState([]);\n  const [edges, setEdges, onEdgesChange] = useEdgesState([]);\n\n  // State for forcing node updates\n  const [nodeUpdateTrigger, setNodeUpdateTrigger] = useState(0);\n\n  const [mindMapData, setMindMapData] = useState({\n    topics: [],\n    cases: [],\n    tasks: [],\n    literature: [],\n    connections: []\n  });\n\n  const [isEditing, setIsEditing] = useState(false);\n  const [selectedNode, setSelectedNode] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [loadingProgress, setLoadingProgress] = useState(0);\n  const [loadingMessage, setLoadingMessage] = useState('Initializing...');\n  const [isInitialLoad, setIsInitialLoad] = useState(true);\n  const [focusedCategory, setFocusedCategory] = useState(null);\n  const [showNodeSelector, setShowNodeSelector] = useState(false);\n  // Specialized modal state for each node type with stable data references\n  const [caseModal, setCaseModal] = useState({ isOpen: false, data: null });\n  const [topicModal, setTopicModal] = useState({ isOpen: false, data: null });\n  const [taskModal, setTaskModal] = useState({ isOpen: false, data: null });\n  const caseModalStableData = useRef(null);\n  const topicModalStableData = useRef(null);\n  const taskModalStableData = useRef(null);\n  const [isReactFlowReady, setIsReactFlowReady] = useState(false);\n  const [hasAppliedInitialLayout, setHasAppliedInitialLayout] = useState(false);\n  const [isExportingCSV, setIsExportingCSV] = useState(false);\n  const [lastSaved, setLastSaved] = useState(null);\n  const [isSaving, setIsSaving] = useState(false);\n  const [edgeModal, setEdgeModal] = useState({ isOpen: false, edge: null });\n  const [toasts, setToasts] = useState([]);\n  const [literatureModal, setLiteratureModal] = useState({ isOpen: false, data: null });\n  const [isAnimating, setIsAnimating] = useState(false); // Track animation state\n  const [modalAnimationStates, setModalAnimationStates] = useState({\n    case: false,\n    topic: false,\n    task: false,\n    literature: false\n  });\n  const addToast = useCallback((message, type = 'success', duration = 3000) => {\n    const id = Date.now();\n    const newToast = { id, message, type, duration };\n    setToasts(prev => [...prev, newToast]);\n  }, []);\n\n  const removeToast = useCallback((id) => {\n    setToasts(prev => prev.filter(toast => toast.id !== id));\n  }, []);\n\n  const autoSaveMindMapData = useCallback((data) => {\n    // Enhanced animation and modal state checking\n    const anyModalOpen = caseModal.isOpen || topicModal.isOpen || taskModal.isOpen || literatureModal.isOpen;\n    const anyModalAnimating = Object.values(modalAnimationStates).some(state => state);\n    const anyModalTransitioning = (caseModal.isOpen && caseModal.data?.isTabTransitioning) || \n                                  (topicModal.isOpen && topicModal.data?.isTabTransitioning) ||\n                                  (taskModal.isOpen && taskModal.data?.isTabTransitioning);\n    \n    if (isAnimating || anyModalOpen || anyModalTransitioning || anyModalAnimating) {\n      console.log('Deferring auto-save during animation, modal interaction, or tab transition');\n      // Use a longer delay and exponential backoff for persistent animation states\n      const delay = anyModalTransitioning || anyModalAnimating ? 2000 : 1000;\n      setTimeout(() => autoSaveMindMapData(data), delay);\n      return;\n    }\n\n    const onSaveStart = () => setIsSaving(true);\n    const onSaveComplete = (success, error) => {\n      setIsSaving(false);\n      if (success) {\n        setLastSaved(new Date());\n        // Reduce toast frequency during auto-save to prevent UI distractions\n        // addToast('Data auto-saved', 'saving', 1000);\n      } else {\n        addToast('Auto-save failed', 'error', 4000);\n        console.error('Auto-save error:', error);\n      }\n    };\n\n    localStorageUtils.save(data, onSaveStart, onSaveComplete, isAnimating);\n    // Use requestIdleCallback for backend saves to avoid blocking animations\n    if (window.requestIdleCallback) {\n      window.requestIdleCallback(() => {\n        // Double-check animation state before backend save\n        const stillAnimating = isAnimating || Object.values(modalAnimationStates).some(state => state);\n        if (!stillAnimating) {\n          saveToBackend(data);\n        }\n      }, { timeout: 5000 });\n    } else {\n      setTimeout(() => {\n        const stillAnimating = isAnimating || Object.values(modalAnimationStates).some(state => state);\n        if (!stillAnimating) {\n          saveToBackend(data);\n        }\n      }, 100); // Longer delay fallback\n    }\n  }, [addToast, isAnimating, modalAnimationStates, caseModal.isOpen, topicModal.isOpen, taskModal.isOpen, literatureModal.isOpen]);\n\n  // Separate function for position-only updates (more frequent, less critical)\n  const autoSavePositionData = useCallback((data) => {\n    // Enhanced checks for animation states\n    const anyModalOpen = caseModal.isOpen || topicModal.isOpen || taskModal.isOpen || literatureModal.isOpen;\n    const anyModalAnimating = Object.values(modalAnimationStates).some(state => state);\n    if (isAnimating || anyModalOpen || anyModalAnimating) return;\n    \n    // Save to localStorage immediately\n    localStorageUtils.save(data, null, null, isAnimating);\n    \n    // Also save to backend with a small delay to batch updates\n    clearTimeout(window.positionBackendSaveTimeout);\n    window.positionBackendSaveTimeout = setTimeout(() => {\n      // Call saveToBackend indirectly to avoid initialization issues\n      autoSaveMindMapData(data);\n    }, 800); // 800ms delay to batch multiple position changes\n  }, [isAnimating, modalAnimationStates, caseModal.isOpen, topicModal.isOpen, taskModal.isOpen, literatureModal.isOpen, autoSaveMindMapData]);\n\n  // Stable data effects to prevent modal re-renders during auto-save\n  useEffect(() => {\n    if (caseModal.isOpen && caseModal.data) {\n      // Store stable reference when modal opens\n      caseModalStableData.current = { ...caseModal.data };\n    } else if (!caseModal.isOpen) {\n      // Clear reference when modal closes\n      caseModalStableData.current = null;\n    }\n  }, [caseModal.isOpen, caseModal.data?.id]);\n\n  useEffect(() => {\n    if (topicModal.isOpen && topicModal.data) {\n      topicModalStableData.current = { ...topicModal.data };\n    } else if (!topicModal.isOpen) {\n      topicModalStableData.current = null;\n    }\n  }, [topicModal.isOpen, topicModal.data?.id]);\n\n  useEffect(() => {\n    if (taskModal.isOpen && taskModal.data) {\n      taskModalStableData.current = { ...taskModal.data };\n    } else if (!taskModal.isOpen) {\n      taskModalStableData.current = null;\n    }\n  }, [taskModal.isOpen, taskModal.data?.id]);\n\nconst handleDeleteNode = useCallback((fullNodeId) => {\n  // fullNodeId is always in the format `${nodeType}-${id}`\n  console.log(`Deleting node with full ID:`, fullNodeId);\n\n  // Extract nodeType and id from fullNodeId\n  const [nodeType, ...idParts] = fullNodeId.split('-');\n  const nodeId = idParts.join('-');\n  const collectionKey = nodeType === 'literature' ? 'literature' : `${nodeType}s`;\n\n  setMindMapData(prevData => {\n    // Remove the node from its collection\n    const updatedCollection = (prevData[collectionKey] || []).filter(item => String(item.id) !== nodeId);\n    // Remove any connections that are attached to the deleted node\n    const updatedConnections = (prevData.connections || []).filter(\n      conn => conn.source !== fullNodeId && conn.target !== fullNodeId\n    );\n    const newData = {\n      ...prevData,\n      [collectionKey]: updatedCollection,\n      connections: updatedConnections,\n    };\n    autoSaveMindMapData(newData);\n    addToast(`${nodeType.charAt(0).toUpperCase() + nodeType.slice(1)} deleted.`, 'success');\n    return newData;\n  });\n  // Remove the node from the visual state\n  setNodes((nds) => nds.filter((node) => node.id !== fullNodeId));\n  // Remove edges referencing this node\n  setEdges((eds) => eds.filter((edge) => edge.source !== fullNodeId && edge.target !== fullNodeId));\n}, [setMindMapData, autoSaveMindMapData, addToast, setNodes, setEdges]);\n\n// Handle literature node click to open modal\nconst handleLiteratureClick = useCallback((literatureData) => {\n  setIsAnimating(true); // Set animation state\n  setLiteratureModal({ isOpen: true, data: literatureData });\n  // Clear animation state after modal animation completes\n  setTimeout(() => setIsAnimating(false), 700); // 600ms modal animation + 100ms buffer\n}, []);\n\n// Enhanced node sync function that forces React Flow re-renders\nconst syncNodeData = useCallback(() => {\n  console.log('syncNodeData called - syncing node colors and labels');\n  \n  setNodes(currentNodes => {\n    let hasChanges = false;\n    const updatedNodes = currentNodes.map(node => {\n      const nodeType = node.id.split('-')[0];\n      const nodeId = node.id.split('-')[1];\n      \n      let newLabel = node.data.label;\n      let newColor = node.data.color;\n      let needsUpdate = false;\n      \n      // Find the corresponding data item and sync properties\n      if (nodeType === 'case') {\n        const caseData = mindMapData.cases?.find(c => String(c.id) === nodeId);\n        if (caseData) {\n          const expectedLabel = caseData.primaryDiagnosis || caseData.primary_diagnosis || caseData.title || 'Untitled Case';\n          if (expectedLabel !== node.data.label) {\n            newLabel = expectedLabel;\n            needsUpdate = true;\n          }\n        }\n      } else if (nodeType === 'topic') {\n        const topicData = mindMapData.topics?.find(t => String(t.id) === nodeId);\n        if (topicData) {\n          const expectedLabel = topicData.title || 'Untitled Topic';\n          const expectedColor = topicData.color || '#3B82F6';\n          \n          if (expectedLabel !== node.data.label) {\n            newLabel = expectedLabel;\n            needsUpdate = true;\n          }\n          \n          if (expectedColor !== node.data.color) {\n            newColor = expectedColor;\n            needsUpdate = true;\n            console.log(`Topic ${nodeId}: Color changing from ${node.data.color} to ${expectedColor}`);\n          }\n        }\n      } else if (nodeType === 'task') {\n        const taskData = mindMapData.tasks?.find(t => String(t.id) === nodeId);\n        if (taskData) {\n          const expectedLabel = taskData.title || 'Untitled Task';\n          if (expectedLabel !== node.data.label) {\n            newLabel = expectedLabel;\n            needsUpdate = true;\n          }\n        }\n      } else if (nodeType === 'literature') {\n        const literatureData = mindMapData.literature?.find(l => String(l.id) === nodeId);\n        if (literatureData) {\n          const expectedLabel = literatureData.title || 'Untitled Literature';\n          if (expectedLabel !== node.data.label) {\n            newLabel = expectedLabel;\n            needsUpdate = true;\n          }\n        }\n      }\n      \n      // Create entirely new node object if something changed (forces React Flow re-render)\n      if (needsUpdate) {\n        hasChanges = true;\n        // Force React to treat this as a completely new object\n        const timestamp = Date.now();\n        const newNode = {\n          id: node.id,\n          type: node.type,\n          position: { ...node.position },\n          data: {\n            ...node.data,\n            label: newLabel,\n            color: newColor,\n            // Add timestamp to force re-render\n            lastUpdated: timestamp\n          },\n          // Force new style object for topic nodes\n          style: nodeType === 'topic' ? {\n            backgroundColor: newColor,\n            color: 'white',\n            boxShadow: `0 4px 20px ${newColor}20`,\n            transition: 'all 0.7s cubic-bezier(0.34, 1.56, 0.64, 1), transform 0.3s ease',\n            // Force React to detect change\n            zIndex: timestamp % 1000\n          } : node.style,\n          // Add a rendering key to force React Flow update\n          key: `${node.id}-${timestamp}`\n        };\n        \n        return newNode;\n      }\n      \n      return node;\n    });\n    \n    if (hasChanges) {\n      console.log('syncNodeData: Changes detected, updating nodes with forced re-render');\n      // Return completely new array to force React Flow update\n      return [...updatedNodes];\n    } else {\n      console.log('syncNodeData: No changes needed');\n      return currentNodes;\n    }\n  });\n}, [mindMapData, setNodes]);\n\n// Trigger auto-sync when mindMapData changes with enhanced detection\nuseEffect(() => {\n  const hasData = mindMapData && (mindMapData.cases?.length > 0 || mindMapData.topics?.length > 0 || \n                                 mindMapData.tasks?.length > 0 || mindMapData.literature?.length > 0);\n  \n  if (hasData) {\n    // Add small delay to ensure state has settled\n    const timeoutId = setTimeout(() => {\n      console.log('useEffect triggered syncNodeData due to mindMapData change');\n      syncNodeData();\n    }, 50);\n    \n    // If we don't have nodes but we have data, convert data to React Flow\n    if (nodes.length === 0) {\n      console.log('Converting data to React Flow nodes due to data change');\n      // Use a timeout to avoid dependency issues and ensure state is stable\n      setTimeout(() => {\n        convertDataToReactFlow(mindMapData, false); // CHANGED: Don't apply force layout automatically\n      }, 100);\n    }\n    \n    return () => clearTimeout(timeoutId);\n  }\n}, [mindMapData, syncNodeData, nodes.length]); // Updated to use syncNodeData\n\n// Force node update when trigger changes\nuseEffect(() => {\n  if (nodeUpdateTrigger > 0) {\n    console.log('Force update triggered by nodeUpdateTrigger:', nodeUpdateTrigger);\n    setTimeout(() => {\n      syncNodeData();\n    }, 100);\n  }\n}, [nodeUpdateTrigger, syncNodeData]);\n\n  const convertDataToReactFlow = useCallback(async (data, applyLayoutImmediately = false) => {\n    // Use optimized quick layout for initial load\n    const allItems = [\n      ...data.topics.map(item => ({ ...item, type: 'topic' })),\n      ...data.cases.map(item => ({ ...item, type: 'case' })),\n      ...data.tasks.map(item => ({ ...item, type: 'task' })),\n      ...data.literature.map(item => ({ ...item, type: 'literature' }))\n    ];\n\n    // If we have data and need immediate layout, apply force layout to positions\n    let layoutNodes;\n    \n    // Check if nodes already have positions - if they do, don't override with force layout\n    const hasExistingPositions = allItems.some(item => \n      item.position && typeof item.position.x === 'number' && typeof item.position.y === 'number'\n    );\n    \n    if (allItems.length > 0 && applyLayoutImmediately && !hasExistingPositions) {\n      try {\n        // Lazy load D3 force simulation for initial positioning\n        const { \n          forceSimulation, \n          forceManyBody, \n          forceLink, \n          forceCenter, \n          forceCollide \n        } = await loadD3Force();\n\n        // Create nodes for simulation\n        const simulationNodes = allItems.map((item, index) => ({\n          id: `${item.type}-${item.id}`,\n          x: item.position?.x || (Math.random() - 0.5) * 200,\n          y: item.position?.y || (Math.random() - 0.5) * 200,\n          type: item.type\n        }));\n\n        // Create D3-compatible edge objects\n        const d3Edges = (data.connections || []).map(edge => ({\n          source: edge.source,\n          target: edge.target,\n          id: edge.id\n        })).filter(edge => {\n          const nodeIds = new Set(simulationNodes.map(n => n.id));\n          return nodeIds.has(edge.source) && nodeIds.has(edge.target);\n        });\n\n        // Run simulation synchronously for initial layout\n        const simulation = forceSimulation(simulationNodes)\n          .force('link', forceLink(d3Edges).id(d => d.id).distance(200).strength(0.5))\n          .force('charge', forceManyBody().strength(-800).distanceMax(400))\n          .force('center', forceCenter(window.innerWidth / 3, window.innerHeight / 2))\n          .force('collision', forceCollide().radius(80))\n          .stop();\n\n        // Run enough ticks to get a good layout\n        for (let i = 0; i < 300; i++) {\n          simulation.tick();\n        }\n\n        // Create a map of positioned nodes\n        const positionMap = new Map();\n        simulationNodes.forEach(node => {\n          positionMap.set(node.id, { x: node.x, y: node.y });\n        });\n\n        layoutNodes = allItems.map(item => {\n          const nodeId = `${item.type}-${item.id}`;\n          const position = positionMap.get(nodeId) || { x: 0, y: 0 };\n          return { ...item, position };\n        });\n      } catch (error) {\n        console.warn('Failed to apply initial layout, using fallback positioning:', error);\n        layoutNodes = allItems;\n      }\n    } else {\n      layoutNodes = allItems;\n    }\n\n    // Quick layout without expensive calculations - ensure all nodes get proper positions\n    const quickNodes = (layoutNodes || allItems).map((item, index) => {\n      const nodeId = `${item.type}-${item.id}`;\n      \n      // Convert case fields efficiently\n      const nodeData = item.type === 'case' ? {\n        ...item,\n        chiefComplaint: item.chiefComplaint || item.chief_complaint || '',\n        initialPresentation: item.initialPresentation || item.initial_presentation || '',\n        currentPresentation: item.currentPresentation || item.current_presentation || '',\n        medicationHistory: item.medicationHistory || item.medication_history || '',\n        therapyProgress: item.therapyProgress || item.therapy_progress || '',\n        defensePatterns: item.defensePatterns || item.defense_patterns || '',\n        clinicalReflection: item.clinicalReflection || item.clinical_reflection || ''\n      } : item;\n\n      // Ensure proper positioning: use existing position, or create grid-based position\n      let position;\n      if (item.position && typeof item.position.x === 'number' && typeof item.position.y === 'number') {\n        position = item.position;\n      } else {\n        // Create grid-based layout for nodes without positions\n        const gridSize = Math.ceil(Math.sqrt(allItems.length));\n        const nodeSpacing = 250;\n        const offsetX = 300; // Offset from left sidebar\n        const offsetY = 150; // Offset from top\n        \n        position = {\n          x: (index % gridSize) * nodeSpacing + offsetX,\n          y: Math.floor(index / gridSize) * nodeSpacing + offsetY\n        };\n      }\n\n      return {\n        id: nodeId,\n        type: item.type,\n        position: position,\n        data: { \n          ...nodeData, \n          label: item.title || item.label || `Untitled ${item.type}`, // Ensure label matches title\n          color: item.color || '#3B82F6', // Include color in data\n          onDelete: () => handleDeleteNode(nodeId),\n          onLiteratureClick: item.type === 'literature' ? handleLiteratureClick : undefined,\n          skipAnimation: isInitialLoad // Use the isInitialLoad state\n        },\n        style: item.type === 'topic' ? {\n          backgroundColor: item.color || '#3B82F6' // Set style for topic nodes\n        } : undefined\n      };\n    });\n\n    // Create optimized edges\n    const optimizedEdges = createOptimizedEdges(\n      data.connections || [], \n      quickNodes.map(n => n.id)\n    );\n\n    // Set nodes and edges immediately for fast UI response\n    setNodes(quickNodes);\n    setEdges(optimizedEdges);\n  }, [setNodes, setEdges, handleDeleteNode, handleLiteratureClick, isInitialLoad]);\n\n  const saveToBackend = useCallback(async (data) => {\n    // Deep clone the data to avoid modifying the original\n    const cleanData = {\n      topics: JSON.parse(JSON.stringify(data.topics || [])),\n      cases: JSON.parse(JSON.stringify(data.cases || [])),\n      tasks: JSON.parse(JSON.stringify(data.tasks || [])),\n      literature: JSON.parse(JSON.stringify(data.literature || [])),\n      connections: JSON.parse(JSON.stringify(data.connections || []))\n    };\n    \n    try {\n      \n      // Current timestamp for created_at/updated_at fields\n      const now = new Date().toISOString();\n      \n      // Clean and validate topics\n      cleanData.topics = cleanData.topics.map((topic, index) => {\n        // Ensure all required fields exist\n        return {\n          id: String(topic.id || `${Date.now()}-${index}-topic`),\n          title: topic.title || \"Untitled Topic\",\n          description: topic.description || \"\",\n          category: topic.category || \"Uncategorized\",\n          color: topic.color || \"#3B82F6\",\n          position: {\n            x: Number(topic.position?.x) || 0,\n            y: Number(topic.position?.y) || 0\n          },\n          flashcard_count: Number(topic.flashcard_count) || 0,\n          completed_flashcards: Number(topic.completed_flashcards) || 0,\n          resources: Array.isArray(topic.resources) ? topic.resources : [],\n          created_at: topic.created_at || now,\n          updated_at: now\n        };\n      });\n      \n      // Clean and validate cases\n      cleanData.cases = cleanData.cases.map((caseItem, index) => {\n        // Ensure all required fields exist, handle both camelCase and snake_case\n        return {\n          id: String(caseItem.id || `${Date.now()}-${index}-case`),\n          case_id: caseItem.case_id || `CASE-${Date.now()}-${index}`,\n          encounter_date: caseItem.encounter_date || now,\n          primary_diagnosis: caseItem.primary_diagnosis || \"Unspecified\",\n          secondary_diagnoses: Array.isArray(caseItem.secondary_diagnoses) ? caseItem.secondary_diagnoses : [],\n          age: caseItem.age !== undefined ? Number(caseItem.age) : null,\n          gender: caseItem.gender || null,\n          // Handle both camelCase (frontend) and snake_case (backend) field names\n          chief_complaint: caseItem.chiefComplaint || caseItem.chief_complaint || \"\",\n          initial_presentation: caseItem.initialPresentation || caseItem.initial_presentation || \"\",\n          current_presentation: caseItem.currentPresentation || caseItem.current_presentation || \"\",\n          medication_history: caseItem.medicationHistory || caseItem.medication_history || \"\",\n          therapy_progress: caseItem.therapyProgress || caseItem.therapy_progress || \"\",\n          defense_patterns: caseItem.defensePatterns || caseItem.defense_patterns || \"\",\n          clinical_reflection: caseItem.clinicalReflection || caseItem.clinical_reflection || \"\",\n          history_present_illness: caseItem.history_present_illness || null,\n          medical_history: caseItem.medical_history || null,\n          medications: Array.isArray(caseItem.medications) ? caseItem.medications : [],\n          mental_status_exam: caseItem.mental_status_exam || null,\n          assessment_plan: caseItem.assessment_plan || null,\n          notes: caseItem.notes || null,\n          status: caseItem.status || \"active\",\n          linked_topics: Array.isArray(caseItem.linked_topics) ? caseItem.linked_topics : [],\n          position: {\n            x: Number(caseItem.position?.x) || 0,\n            y: Number(caseItem.position?.y) || 0\n          },\n          created_at: caseItem.created_at || now,\n          updated_at: now\n        };\n      });\n      \n      // Clean and validate tasks\n      cleanData.tasks = cleanData.tasks.map((task, index) => {\n        // Ensure all required fields exist\n        return {\n          id: String(task.id || `${Date.now()}-${index}-task`),\n          title: task.title || \"Untitled Task\",\n          description: task.description || null,\n          status: task.status || \"pending\",\n          priority: task.priority || \"medium\",\n          due_date: task.due_date || null,\n          linked_case_id: task.linked_case_id || null,\n          linked_topic_id: task.linked_topic_id || null,\n          position: {\n            x: Number(task.position?.x) || 0,\n            y: Number(task.position?.y) || 0\n          },\n          created_at: task.created_at || now,\n          updated_at: now\n        };\n      });\n      \n      // Clean and validate literature\n      cleanData.literature = cleanData.literature.map((lit, index) => {\n        // Ensure all required fields exist\n        return {\n          id: String(lit.id || `${Date.now()}-${index}-lit`),\n          title: lit.title || \"Untitled Literature\",\n          authors: lit.authors || null,\n          publication: lit.publication || null,\n          year: lit.year !== undefined ? Number(lit.year) : null,\n          doi: lit.doi || null,\n          abstract: lit.abstract || null,\n          notes: lit.notes || null,\n          pdf_path: lit.pdf_path || null,\n          linked_topics: Array.isArray(lit.linked_topics) ? lit.linked_topics : [],\n          position: {\n            x: Number(lit.position?.x) || 0,\n            y: Number(lit.position?.y) || 0\n          },\n          created_at: lit.created_at || now,\n          updated_at: now\n        };\n      });\n      \n      // Clean and validate connections\n      cleanData.connections = cleanData.connections.map((conn, index) => {\n        // For connections, we only need these basic properties\n        return {\n          id: String(conn.id || `${Date.now()}-${index}-conn`),\n          source: conn.source || \"\",\n          target: conn.target || \"\",\n          label: conn.label || \"\"\n        };\n      });\n      \n      // Filter out any items with empty or invalid source/target\n      cleanData.connections = cleanData.connections.filter(conn => \n        conn.source && conn.target && \n        typeof conn.source === 'string' && \n        typeof conn.target === 'string' && \n        conn.source.length > 0 && \n        conn.target.length > 0\n      );\n      \n      console.log('Sending cleaned data to backend:', cleanData);\n      \n      const response = await axios.put(`${API}/mindmap-data`, cleanData, {\n        headers: { 'Content-Type': 'application/json' }\n      });\n      \n      console.log('Backend save successful:', response.data);\n    } catch (err) {\n      console.error('Failed to save to backend:', err.response?.data || err.message);\n      \n      // Log detailed validation errors\n      if (err.response?.status === 422 && err.response?.data?.detail) {\n        console.error('Validation errors:');\n        console.error(JSON.stringify(err.response.data.detail, null, 2));\n        \n        // Log the request data that caused the error\n        console.error('Request data that caused validation error:');\n        console.error(JSON.stringify(cleanData, null, 2));\n      }\n      \n      // Don't throw the error to prevent breaking the app\n    }\n  }, []);\n\n  const onConnect = useCallback((params) => {\n    const edgeId = `conn-${Date.now()}`;\n    const newEdge = { \n      ...params, \n      id: edgeId,\n      type: 'floating', // Use our high-performance floating edge type\n      style: { \n        strokeWidth: 2, \n        stroke: '#64748b',\n        opacity: 0.85,\n        transition: 'none' // Critical: disable transitions for immediate updates\n      },\n      // Add a unique timestamp to force React to re-render this edge when source or target nodes move\n      data: { __forceUpdate: Date.now() },\n      interactionWidth: 20 // Wider area for interaction\n    };\n    setEdges((eds) => addEdge(newEdge, eds));\n    setMindMapData(prev => {\n      const newConnections = [...prev.connections, { \n        id: newEdge.id, \n        source: params.source, \n        target: params.target, \n        label: '' \n      }];\n      const newData = { ...prev, connections: newConnections };\n      autoSaveMindMapData(newData);\n      return newData;\n    });\n  }, [setEdges, setMindMapData, autoSaveMindMapData]);\n\n  const onNodeClick = useCallback((event, node) => {\n    setSelectedNode(node);\n    // Visual feedback - highlight selected node\n    setNodes(currentNodes => currentNodes.map(n => ({\n      ...n,\n      selected: n.id === node.id\n    })));\n  }, [setNodes]);\n\n  const onNodeDoubleClick = useCallback((event, node) => {\n    // Handle multi-part IDs correctly by joining all parts after the type\n    const parts = node.id.split('-');\n    const type = parts[0];\n    const id = parts.slice(1).join('-'); // Join all parts after the first one\n    \n    // Prevent multiple rapid clicks by checking if modal is already open\n    if (type === 'case' && caseModal.isOpen) return;\n    if (type === 'topic' && topicModal.isOpen) return;\n    if (type === 'task' && taskModal.isOpen) return;\n    if (type === 'literature' && literatureModal.isOpen) return;\n    \n    // Route to appropriate specialized modal based on node type\n    if (type === 'literature') {\n      const dataItem = mindMapData.literature.find(item => String(item.id) === id);\n      if (dataItem) {\n        setLiteratureModal({ isOpen: true, data: dataItem });\n      }\n      return;\n    }\n    \n    if (type === 'case') {\n      const dataItem = mindMapData.cases.find(item => String(item.id) === id);\n      if (dataItem) {\n        setModalAnimationStates(prev => ({ ...prev, case: true }));\n        setCaseModal({ isOpen: true, data: dataItem });\n        // Clear animation state after modal animation completes\n        setTimeout(() => {\n          setModalAnimationStates(prev => ({ ...prev, case: false }));\n        }, 800);\n      }\n      return;\n    }\n    \n    if (type === 'topic') {\n      const dataItem = mindMapData.topics.find(item => String(item.id) === id);\n      if (dataItem) {\n        setModalAnimationStates(prev => ({ ...prev, topic: true }));\n        setTopicModal({ isOpen: true, data: dataItem });\n        // Clear animation state after modal animation completes\n        setTimeout(() => {\n          setModalAnimationStates(prev => ({ ...prev, topic: false }));\n        }, 800);\n      }\n      return;\n    }\n    \n    if (type === 'task') {\n      const dataItem = mindMapData.tasks.find(item => String(item.id) === id);\n      if (dataItem) {\n        setModalAnimationStates(prev => ({ ...prev, task: true }));\n        setTaskModal({ isOpen: true, data: dataItem });\n        // Clear animation state after modal animation completes\n        setTimeout(() => {\n          setModalAnimationStates(prev => ({ ...prev, task: false }));\n        }, 800);\n      }\n      return;\n    }\n  }, [mindMapData, caseModal.isOpen, topicModal.isOpen, taskModal.isOpen, literatureModal.isOpen]);\n\n  const onEdgeDoubleClick = useCallback((event, edge) => {\n    // Double-click to delete edge immediately\n    setEdges(eds => eds.filter(e => e.id !== edge.id));\n    setMindMapData(prev => {\n      const newConnections = prev.connections.filter(conn => conn.id !== edge.id);\n      const newData = { ...prev, connections: newConnections };\n      autoSaveMindMapData(newData);\n      addToast('Connection deleted', 'success');\n      return newData;\n    });\n  }, [setEdges, setMindMapData, autoSaveMindMapData, addToast]);\n\n  const onEdgeContextMenu = useCallback((event, edge) => {\n    // Right-click to edit edge label\n    event.preventDefault();\n    setEdgeModal({ isOpen: true, edge: edge });\n  }, []);\n\n  const handleSaveEdgeLabel = useCallback((edgeId, label) => {\n    setEdges(eds =>\n      eds.map(edge =>\n        edge.id === edgeId ? { ...edge, label: label } : edge\n      )\n    );\n    setMindMapData(prev => {\n      const newConnections = prev.connections.map(conn =>\n        conn.id === edgeId ? { ...conn, label: label } : conn\n      );\n      const newData = { ...prev, connections: newConnections };\n      autoSaveMindMapData(newData);\n      return newData;\n    });\n  }, [setEdges, setMindMapData, autoSaveMindMapData]);\n\n  // Edge hover handlers for highlighting\n  const onEdgeMouseEnter = useCallback((event, edge) => {\n    setEdges(eds =>\n      eds.map(e =>\n        e.id === edge.id ? { ...e, className: 'highlighted' } : e\n      )\n    );\n  }, [setEdges]);\n\n  const onEdgeMouseLeave = useCallback((event, edge) => {\n    setEdges(eds =>\n      eds.map(e =>\n        e.id === edge.id ? { ...e, className: '' } : e\n      )\n    );\n  }, [setEdges]);\n\n  // Lazy-loaded force-directed layout for better performance\n  const forceLayout = useCallback(async () => {\n    if (nodes.length === 0) return;\n\n    try {\n      // Lazy load D3 force simulation\n      const { \n        forceSimulation, \n        forceManyBody, \n        forceLink, \n        forceCenter, \n        forceCollide \n      } = await loadD3Force();\n\n      // Preserve the current edges before layout\n      const currentEdges = [...edges];\n      \n      // Create a set of valid node IDs for fast lookup\n      const nodeIdSet = new Set(nodes.map(node => node.id));\n      \n      // Filter edges to only include those with both source and target nodes present\n      const validEdges = currentEdges.filter(edge => \n        nodeIdSet.has(edge.source) && nodeIdSet.has(edge.target)\n      );\n\n      // Create D3-compatible edge objects for the force simulation\n      const d3Edges = validEdges.map(edge => ({\n        source: edge.source,\n        target: edge.target,\n        id: edge.id\n      }));\n\n      // Create a copy of nodes for simulation (D3 mutates the objects)\n      const simulationNodes = nodes.map(node => ({ \n        id: node.id,\n        x: node.position.x, \n        y: node.position.y,\n        fx: null, // Remove any fixed positions\n        fy: null\n      }));\n\n      // Create simulation with optimized forces for mind map layout\n      const simulation = forceSimulation(simulationNodes)\n        .force('link', forceLink(d3Edges).id(d => d.id).distance(200).strength(0.5))\n        .force('charge', forceManyBody().strength(-800).distanceMax(400))\n        .force('center', forceCenter(window.innerWidth / 3, window.innerHeight / 2))\n        .force('collision', forceCollide().radius(80))\n        .stop();\n\n      // Run simulation in chunks to prevent blocking\n      const ticksPerFrame = 50;\n      const totalTicks = 400;\n      let currentTick = 0;\n\n      const runSimulationChunk = () => {\n        const remainingTicks = Math.min(ticksPerFrame, totalTicks - currentTick);\n        for (let i = 0; i < remainingTicks; i++) {\n          simulation.tick();\n        }\n        currentTick += remainingTicks;\n\n        if (currentTick < totalTicks) {\n          requestAnimationFrame(runSimulationChunk);\n        } else {\n          // Simulation complete, update nodes\n          const updatedNodes = simulationNodes.map(simNode => {\n            const originalNode = nodes.find(n => n.id === simNode.id);\n            return {\n              ...originalNode,\n              position: { x: simNode.x, y: simNode.y },\n            };\n          });\n          \n          // Update both nodes and edges in a single batch\n          setNodes(updatedNodes);\n          setEdges(validEdges);\n\n          // Update mindMapData with new positions\n          setMindMapData(currentData => {\n            const updatedData = { ...currentData };\n            \n            updatedNodes.forEach(node => {\n              const [type, id] = node.id.split('-');\n              const key = type === 'literature' ? 'literature' : `${type}s`;\n              const item = updatedData[key]?.find(i => String(i.id) === id);\n              if (item) {\n                item.position = node.position;\n              }\n            });\n            \n            return updatedData;\n          });\n\n          // Smooth camera transition to fit the new layout\n          setTimeout(() => {\n            fitView({ duration: 800, padding: 0.2 });\n          }, 200);\n        }\n      };\n\n      // Start simulation in next frame\n      requestAnimationFrame(runSimulationChunk);\n    } catch (error) {\n      console.error('Force layout failed:', error);\n      addToast('Layout calculation failed', 'error');\n    }\n  }, [nodes, edges, setNodes, setEdges, setMindMapData, fitView, addToast]);\n\n  // applyForceLayout wrapper function (defined after forceLayout)\n  const applyForceLayout = useCallback(() => {\n    try {\n      forceLayout();\n      addToast('Nodes realigned successfully', 'success');\n    } catch (error) {\n      console.error('Force layout error:', error);\n      addToast('Failed to realign nodes', 'error');\n    }\n  }, [forceLayout, addToast]);\n\n  const handleClearMap = useCallback(() => {\n    if (!window.confirm('Are you sure you want to clear the entire mind map?')) return;\n\n    const empty = { topics: [], cases: [], tasks: [], literature: [], connections: [] };\n    setMindMapData(empty);\n    setNodes([]);\n    setEdges([]);\n    setSelectedNode(null);\n    // Clear all modal states\n    setCaseModal({ isOpen: false, data: null });\n    setTopicModal({ isOpen: false, data: null });\n    setTaskModal({ isOpen: false, data: null });\n    setLiteratureModal({ isOpen: false, data: null });\n    setFocusedCategory(null);\n    autoSaveMindMapData(empty);\n    addToast('Mind map cleared successfully', 'success');\n  }, [setNodes, setEdges, autoSaveMindMapData, addToast]);\n\n  const addNewNode = useCallback((nodeType) => {\n    const dataId = Date.now();\n    const id = `${nodeType}-${dataId}`;\n    \n    // Create node data object with appropriate fields based on type\n    let nodeData = { id: dataId, label: `New ${nodeType}` };\n    \n    // For case nodes, add structured fields\n    if (nodeType === 'case') {\n      nodeData = {\n        ...nodeData,\n        chiefComplaint: '',\n        initialPresentation: '',\n        currentPresentation: '',\n        medicationHistory: '',\n        therapyProgress: '',\n        defensePatterns: '',\n        clinicalReflection: ''\n      };\n    }\n    \n    // Calculate grid-based position for new nodes to avoid clustering\n    // Use current data count instead of nodes.length for more accurate positioning\n    const currentDataCount = (mindMapData.topics?.length || 0) + \n                           (mindMapData.cases?.length || 0) + \n                           (mindMapData.tasks?.length || 0) + \n                           (mindMapData.literature?.length || 0);\n    \n    const gridSize = Math.ceil(Math.sqrt(currentDataCount + 1));\n    const nodeSpacing = 280;\n    const offsetX = 400; // Offset from left sidebar\n    const offsetY = 150; // Offset from top\n    \n    const gridPosition = {\n      x: (currentDataCount % gridSize) * nodeSpacing + offsetX,\n      y: Math.floor(currentDataCount / gridSize) * nodeSpacing + offsetY\n    };\n    \n    const newNode = {\n      id,\n      type: nodeType,\n      position: gridPosition,\n      data: { ...nodeData, onDelete: () => handleDeleteNode(id) }\n    };\n\n    setMindMapData(d => {\n      const key = nodeType === 'literature' ? 'literature' : `${nodeType}s`;\n      const dataToAdd = { ...newNode.data, position: newNode.position };\n      delete dataToAdd.onDelete;\n      const updatedData = {\n        ...d,\n        [key]: [...(d[key] || []), dataToAdd]\n      };\n      autoSaveMindMapData(updatedData);\n      return updatedData;\n    });\n\n    setNodes(n => n.concat(newNode));\n    addToast(`${nodeType.charAt(0).toUpperCase() + nodeType.slice(1)} added successfully`, 'success');\n  }, [mindMapData, handleDeleteNode, setMindMapData, autoSaveMindMapData, setNodes, addToast]);\n\n  const handleNodesChange = useCallback((changes) => {\n    // Apply the node changes to React Flow state immediately - this is critical!\n    onNodesChange(changes);\n    \n    // Skip heavy operations during animations to prevent interference\n    if (isAnimating) {\n      console.log('Skipping position updates during animation');\n      return;\n    }\n\n\n    \n    // Process position changes for data persistence - SIMPLIFIED\n    const positionChanges = changes.filter(change => \n      change.type === 'position' && change.position\n    );\n    \n    if (positionChanges.length > 0) {\n      console.log('Processing position changes:', positionChanges);\n      \n      // Update mindMapData immediately without complex debouncing\n      setMindMapData(currentData => {\n        const updatedData = { ...currentData };\n        \n        positionChanges.forEach(change => {\n          if (change.position) {\n            const [type, id] = change.id.split('-');\n            const key = type === 'literature' ? 'literature' : `${type}s`;\n            const item = updatedData[key]?.find(i => String(i.id) === id);\n            \n            if (item) {\n              item.position = { ...change.position };\n              console.log(`Updated ${type} ${id} position to:`, change.position);\n            }\n          }\n        });\n        \n        // Save to localStorage immediately\n        localStorageUtils.save(updatedData, null, null, false);\n        \n        return updatedData;\n      });\n      \n      // Simple auto-save without complex timeouts\n      setTimeout(() => {\n        autoSaveMindMapData(mindMapData);\n      }, 500);\n    }\n  }, [onNodesChange, setMindMapData, isAnimating, autoSaveMindMapData, mindMapData]);\n\n  const handleNodeDragStop = useCallback((event, node) => {\n    // Debounce the auto-save to prevent excessive backend calls\n    // Position updates are already handled in handleNodesChange during dragging\n    clearTimeout(window.dragSaveTimeout);\n    window.dragSaveTimeout = setTimeout(() => {\n      setMindMapData(currentData => {\n        autoSaveMindMapData(currentData);\n        return currentData;\n      });\n    }, 500);\n  }, [autoSaveMindMapData]);\n\n  const loadMindMapData = useCallback(async () => {\n    setLoading(true);\n    setLoadingProgress(10);\n    setLoadingMessage('Checking local data...');\n    \n    try {\n      // First, try loading from localStorage for instant startup\n      const local = localStorageUtils.load();\n      if (local) {\n        setLoadingProgress(30);\n        setLoadingMessage('Loading from cache...');\n        \n        if (!local.connections) local.connections = [];\n        setMindMapData(local);\n        \n        setLoadingProgress(60);\n        setLoadingMessage('Applying layout...');\n        \n        await convertDataToReactFlow(local, true); // Apply layout immediately\n        \n        setLoadingProgress(90);\n        setLoadingMessage('Finalizing...');\n        \n        setLoading(false);\n        setIsInitialLoad(false);\n        setLoadingProgress(100);\n        \n        // Background sync with backend without blocking UI\n        setTimeout(async () => {\n          try {\n            const response = await axios.get(`${API}/mindmap-data`);\n            if (JSON.stringify(response.data) !== JSON.stringify(local)) {\n              // Only update if data has changed\n              if (!response.data.connections) response.data.connections = [];\n              setMindMapData(response.data);\n              await convertDataToReactFlow(response.data);\n              autoSaveMindMapData(response.data);\n              addToast('Data synchronized with server', 'info');\n            }\n          } catch (err) {\n            console.warn('Background sync failed:', err);\n          }\n        }, 500);\n        \n        return;\n      }\n\n      // If no local data, load from backend\n      setLoadingProgress(20);\n      setLoadingMessage('Loading from server...');\n      \n      try {\n        const response = await axios.get(`${API}/mindmap-data`);\n        if (!response.data.connections) response.data.connections = [];\n        \n        setLoadingProgress(50);\n        setLoadingMessage('Processing data...');\n        \n        setMindMapData(response.data);\n        \n        setLoadingProgress(80);\n        setLoadingMessage('Applying layout...');\n        \n        await convertDataToReactFlow(response.data, true); // Apply layout immediately\n        autoSaveMindMapData(response.data);\n        \n        setLoadingProgress(100);\n        setLoading(false);\n        setIsInitialLoad(false);\n      } catch (backendError) {\n        console.warn('Backend loading failed, populating with sample data:', backendError);\n        \n        // If backend fails, populate with sample data for better UX\n        setLoadingProgress(60);\n        setLoadingMessage('Loading sample data...');\n        \n        // Populate sample data\n        const emptyData = { topics: [], cases: [], tasks: [], literature: [], connections: [] };\n        \n        setMindMapData(emptyData);\n        \n        // Populate sample data\n        setTimeout(() => {\n          populateSampleLiteratureData(setMindMapData, autoSaveMindMapData, addToast);\n        }, 100);\n        \n        setLoadingProgress(100);\n        setLoading(false);\n        setIsInitialLoad(false);\n      }\n    } catch (err) {\n      console.error('Error loading mind map:', err);\n      addToast('Failed to load mind map', 'error');\n      setLoading(false);\n      setIsInitialLoad(false);\n    }\n  }, [addToast, autoSaveMindMapData, convertDataToReactFlow]);\n\n  useEffect(() => {\n    // Load initial mind map data\n    loadMindMapData();\n  }, []); // Run only once on mount\n\n  // Helper function to check if a node matches the search query\n  const nodeMatchesSearch = useCallback((node, query) => {\n    // Guard against null/undefined node\n    if (!node || !node.id || !node.data) return false;\n    \n    // Return early if no query\n    if (!query) return true;\n    \n    // Normalize and trim query\n    const searchTerm = query.toLowerCase().trim();\n    if (!searchTerm) return true;\n    \n    try {\n      // Safely extract node type and ID\n      const parts = node.id.split('-');\n      const nodeType = parts.length > 0 ? parts[0] : '';\n      const nodeId = parts.length > 1 ? parts[1] : '';\n      \n      // Start with no match\n      let hasMatch = false;\n      \n      // 1. Basic title/label matching - most common searches\n      if (!hasMatch && node.data.label) {\n        const label = node.data.label.toLowerCase();\n        hasMatch = label.includes(searchTerm);\n      }\n      \n      // 2. Node type matching\n      if (!hasMatch && nodeType) {\n        hasMatch = nodeType.includes(searchTerm);\n      }\n      \n      // 3. Case ID pattern matching for case nodes\n      if (!hasMatch && nodeType === 'case' && nodeId) {\n        hasMatch = (`case-${nodeId}`).toLowerCase().includes(searchTerm);\n      }\n      \n      // 4. Type-specific content matching\n      if (!hasMatch) {\n        if (nodeType === 'case') {\n          const diagnosis = (node.data.primary_diagnosis || node.data.primaryDiagnosis || '').toLowerCase();\n          hasMatch = diagnosis.includes(searchTerm);\n        } else if (nodeType === 'topic') {\n          const title = (node.data.title || '').toLowerCase();\n          hasMatch = title.includes(searchTerm);\n        } else if (nodeType === 'literature') {\n          const title = (node.data.title || '').toLowerCase();\n          const authors = (node.data.authors || '').toLowerCase();\n          hasMatch = title.includes(searchTerm) || authors.includes(searchTerm);\n        }\n      }\n      \n      // 5. Psychiatric category matching for all node types\n      if (!hasMatch && node.data.category) {\n        const category = node.data.category.toLowerCase();\n        hasMatch = category.includes(searchTerm);\n      }\n      \n      return hasMatch;\n    } catch (error) {\n      console.error('Error in nodeMatchesSearch for node:', node.id, error);\n      return false;\n    }\n  }, []);\n\n  // Keyboard shortcuts\n  useEffect(() => {\n    const handleKeyDown = (event) => {\n      // Only trigger shortcuts when not typing in input fields\n      if (event.target.tagName === 'INPUT' || event.target.tagName === 'TEXTAREA') return;\n      \n      if (event.ctrlKey || event.metaKey) {\n        switch (event.key) {\n          case 'n':\n            event.preventDefault();\n            setShowNodeSelector(true);\n            break;\n          case 'e':\n            event.preventDefault();\n            setIsEditing(!isEditing);\n            break;\n          case 'r':\n            event.preventDefault();\n            applyForceLayout();\n            break;\n          case 'f':\n            event.preventDefault();\n            // Focus the search box\n            document.querySelector('input[type=\"text\"][placeholder*=\"Search\"]')?.focus();\n            break;\n          default:\n            break;\n        }\n      }\n      \n      if (event.key === 'Escape') {\n        setSelectedNode(null);\n        // Close all modals\n        setCaseModal({ isOpen: false, data: null });\n        setTopicModal({ isOpen: false, data: null });\n        setTaskModal({ isOpen: false, data: null });\n        setLiteratureModal({ isOpen: false, data: null });\n        setShowNodeSelector(false);\n        \n        // Clear search if no modals are open\n        if (!caseModal.isOpen && !topicModal.isOpen && !taskModal.isOpen && \n            !literatureModal.isOpen && !showNodeSelector) {\n          // Search functionality removed\n        }\n      }\n    };\n\n    window.addEventListener('keydown', handleKeyDown);\n    return () => window.removeEventListener('keydown', handleKeyDown);\n  }, [applyForceLayout, caseModal, topicModal, taskModal, literatureModal]);\n\n  useEffect(() => {\n    // DISABLED automatic force layout to prevent overriding individual node positions\n    // Force layout should only be applied manually via \"Realign Nodes\" button\n    if (isReactFlowReady && !hasAppliedInitialLayout && nodes.length > 0) {\n      // Just mark as applied without applying force layout \n      setHasAppliedInitialLayout(true);\n    } else if (isInitialLoad && nodes.length > 0) {\n      // For initial load, just mark as applied since layout was already done in convertDataToReactFlow\n      setHasAppliedInitialLayout(true);\n    }\n  }, [isReactFlowReady, hasAppliedInitialLayout, nodes, isInitialLoad]); // Removed forceLayout from dependencies\n\n  // Simplified search and category filtering - no style interference\n  useEffect(() => {\n    if (nodes.length === 0) return;\n    \n    // Skip during animations to prevent interference\n    const anyModalAnimating = Object.values(modalAnimationStates).some(state => state);\n    if (isAnimating || anyModalAnimating) return;\n    \n  }, [focusedCategory, nodes, nodeMatchesSearch, isAnimating, modalAnimationStates]);\n  \n  // CSS-based search filtering - no direct style manipulation\n  useEffect(() => {\n    if (!isReactFlowReady) return;\n    \n    // Apply CSS classes instead of direct style manipulation\n    const styleSheet = document.getElementById('search-filter-styles') || document.createElement('style');\n    styleSheet.id = 'search-filter-styles';\n    \n    if (!document.getElementById('search-filter-styles')) {\n      document.head.appendChild(styleSheet);\n    }\n    \n    // Generate CSS for search filtering\n    let css = `\n      /* Default node styling */\n      .react-flow__node {\n        transition: opacity 0.3s ease, transform 0.3s ease, filter 0.3s ease !important;\n      }\n      \n      /* Search dimmed nodes */\n      .react-flow__node.search-dimmed {\n        opacity: 0.15 !important;\n        filter: grayscale(0.7) !important;\n        transform: scale(0.9) !important;\n      }\n      \n      /* Selected node highlighting */\n      .react-flow__node.search-selected {\n        box-shadow: 0 0 0 2px #10b981, 0 0 20px rgba(16, 185, 129, 0.6) !important;\n        z-index: 1000 !important;\n      }\n      \n      /* Ensure dragging still works */\n      .react-flow__node.search-dimmed {\n        pointer-events: auto !important;\n      }\n    `;\n    \n    styleSheet.textContent = css;\n    \n  }, [isReactFlowReady]);\n\n  // Optionally: handle layout setup on first render if needed\n\n  // Show optimized loading screen during initial load\n  if (loading) {\n    return <OptimizedLoadingScreen message={loadingMessage} progress={loadingProgress} />;\n  }\n\n  // Sophisticated Animation Variants (matching Literature modal quality)\n  const modalVariants = {\n    hidden: {\n      opacity: 0,\n      scale: 0.3,\n      y: 50,\n      rotate: -5,\n    },\n    visible: {\n      opacity: 1,\n      scale: 1,\n      y: 0,\n      rotate: 0,\n      transition: {\n        type: \"spring\",\n        damping: 25,\n        stiffness: 300,\n        duration: 0.6,\n      }\n    },\n    exit: {\n      opacity: 0,\n      scale: 0.7,\n      y: 30,\n      rotate: -3,\n      transition: {\n        type: \"easeInOut\",\n        duration: 0.4,\n      }\n    }\n  };\n\n  const backdropVariants = {\n    hidden: { opacity: 0 },\n    visible: { \n      opacity: 1,\n      transition: { duration: 0.3 }\n    },\n    exit: { \n      opacity: 0,\n      transition: { duration: 0.4 }\n    }\n  };\n\n  const contentVariants = {\n    hidden: {\n      opacity: 0,\n      y: 20,\n      scale: 0.95,\n    },\n    visible: {\n      opacity: 1,\n      y: 0,\n      scale: 1,\n      transition: {\n        type: \"easeOut\",\n        duration: 0.3,\n        delay: 0.1,\n      }\n    },\n    exit: {\n      opacity: 0,\n      y: -10,\n      scale: 1.02,\n      transition: {\n        type: \"easeIn\",\n        duration: 0.2,\n      }\n    }\n  };\n\n  const buttonVariants = {\n    inactive: {\n      scale: 1,\n    },\n    active: {\n      scale: 1.05,\n      transition: {\n        type: \"spring\",\n        damping: 20,\n        stiffness: 300,\n      }\n    },\n    hover: {\n      scale: 1.03,\n      transition: {\n        type: \"easeOut\",\n        duration: 0.2,\n      }\n    }\n  };\n\n  // All modal components are now imported from separate files\n\n  return (\n    <div className=\"min-h-screen bg-gray-50 flex\">\n      {/* --- Left Sidebar --- */}\n      <div className=\"w-80 bg-gradient-to-b from-slate-800 to-slate-900 text-white p-6 shadow-2xl flex flex-col\">\n        <div className=\"mb-8\">\n          <div className=\"text-3xl font-bold tracking-wide text-white\">PGY-3 HQ</div>\n          <div className=\"text-sm text-slate-300 mt-2\">Psychiatry Resident Dashboard</div>\n        </div>\n\n        {/* --- Category Filters --- */}\n        <div className=\"mb-6\">\n          <h3 className=\"text-sm font-semibold text-slate-300 mb-3\">Filter by Category</h3>\n          <div className=\"grid grid-cols-2 gap-2\">\n            <button\n              onClick={() => setFocusedCategory(null)}\n              className={`px-3 py-2 rounded-lg text-xs transition-all ${\n                focusedCategory === null\n                  ? 'bg-teal-600 text-white'\n                  : 'bg-slate-700 text-slate-300 hover:bg-slate-600'\n              }`}\n            >\n              All\n            </button>\n            <button\n              onClick={() => setFocusedCategory('topic')}\n              className={`px-3 py-2 rounded-lg text-xs transition-all flex items-center gap-1 ${\n                focusedCategory === 'topic'\n                  ? 'bg-blue-600 text-white'\n                  : 'bg-slate-700 text-slate-300 hover:bg-slate-600'\n              }`}\n            >\n              <Brain size={12} />\n              Topics\n            </button>\n            <button\n              onClick={() => setFocusedCategory('case')}\n              className={`px-3 py-2 rounded-lg text-xs transition-all flex items-center gap-1 ${\n                focusedCategory === 'case'\n                  ? 'bg-indigo-600 text-white'\n                  : 'bg-slate-700 text-slate-300 hover:bg-slate-600'\n              }`}\n            >\n              <Users size={12} />\n              Cases\n            </button>\n            <button\n              onClick={() => setFocusedCategory('task')}\n              className={`px-3 py-2 rounded-lg text-xs transition-all flex items-center gap-1 ${\n                focusedCategory === 'task'\n                  ? 'bg-amber-600 text-white'\n                  : 'bg-slate-700 text-slate-300 hover:bg-slate-600'\n              }`}\n            >\n              <CheckSquare size={12} />\n              Tasks\n            </button>\n            <button\n              onClick={() => setFocusedCategory('literature')}\n              className={`px-3 py-2 rounded-lg text-xs transition-all flex items-center gap-1 ${\n                focusedCategory === 'literature'\n                  ? 'bg-purple-600 text-white'\n                  : 'bg-slate-700 text-slate-300 hover:bg-slate-600'\n              }`}\n            >\n              <BookOpen size={12} />\n              Literature\n            </button>\n          </div>\n        </div>\n\n        {/* --- Auto-save Status --- */}\n        <div className=\"mb-4 p-3 bg-slate-700 bg-opacity-50 rounded-lg\">\n          <div className=\"flex items-center gap-2 text-xs\">\n            {isSaving ? (\n              <>\n                <Loader2 size={12} className=\"animate-spin\" />\n                <span className=\"text-amber-300\">Saving...</span>\n              </>\n            ) : lastSaved ? (\n              <>\n                <CheckCircle size={12} className=\"text-green-400\" />\n                <span className=\"text-slate-300\">\n                  Last saved: {lastSaved.toLocaleTimeString()}\n                </span>\n              </>\n            ) : (\n              <>\n                <Cloud size={12} className=\"text-slate-400\" />\n                <span className=\"text-slate-400\">Auto-save enabled</span>\n              </>\n            )}\n          </div>\n        </div>\n\n        {/* --- Controls --- */}\n        <div className=\"space-y-3 mb-6\">\n          <LoadingButton onClick={applyForceLayout} icon={Shuffle} className=\"w-full bg-purple-600 hover:bg-purple-700 text-white px-4 py-2 rounded-md text-sm\">\n            Realign Nodes\n          </LoadingButton>\n          <LoadingButton \n            onClick={() => populateSampleLiteratureData(setMindMapData, autoSaveMindMapData, addToast)} \n            icon={BookOpen} \n            className=\"w-full bg-emerald-600 hover:bg-emerald-700 text-white px-4 py-2 rounded-md text-sm\"\n          >\n            Add Sample Literature\n          </LoadingButton>\n          \n          {/* Individual Node Creation Buttons */}\n          <div className=\"space-y-2\">\n            <div className=\"text-xs font-semibold text-slate-400 uppercase tracking-wide mb-2\">Add Nodes</div>\n            <LoadingButton \n              onClick={() => addNewNode('topic')} \n              icon={Brain} \n              className=\"w-full bg-blue-600 hover:bg-blue-700 text-white px-4 py-2 rounded-md text-sm flex items-center gap-2\"\n            >\n              <Brain size={16} />\n              Add Topic\n            </LoadingButton>\n            <LoadingButton \n              onClick={() => addNewNode('case')} \n              icon={Users} \n              className=\"w-full bg-indigo-600 hover:bg-indigo-700 text-white px-4 py-2 rounded-md text-sm flex items-center gap-2\"\n            >\n              <Users size={16} />\n              Add Case\n            </LoadingButton>\n            <LoadingButton \n              onClick={() => addNewNode('task')} \n              icon={CheckSquare} \n              className=\"w-full bg-amber-600 hover:bg-amber-700 text-white px-4 py-2 rounded-md text-sm flex items-center gap-2\"\n            >\n              <CheckSquare size={16} />\n              Add Task\n            </LoadingButton>\n            <LoadingButton \n              onClick={() => addNewNode('literature')} \n              icon={BookOpen} \n              className=\"w-full bg-purple-600 hover:bg-purple-700 text-white px-4 py-2 rounded-md text-sm flex items-center gap-2\"\n            >\n              <BookOpen size={16} />\n              Add Literature\n            </LoadingButton>\n          </div>\n          \n          <LoadingButton onClick={handleClearMap} icon={Trash2} className=\"w-full bg-red-600 hover:bg-red-700 text-white px-4 py-2 rounded-md text-sm\">\n            Clear All Data\n          </LoadingButton>\n        </div>\n\n        {/* --- Selected Node Panel --- */}\n        {selectedNode && (\n          <div className=\"mt-auto p-4 bg-slate-700 bg-opacity-50 rounded-lg\">\n            <h3 className=\"text-sm font-semibold text-slate-300 mb-2\">Selected Node</h3>\n            <div className=\"space-y-2\">\n              <div className=\"flex items-center gap-2\">\n                {selectedNode.type === 'topic' && <Brain size={14} className=\"text-blue-400\" />}\n                {selectedNode.type === 'case' && <Users size={14} className=\"text-indigo-400\" />}\n                {selectedNode.type === 'task' && <CheckSquare size={14} className=\"text-amber-400\" />}\n                {selectedNode.type === 'literature' && <BookOpen size={14} className=\"text-purple-400\" />}\n                <span className=\"text-sm text-white font-medium truncate\">\n                  {selectedNode.data.label}\n                </span>\n              </div>\n              {selectedNode.data.category && (\n                <div className=\"text-xs text-slate-400\">\n                  Category: {selectedNode.data.category}\n                </div>\n              )}\n              {selectedNode.data.status && (\n                <div className=\"text-xs text-slate-400\">\n                  Status: {selectedNode.data.status}\n                </div>\n              )}\n              <button\n                onClick={() => {\n                  const [type, id] = selectedNode.id.split('-');\n                  const key = type === 'literature' ? 'literature' : `${type}s`;\n                  const dataItem = mindMapData[key].find(item => String(item.id) === id);\n                  if (dataItem) {\n                    // Route to appropriate specialized modal\n                    if (type === 'case') {\n                      setCaseModal({ isOpen: true, data: dataItem });\n                    } else if (type === 'topic') {\n                      setTopicModal({ isOpen: true, data: dataItem });\n                    } else if (type === 'task') {\n                      setTaskModal({ isOpen: true, data: dataItem });\n                    } else if (type === 'literature') {\n                      handleLiteratureClick(dataItem);\n                    }\n                  }\n                }}\n                className=\"w-full mt-2 px-3 py-2 bg-slate-600 hover:bg-slate-500 text-white text-xs rounded-lg transition-colors flex items-center gap-2\"\n              >\n                <Eye size={12} />\n                View Details\n              </button>\n            </div>\n          </div>\n        )}\n\n        {/* --- Keyboard Shortcuts Help --- */}\n        {!selectedNode && (\n          <div className=\"mt-auto p-3 bg-slate-700 bg-opacity-30 rounded-lg\">\n            <h4 className=\"text-xs font-semibold text-slate-300 mb-2\">Keyboard Shortcuts</h4>\n            <div className=\"space-y-1 text-xs text-slate-400\">\n              <div>Ctrl+N - Add Node</div>\n              <div>Ctrl+E - Toggle Edit Mode</div>\n              <div>Ctrl+R - Realign Nodes</div>\n              <div>Esc - Clear Selection</div>\n            </div>\n          </div>\n        )}\n      </div>\n\n      {/* --- Main Mind Map Workspace --- */}\n      <div className=\"flex-1 relative\">\n        <ReactFlowErrorBoundary>\n          <ReactFlow\n            nodes={nodes}\n            edges={edges}\n            onNodesChange={handleNodesChange}\n            onEdgesChange={onEdgesChange}\n            onConnect={onConnect}\n            onNodeClick={onNodeClick}\n            onNodeDoubleClick={onNodeDoubleClick}\n            onNodeDragStop={handleNodeDragStop}\n            onEdgeDoubleClick={onEdgeDoubleClick}\n            onEdgeContextMenu={onEdgeContextMenu}\n            onEdgeMouseEnter={onEdgeMouseEnter}\n            onEdgeMouseLeave={onEdgeMouseLeave}\n            nodeTypes={nodeTypes}\n            edgeTypes={{ floating: FloatingEdge, enhanced: EnhancedEdge }}\n            connectionLineComponent={ConnectionLine}\n            nodesDraggable={true}\n            nodesConnectable={true}\n            elementsSelectable={true}\n            onInit={(reactFlowInstance) => {\n              setIsReactFlowReady(true);\n              // Store reference for error recovery\n              window.reactFlowInstance = reactFlowInstance;\n            }}\n            onError={(id, message) => {\n              console.warn('React Flow Error:', id, message);\n              // Ignore dimension-related errors during animations\n              if (isAnimating && message.includes('dimensions')) {\n                return;\n              }\n            }}\n            fitView\n            snapToGrid={false}\n            snapGrid={[15, 15]}\n            elevateEdgesOnSelect={false}\n            connectionLineStyle={{\n              stroke: '#3b82f6', // Use a bright blue color for better visibility during connection\n              strokeWidth: 3.5, // Slightly thicker than regular edges\n              opacity: 0.9,\n              strokeLinecap: 'round',\n              strokeDasharray: '5,3', // Shorter dash pattern for more modern look\n              filter: 'drop-shadow(0 0 6px rgba(59, 130, 246, 0.6))', // Softer glow\n              animation: 'flowingDash 1s linear infinite' // Add flowing animation\n            }}\n          defaultEdgeOptions={{\n            type: 'enhanced', // Use our enhanced edge with proper prop handling\n            style: { \n              strokeWidth: 2.5, \n              stroke: '#64748b',\n              opacity: 0.9,\n              strokeLinecap: 'round',\n              transition: 'none'\n            }\n            // Remove pathOptions - this is not a standard React Flow prop\n          }}\n          className=\"bg-gradient-to-br from-blue-50 to-indigo-100\"\n        >\n          <Background color=\"#aaa\" gap={16} />\n          <Controls />\n          <MiniMap />\n        </ReactFlow>\n        </ReactFlowErrorBoundary>\n      </div>\n      \n      {/* --- Modals --- */}\n      {/* Literature Modal */}\n      {literatureModal.isOpen && (\n        <LiteratureModal\n          isOpen={literatureModal.isOpen}\n          onClose={() => {\n            setIsAnimating(true); // Set animation state for closing\n            setLiteratureModal({ isOpen: false, data: null });\n            // Clear animation state after modal close animation completes\n            setTimeout(() => setIsAnimating(false), 500); // 400ms close animation + 100ms buffer\n          }}\n          onAnimationStart={() => setIsAnimating(true)}\n          onAnimationEnd={() => setIsAnimating(false)}\n          literatureData={literatureModal.data}\n          allNodes={nodes}\n          connections={mindMapData.connections || []}\n          setMindMapData={setMindMapData}\n          autoSaveMindMapData={autoSaveMindMapData}\n          addToast={addToast}\n        />\n      )}\n      {/* Specialized Modals with optimized rendering */}\n      <AnimatePresence mode=\"wait\">\n        {caseModal.isOpen && (\n          <CaseModal \n            key={`case-modal-${caseModal.data?.id || 'default'}`}\n            isOpen={caseModal.isOpen} \n            data={caseModalStableData.current || caseModal.data} \n            onClose={() => {\n              setModalAnimationStates(prev => ({ ...prev, case: true }));\n              setCaseModal({ isOpen: false, data: null });\n            }}\n            onAnimationStart={() => {\n              setIsAnimating(true);\n              setModalAnimationStates(prev => ({ ...prev, case: true }));\n            }}\n            onAnimationEnd={() => {\n              setIsAnimating(false);\n              setModalAnimationStates(prev => ({ ...prev, case: false }));\n            }}\n            setMindMapData={setMindMapData}\n            autoSaveMindMapData={autoSaveMindMapData}\n            addToast={addToast}\n          />\n        )}\n      </AnimatePresence>\n      \n      <AnimatePresence mode=\"wait\">\n        {topicModal.isOpen && (\n          <TopicModal \n            key={`topic-modal-${topicModal.data?.id || 'default'}`}\n            isOpen={topicModal.isOpen} \n            data={topicModalStableData.current || topicModal.data} \n            onClose={() => {\n              setModalAnimationStates(prev => ({ ...prev, topic: true }));\n              setTopicModal({ isOpen: false, data: null });\n            }}\n            onAnimationStart={() => {\n              setIsAnimating(true);\n              setModalAnimationStates(prev => ({ ...prev, topic: true }));\n            }}\n            onAnimationEnd={() => {\n              setIsAnimating(false);\n              setModalAnimationStates(prev => ({ ...prev, topic: false }));\n            }}\n            setMindMapData={setMindMapData}\n            autoSaveMindMapData={autoSaveMindMapData}\n            addToast={addToast}\n            syncNodeData={syncNodeData}\n            forceNodeUpdate={() => setNodeUpdateTrigger(prev => prev + 1)}\n          />\n        )}\n      </AnimatePresence>\n      \n      <AnimatePresence mode=\"wait\">\n        {taskModal.isOpen && (\n          <TaskModal \n            key={`task-modal-${taskModal.data?.id || 'default'}`}\n            isOpen={taskModal.isOpen} \n            data={taskModalStableData.current || taskModal.data} \n            onClose={() => {\n              setModalAnimationStates(prev => ({ ...prev, task: true }));\n              setTaskModal({ isOpen: false, data: null });\n            }}\n            onAnimationStart={() => {\n              setIsAnimating(true);\n              setModalAnimationStates(prev => ({ ...prev, task: true }));\n            }}\n            onAnimationEnd={() => {\n              setIsAnimating(false);\n              setModalAnimationStates(prev => ({ ...prev, task: false }));\n            }}\n            setMindMapData={setMindMapData}\n            autoSaveMindMapData={autoSaveMindMapData}\n            addToast={addToast}\n          />\n        )}\n      </AnimatePresence>\n\n      <EdgeLabelModal \n        isOpen={edgeModal.isOpen} \n        edge={edgeModal.edge} \n        onClose={() => setEdgeModal({ isOpen: false, edge: null })} \n        onSave={handleSaveEdgeLabel} \n      />\n\n      {loading && (\n        <div className=\"absolute inset-0 bg-white bg-opacity-80 flex items-center justify-center z-50\">\n          <Loader2 size={48} className=\"animate-spin text-blue-600\" />\n        </div>\n      )}\n      \n      {toasts.map(toast => (\n        <Toast\n          key={toast.id}\n          message={toast.message}\n          type={toast.type}\n          duration={toast.duration}\n          onClose={() => removeToast(toast.id)}\n        />\n      ))}\n    </div>\n  );\n};\n\n// Error Boundary for React Flow\nclass ReactFlowErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { hasError: false };\n  }\n\n  static getDerivedStateFromError(error) {\n    // Check if it's a React Flow dimension error\n    if (error.message && error.message.includes('dimensions')) {\n      console.warn('React Flow dimension error caught, recovering...');\n      return { hasError: false }; // Don't show error, just recover\n    }\n    return { hasError: true };\n  }\n\n  componentDidCatch(error, errorInfo) {\n    if (error.message && error.message.includes('dimensions')) {\n      // For dimension errors, try to recover\n      setTimeout(() => {\n        if (window.reactFlowInstance) {\n          window.reactFlowInstance.fitView();\n        }\n      }, 100);\n      return;\n    }\n    console.error('React Flow Error:', error, errorInfo);\n  }\n\n  render() {\n    if (this.state.hasError) {\n      return (\n        <div className=\"flex-1 flex items-center justify-center\">\n          <div className=\"text-center\">\n            <h3 className=\"text-lg font-medium text-gray-900 mb-2\">Mind Map Temporarily Unavailable</h3>\n            <p className=\"text-gray-600 mb-4\">There was an issue with the mind map. Please refresh the page.</p>\n            <button \n              onClick={() => window.location.reload()} \n              className=\"px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700\"\n            >\n              Refresh Page\n            </button>\n          </div>\n        </div>\n      );\n    }\n\n    return this.props.children;\n  }\n}\n\nconst Dashboard = () => (\n  <ReactFlowProvider>\n    <DashboardComponent />\n  </ReactFlowProvider>\n);\n\nfunction App() {\n  // Check for timeline test parameter\n  const urlParams = new URLSearchParams(window.location.search);\n  const showTimelineTest = urlParams.get('timeline-test') === 'true';\n  \n  if (showTimelineTest) {\n    return <TimelineTestPage />;\n  }\n  \n  return <Dashboard />;\n}\n\nexport default App;","import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n);\n","import React, { useState, useRef, useCallback, useEffect, useMemo } from 'react';\r\nimport { motion, AnimatePresence } from 'framer-motion';\r\nimport { gsap } from 'gsap';\r\n\r\n// Enhanced custom scrollbar styles with animations to match CaseModal theme\r\nconst scrollbarStyles = `\r\n  .timeline-scrollbar::-webkit-scrollbar {\r\n    width: 12px;\r\n    height: 12px;\r\n  }\r\n  \r\n  .timeline-scrollbar::-webkit-scrollbar-track {\r\n    background: rgba(30, 41, 59, 0.3);\r\n    border-radius: 6px;\r\n    margin: 4px;\r\n  }\r\n  \r\n  .timeline-scrollbar::-webkit-scrollbar-thumb {\r\n    background: linear-gradient(45deg, rgba(59, 130, 246, 0.6), rgba(99, 102, 241, 0.8));\r\n    border-radius: 6px;\r\n    border: 2px solid rgba(30, 41, 59, 0.3);\r\n    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);\r\n  }\r\n  \r\n  .timeline-scrollbar::-webkit-scrollbar-thumb:hover {\r\n    background: linear-gradient(45deg, rgba(59, 130, 246, 0.8), rgba(99, 102, 241, 1));\r\n    border-color: rgba(59, 130, 246, 0.3);\r\n    transform: scale(1.1);\r\n    box-shadow: 0 0 10px rgba(59, 130, 246, 0.4);\r\n  }\r\n  \r\n  .timeline-scrollbar::-webkit-scrollbar-thumb:active {\r\n    background: linear-gradient(45deg, rgba(37, 99, 235, 0.9), rgba(79, 70, 229, 1));\r\n    transform: scale(1.05);\r\n  }\r\n  \r\n  .timeline-scrollbar::-webkit-scrollbar-corner {\r\n    background: rgba(30, 41, 59, 0.3);\r\n    border-radius: 6px;\r\n  }\r\n  \r\n  .timeline-scrollbar {\r\n    scrollbar-width: thin;\r\n    scrollbar-color: rgba(59, 130, 246, 0.5) rgba(30, 41, 59, 0.3);\r\n    scroll-behavior: smooth;\r\n    animation: scrollbar-glow 3s ease-in-out infinite alternate;\r\n  }\r\n  \r\n  @keyframes scrollbar-glow {\r\n    from {\r\n      scrollbar-color: rgba(59, 130, 246, 0.4) rgba(30, 41, 59, 0.3);\r\n    }\r\n    to {\r\n      scrollbar-color: rgba(59, 130, 246, 0.7) rgba(30, 41, 59, 0.4);\r\n    }\r\n  }\r\n  \r\n  /* Smooth scrolling enhancement */\r\n  .timeline-scrollbar {\r\n    scroll-padding-top: 20px;\r\n    scroll-padding-bottom: 20px;\r\n  }\r\n\r\n  /* Custom animations for the timeline components */\r\n  @keyframes shimmer {\r\n    0% { transform: translateX(-100%); }\r\n    100% { transform: translateX(100%); }\r\n  }\r\n  \r\n  @keyframes shimmerReverse {\r\n    0% { transform: translateX(100%); }\r\n    100% { transform: translateX(-100%); }\r\n  }\r\n  \r\n  @keyframes pulse {\r\n    0%, 100% { opacity: 0.6; }\r\n    50% { opacity: 0.2; }\r\n  }\r\n`;\r\n\r\nconst VerticalTimeline = ({ \r\n  data, \r\n  onNodeClick, \r\n  onNodeHover, \r\n  onDataChange,\r\n  // Mind map integration props\r\n  caseId,\r\n  autoSaveMindMapData,\r\n  setMindMapData \r\n}) => {\r\n  const [nodes, setNodes] = useState([]);\r\n  const [hoveredNode, setHoveredNode] = useState(null);\r\n  const [editingCards, setEditingCards] = useState({}); // Track which cards are being edited\r\n  const [cardTexts, setCardTexts] = useState({}); // Store card text content\r\n  const [isDragging, setIsDragging] = useState(false);\r\n  const [isAnimatingNewNode, setIsAnimatingNewNode] = useState(false); // Track new node animation\r\n  const [isSaving, setIsSaving] = useState(false); // Track save state\r\n  const [lastSaved, setLastSaved] = useState(null); // Track last save time\r\n  const [scrollProgress, setScrollProgress] = useState(0); // Track scroll position\r\n  const timelineRef = useRef(null);\r\n  const nodeRefs = useRef({}); // Refs for direct DOM manipulation\r\n  const pathRefs = useRef({}); // Refs for SVG path elements\r\n  const dragState = useRef({ isDragging: false, draggedNodeId: null }); // Ref-based drag state\r\n  const scrollContainerRef = useRef(null); // Ref for scroll container\r\n  const saveTimeoutRef = useRef(null); // Ref for auto-save debounce\r\n  const nodePhysics = useRef({}); // Empty placeholder for backward compatibility\r\n\r\n  // Constants for layout\r\n  const NODE_SPACING = 200; // Vertical spacing between nodes\r\n  const TIMELINE_WIDTH = 800;\r\n  const CENTER_X = TIMELINE_WIDTH / 2;\r\n  const CARD_WIDTH = 320;\r\n  const CARD_OFFSET = 200; // Distance from center line to card\r\n\r\n  // Path animation properties\r\n  const PATH_ANIMATION_DURATION = 0.3;\r\n  const PATH_ANIMATION_EASE = \"elastic.out(1, 0.4)\";\r\n\r\n  // Enhanced scroll utility functions\r\n  const scrollToNode = useCallback((nodeId) => {\r\n    console.log('scrollToNode called with nodeId:', nodeId);\r\n    const node = nodes.find(n => n.id === nodeId);\r\n    console.log('Found node:', node);\r\n    if (node && scrollContainerRef.current) {\r\n      const container = scrollContainerRef.current;\r\n      const targetY = node.y - (container.clientHeight / 2);\r\n      console.log('Scrolling to Y position:', targetY);\r\n      \r\n      container.scrollTo({\r\n        top: Math.max(0, targetY),\r\n        behavior: 'smooth'\r\n      });\r\n    } else {\r\n      console.log('Node or scroll container not found');\r\n    }\r\n  }, [nodes]);\r\n\r\n  const scrollToTop = useCallback(() => {\r\n    console.log('scrollToTop clicked');\r\n    console.log('scrollContainerRef.current:', scrollContainerRef.current);\r\n    if (scrollContainerRef.current) {\r\n      console.log('Scrolling to top');\r\n      scrollContainerRef.current.scrollTo({\r\n        top: 0,\r\n        behavior: 'smooth'\r\n      });\r\n    } else {\r\n      console.log('scrollContainerRef is null');\r\n    }\r\n  }, []);\r\n\r\n  const scrollToBottom = useCallback(() => {\r\n    console.log('scrollToBottom clicked');\r\n    console.log('scrollContainerRef.current:', scrollContainerRef.current);\r\n    if (scrollContainerRef.current) {\r\n      console.log('Scrolling to bottom, scrollHeight:', scrollContainerRef.current.scrollHeight);\r\n      scrollContainerRef.current.scrollTo({\r\n        top: scrollContainerRef.current.scrollHeight,\r\n        behavior: 'smooth'\r\n      });\r\n    } else {\r\n      console.log('scrollContainerRef is null');\r\n    }\r\n  }, []);\r\n\r\n  // Auto-scroll to new nodes when added\r\n  const scrollToLatestNode = useCallback(() => {\r\n    console.log('scrollToLatestNode clicked');\r\n    if (nodes.length > 0) {\r\n      const latestNode = nodes[nodes.length - 1];\r\n      console.log('Latest node:', latestNode);\r\n      setTimeout(() => scrollToNode(latestNode.id), 100);\r\n    } else {\r\n      console.log('No nodes available');\r\n    }\r\n  }, [nodes, scrollToNode]);\r\n\r\n  // Force scroll container to recognize new height\r\n  const refreshScrollContainer = useCallback(() => {\r\n    if (scrollContainerRef.current) {\r\n      const container = scrollContainerRef.current;\r\n      // Force reflow by reading scroll height\r\n      const _ = container.scrollHeight;\r\n      // Update progress after height change\r\n      const { scrollTop, scrollHeight, clientHeight } = container;\r\n      const maxScroll = scrollHeight - clientHeight;\r\n      const progress = maxScroll > 0 ? Math.round((scrollTop / maxScroll) * 100) : 0;\r\n      setScrollProgress(Math.min(100, Math.max(0, progress)));\r\n    }\r\n  }, []);\r\n\r\n  // Calculate dynamic height based on actual node positions plus padding\r\n  const totalHeight = useMemo(() => {\r\n    if (nodes.length === 0) return 600;\r\n    \r\n    // Find the maximum Y position among all nodes - safe version\r\n    const validYPositions = nodes.map(node => node.y || 0).filter(y => y > 0);\r\n    const maxY = validYPositions.length > 0 ? Math.max(...validYPositions) : 0;\r\n    \r\n    // Use either the calculated height based on spacing, or actual max position + padding  \r\n    const spacingBasedHeight = (nodes.length * 200) + 200; // 200 is NODE_SPACING value\r\n    const positionBasedHeight = maxY + 300; // Extra padding for nodes at bottom\r\n    \r\n    const calculatedHeight = Math.max(600, spacingBasedHeight, positionBasedHeight);\r\n    \r\n    return calculatedHeight;\r\n  }, [nodes]);\r\n\r\n  // Refresh scroll container when totalHeight changes\r\n  useEffect(() => {\r\n    refreshScrollContainer();\r\n  }, [totalHeight]); // Remove refreshScrollContainer from dependencies to prevent loop\r\n\r\n  // Track scroll progress and ensure proper scroll container height\r\n  useEffect(() => {\r\n    const scrollContainer = scrollContainerRef.current;\r\n    if (!scrollContainer) return;\r\n\r\n    const handleScroll = () => {\r\n      const { scrollTop, scrollHeight, clientHeight } = scrollContainer;\r\n      const maxScroll = scrollHeight - clientHeight;\r\n      const progress = maxScroll > 0 ? Math.round((scrollTop / maxScroll) * 100) : 0;\r\n      setScrollProgress(Math.min(100, Math.max(0, progress)));\r\n    };\r\n\r\n    // Initial progress calculation\r\n    handleScroll();\r\n\r\n    scrollContainer.addEventListener('scroll', handleScroll, { passive: true });\r\n    \r\n    return () => {\r\n      scrollContainer.removeEventListener('scroll', handleScroll);\r\n    };\r\n  }, [totalHeight]); // Re-run when totalHeight changes\r\n\r\n  // Store initial positions in ref\r\n  const initialPositions = useRef({});\r\n\r\n  // Auto-save functionality with mind map integration - enhanced for case-specific data\r\n  const saveTimelineData = useCallback(async (force = false) => {\r\n    if (isSaving && !force) return;\r\n    \r\n    setIsSaving(true);\r\n    \r\n    try {\r\n      // Prepare timeline data in the format expected by the mind map case structure\r\n      const timelineData = nodes.map((node, index) => ({\r\n        id: node.id || `timeline-${caseId}-${Date.now()}-${index}`,\r\n        title: node.title || `Timeline Entry ${index + 1}`,\r\n        type: 'timeline_entry',\r\n        timestamp: node.date || new Date().toISOString(),\r\n        date: node.date || new Date().toISOString(),\r\n        orderIndex: index,\r\n        // Patient narrative from card text or existing data\r\n        patient_narrative: cardTexts[node.id]?.patient || node.patientData?.notes || node.patient_narrative || '',\r\n        // Clinical notes from card text or existing data  \r\n        clinical_notes: cardTexts[node.id]?.clinical || node.clinicalData?.notes || node.clinical_notes || '',\r\n        // Combined content for search/display\r\n        content: cardTexts[node.id]?.patient || cardTexts[node.id]?.clinical || node.content || '',\r\n        // Preserve existing patient and clinical data structures\r\n        patientData: {\r\n          ...node.patientData,\r\n          notes: cardTexts[node.id]?.patient || node.patientData?.notes || ''\r\n        },\r\n        clinicalData: {\r\n          ...node.clinicalData,\r\n          notes: cardTexts[node.id]?.clinical || node.clinicalData?.notes || ''\r\n        },\r\n        // Position and metadata\r\n        symptoms: node.symptoms || [],\r\n        x: node.x || CENTER_X,\r\n        y: node.y || (100 + (index * NODE_SPACING)),\r\n        created_at: node.created_at || new Date().toISOString(),\r\n        updated_at: new Date().toISOString()\r\n      }));\r\n\r\n      console.log(`Saving timeline data for case ${caseId}:`, timelineData);\r\n\r\n      // If integrated with mind map, update the case data\r\n      if (caseId && setMindMapData && autoSaveMindMapData) {\r\n        setMindMapData(prevData => {\r\n          const updatedCases = prevData.cases.map(caseItem => {\r\n            if (String(caseItem.id) === String(caseId)) {\r\n              return {\r\n                ...caseItem,\r\n                timeline: timelineData,\r\n                last_updated: new Date().toISOString()\r\n              };\r\n            }\r\n            return caseItem;\r\n          });\r\n          const newData = { ...prevData, cases: updatedCases };\r\n          autoSaveMindMapData(newData);\r\n          return newData;\r\n        });\r\n      } else {\r\n        // Fallback to localStorage for standalone usage\r\n        const standaloneData = {\r\n          nodes: nodes.map(node => ({\r\n            ...node,\r\n            patientData: {\r\n              ...node.patientData,\r\n              notes: cardTexts[node.id]?.patient || node.patientData?.notes || ''\r\n            },\r\n            clinicalData: {\r\n              ...node.clinicalData,\r\n              notes: cardTexts[node.id]?.clinical || node.clinicalData?.notes || ''\r\n            }\r\n          })),\r\n          cardTexts,\r\n          timestamp: new Date().toISOString(),\r\n          version: '1.0'\r\n        };\r\n        localStorage.setItem('timeline-data', JSON.stringify(standaloneData));\r\n      }\r\n      \r\n      // Call parent callback if provided\r\n      if (onDataChange) {\r\n        await onDataChange(timelineData);\r\n      }\r\n      \r\n      setLastSaved(new Date());\r\n      console.log('Timeline data saved successfully');\r\n    } catch (error) {\r\n      console.error('Failed to save timeline data:', error);\r\n    } finally {\r\n      setIsSaving(false);\r\n    }\r\n  }, [nodes, cardTexts, isSaving, onDataChange, caseId, setMindMapData, autoSaveMindMapData]);\r\n\r\n  // Debounced auto-save\r\n  const triggerAutoSave = useCallback(() => {\r\n    if (saveTimeoutRef.current) {\r\n      clearTimeout(saveTimeoutRef.current);\r\n    }\r\n    \r\n    saveTimeoutRef.current = setTimeout(() => {\r\n      saveTimelineData();\r\n    }, 800); // 800ms debounce\r\n  }, [saveTimelineData]);\r\n\r\n  // Load timeline data from localStorage or mind map data on mount - enhanced for case-specific integration\r\n  useEffect(() => {\r\n    const loadTimelineData = () => {\r\n      try {\r\n        console.log(`Loading timeline data for case ${caseId}:`, data);\r\n        \r\n        // Priority 1: Load from mind map case data if integrated\r\n        if (caseId && data && Array.isArray(data)) {\r\n          console.log(`Loading ${data.length} timeline entries from case integration for case ${caseId}`);\r\n          \r\n          const timelineNodes = data.map((entry, index) => {\r\n            const nodeId = entry.id || `timeline-${caseId}-${Date.now()}-${index}`;\r\n            const baseY = 100 + (index * NODE_SPACING);\r\n            \r\n            // Initialize card texts from timeline entry data\r\n            setCardTexts(prev => ({\r\n              ...prev,\r\n              [nodeId]: {\r\n                patient: entry.patient_narrative || entry.patientData?.notes || '',\r\n                clinical: entry.clinical_notes || entry.clinicalData?.notes || ''\r\n              }\r\n            }));\r\n            \r\n            // Store initial position in ref\r\n            initialPositions.current[nodeId] = {\r\n              x: entry.x || CENTER_X,\r\n              y: entry.y || baseY,\r\n              index: index\r\n            };\r\n\r\n            // No physics initialization needed for SVG path morphing\r\n            \r\n            return {\r\n              id: nodeId,\r\n              title: entry.title || `Timeline Entry ${index + 1}`,\r\n              date: entry.timestamp || entry.date || new Date().toISOString(),\r\n              type: entry.type || 'timeline_entry',\r\n              patient_narrative: entry.patient_narrative || '',\r\n              clinical_notes: entry.clinical_notes || '',\r\n              content: entry.content || entry.patient_narrative || entry.clinical_notes || '',\r\n              patientData: {\r\n                notes: entry.patient_narrative || '',\r\n                ...entry.patientData\r\n              },\r\n              clinicalData: {\r\n                notes: entry.clinical_notes || '',\r\n                ...entry.clinicalData\r\n              },\r\n              symptoms: entry.symptoms || [],\r\n              x: entry.x || CENTER_X,\r\n              y: entry.y || baseY,\r\n              originalY: baseY,\r\n              orderIndex: entry.orderIndex !== undefined ? entry.orderIndex : index,\r\n              created_at: entry.created_at || new Date().toISOString(),\r\n              updated_at: entry.updated_at || new Date().toISOString()\r\n            };\r\n          });\r\n          \r\n          if (timelineNodes.length > 0) {\r\n            setNodes(timelineNodes);\r\n            console.log(`Successfully loaded ${timelineNodes.length} timeline nodes for case ${caseId}`);\r\n            return true;\r\n          }\r\n        }\r\n        \r\n        // Priority 2: Fallback to localStorage for standalone usage or case with no timeline data\r\n        if (!caseId) {\r\n          const savedData = localStorage.getItem('timeline-data');\r\n          if (savedData) {\r\n            const parsedData = JSON.parse(savedData);\r\n            console.log('Loading saved timeline data from localStorage:', parsedData);\r\n            \r\n            if (parsedData.nodes && parsedData.nodes.length > 0 && nodes.length === 0) {\r\n              setNodes(parsedData.nodes);\r\n              if (parsedData.cardTexts) {\r\n                setCardTexts(parsedData.cardTexts);\r\n              }\r\n              \r\n              // Update refs for saved nodes\r\n              parsedData.nodes.forEach((node, index) => {\r\n                initialPositions.current[node.id] = {\r\n                  x: node.x || CENTER_X,\r\n                  y: node.y || (100 + (index * NODE_SPACING)),\r\n                  index: index\r\n                };\r\n                \r\n                // No physics initialization needed for SVG path morphing\r\n              });\r\n              \r\n              setLastSaved(new Date(parsedData.timestamp));\r\n              return true;\r\n            }\r\n          }\r\n        }\r\n        \r\n        // If no data found, initialize empty timeline for new cases\r\n        console.log(`No existing timeline data found for case ${caseId || 'standalone'}, initializing empty timeline`);\r\n        return false;\r\n        \r\n      } catch (error) {\r\n        console.error('Failed to load timeline data:', error);\r\n        return false;\r\n      }\r\n    };\r\n\r\n    // Try to load saved data first, then fall back to prop data\r\n    const dataLoaded = loadTimelineData();\r\n    if (!dataLoaded && data && data.length > 0 && nodes.length === 0 && !caseId) {\r\n      // Initialize with prop data if no saved data and not integrated with mind map\r\n      const initialNodes = data.map((item, index) => {\r\n        const baseY = 100 + (index * NODE_SPACING);\r\n        const nodeId = item.id;\r\n        \r\n        // Store initial position in ref\r\n        initialPositions.current[nodeId] = {\r\n          x: CENTER_X,\r\n          y: baseY,\r\n          index: index\r\n        };\r\n\r\n        // No physics initialization needed for SVG path morphing\r\n        \r\n        // Initialize card texts from data\r\n        setCardTexts(prev => ({\r\n          ...prev,\r\n          [nodeId]: {\r\n            patient: item.patientData?.notes || item.patientData?.chiefComplaint || '',\r\n            clinical: item.clinicalData?.notes || item.clinicalData?.chiefComplaint || ''\r\n          }\r\n        }));\r\n        \r\n        return {\r\n          ...item,\r\n          x: CENTER_X,\r\n          y: baseY,\r\n          originalY: baseY\r\n        };\r\n      });\r\n      setNodes(initialNodes);\r\n    }\r\n  }, [data, caseId]); // Include caseId in dependencies\r\n\r\n  // Update SVG path connections between nodes\r\n  const updateConnectionPaths = useCallback((draggedNodeId, draggedPosition) => {\r\n    // Find the dragged node's index\r\n    const draggedIndex = initialPositions.current[draggedNodeId]?.index;\r\n    if (draggedIndex === undefined) return;\r\n    \r\n    // Find connections that need updating (previous and next connections)\r\n    const connectionsToUpdate = [];\r\n    \r\n    // If not the first node, update connection from previous node\r\n    if (draggedIndex > 0) {\r\n      const prevNode = nodes[draggedIndex - 1];\r\n      if (prevNode) {\r\n        connectionsToUpdate.push({\r\n          id: `connection-${draggedNodeId}-prev`,\r\n          sourceNode: prevNode,\r\n          targetNode: { ...prevNode, x: draggedPosition.x, y: draggedPosition.y }\r\n        });\r\n      }\r\n    }\r\n    \r\n    // If not the last node, update connection to next node\r\n    if (draggedIndex < nodes.length - 1) {\r\n      const nextNode = nodes[draggedIndex + 1];\r\n      if (nextNode) {\r\n        connectionsToUpdate.push({\r\n          id: `connection-${draggedNodeId}-next`,\r\n          sourceNode: { ...nextNode, x: draggedPosition.x, y: draggedPosition.y },\r\n          targetNode: nextNode\r\n        });\r\n      }\r\n    }\r\n    \r\n    // Update each connection path with GSAP animation\r\n    connectionsToUpdate.forEach(connection => {\r\n      const pathRef = pathRefs.current[connection.id];\r\n      \r\n      if (pathRef) {\r\n        // Calculate curved Bezier path\r\n        const x1 = connection.sourceNode.x;\r\n        const y1 = connection.sourceNode.y;\r\n        const x2 = connection.targetNode.x;\r\n        const y2 = connection.targetNode.y;\r\n        \r\n        // Create a curved path using cubic Bezier that bows slightly outward\r\n        const pathD = `M ${x1} ${y1} C ${x1} ${(y1 + y2) / 2}, ${x2} ${(y1 + y2) / 2}, ${x2} ${y2}`;\r\n        \r\n        // Animate the path morphing with GSAP\r\n        gsap.to(pathRef, {\r\n          attr: { d: pathD },\r\n          duration: PATH_ANIMATION_DURATION,\r\n          ease: PATH_ANIMATION_EASE\r\n        });\r\n      }\r\n    });\r\n  }, [nodes]);\r\n\r\n  // Native drag handling for instant response\r\n  const handleMouseDown = useCallback((event, nodeId) => {\r\n    event.preventDefault();\r\n    \r\n    dragState.current.isDragging = true;\r\n    dragState.current.draggedNodeId = nodeId;\r\n    setIsDragging(true);\r\n\r\n    const currentNodeRef = nodeRefs.current[nodeId];\r\n    if (!currentNodeRef) return;\r\n\r\n    const rect = timelineRef.current?.getBoundingClientRect();\r\n    if (!rect) return;\r\n\r\n    const initialPos = initialPositions.current[nodeId];\r\n    if (!initialPos) return;\r\n\r\n    // Calculate initial offset between mouse and node center\r\n    const startMouseX = event.clientX;\r\n    const startMouseY = event.clientY;\r\n    const startNodeX = initialPos.x;\r\n    const startNodeY = initialPos.y;\r\n\r\n    const handleMouseMove = (moveEvent) => {\r\n      // Calculate exact mouse position relative to timeline container\r\n      const rect = timelineRef.current?.getBoundingClientRect();\r\n      if (!rect) return;\r\n\r\n      const mouseX = moveEvent.clientX - rect.left;\r\n      const mouseY = moveEvent.clientY - rect.top;\r\n\r\n      // Apply constraints - allow Y to expand beyond current totalHeight\r\n      const constrainedX = Math.max(50, Math.min(TIMELINE_WIDTH - 50, mouseX));\r\n      // Remove rigid Y constraint to allow expansion, but keep minimum boundary\r\n      const constrainedY = Math.max(50, mouseY);\r\n\r\n      // Position node directly at mouse position (accounting for node center offset)\r\n      currentNodeRef.style.left = `${constrainedX - 30}px`; // Updated for bigger nodes (60x60)\r\n      currentNodeRef.style.top = `${constrainedY - 30}px`; // Updated for bigger nodes (60x60)\r\n      currentNodeRef.style.transform = '';\r\n\r\n      // Update node state immediately for cards to follow\r\n      setNodes(prevNodes => \r\n        prevNodes.map(node => \r\n          node.id === nodeId \r\n            ? { ...node, x: constrainedX, y: constrainedY }\r\n            : node\r\n        )\r\n      );\r\n\r\n      // Update connection paths with GSAP animations\r\n      updateConnectionPaths(nodeId, { x: constrainedX, y: constrainedY });\r\n    };\r\n\r\n    const handleMouseUp = (upEvent) => {\r\n      dragState.current.isDragging = false;\r\n      dragState.current.draggedNodeId = null;\r\n      setIsDragging(false);\r\n\r\n      // Add a small wobble effect on path when drag ends\r\n      const connectionIds = [\r\n        `connection-${nodeId}-prev`,\r\n        `connection-${nodeId}-next`\r\n      ];\r\n      \r\n      // Apply wobble animation to affected paths\r\n      connectionIds.forEach(id => {\r\n        const pathRef = pathRefs.current[id];\r\n        if (pathRef) {\r\n          gsap.fromTo(pathRef,\r\n            { rotation: -1 },\r\n            { rotation: 0, duration: 0.3, ease: \"sine.out\" }\r\n          );\r\n        }\r\n      });\r\n\r\n      // Calculate final position from current DOM position\r\n      const rect = timelineRef.current?.getBoundingClientRect();\r\n      if (!rect) return;\r\n\r\n      const finalX = Math.max(50, Math.min(TIMELINE_WIDTH - 50, upEvent.clientX - rect.left));\r\n      // Remove rigid Y constraint to allow expansion beyond current totalHeight\r\n      const finalY = Math.max(50, upEvent.clientY - rect.top);\r\n\r\n      // Update state\r\n      setNodes(prevNodes => \r\n        prevNodes.map(node => \r\n          node.id === nodeId \r\n            ? { ...node, x: finalX, y: finalY }\r\n            : node\r\n        )\r\n      );\r\n\r\n      // Update the initial position reference for future drags\r\n      initialPositions.current[nodeId].x = finalX;\r\n      initialPositions.current[nodeId].y = finalY;\r\n\r\n      // Trigger auto-save after position change\r\n      triggerAutoSave();\r\n\r\n      // Refresh scroll container to recognize new height\r\n      setTimeout(() => refreshScrollContainer(), 50);\r\n\r\n      // Clean up event listeners\r\n      document.removeEventListener('mousemove', handleMouseMove);\r\n      document.removeEventListener('mouseup', handleMouseUp);\r\n\r\n      // Small delay to allow drag state to clear before click events\r\n      setTimeout(() => {\r\n        dragState.current.isDragging = false;\r\n      }, 10);\r\n    };\r\n\r\n    // Add event listeners\r\n    document.addEventListener('mousemove', handleMouseMove);\r\n    document.addEventListener('mouseup', handleMouseUp);\r\n  }, [totalHeight, updateConnectionPaths, triggerAutoSave]); // Remove refreshScrollContainer to prevent dependency loop\r\n\r\n  // Handle node click - trigger edit mode for both cards and scroll to center\r\n  const handleNodeClick = useCallback((node) => {\r\n    // Only trigger if not currently dragging\r\n    if (dragState.current.isDragging) return;\r\n    \r\n    // Smooth scroll to center the clicked node\r\n    if (scrollContainerRef.current) {\r\n      const container = scrollContainerRef.current;\r\n      const targetY = node.y - (container.clientHeight / 2);\r\n      \r\n      container.scrollTo({\r\n        top: Math.max(0, targetY),\r\n        behavior: 'smooth'\r\n      });\r\n    }\r\n    \r\n    // Clear any hover state and set editing state for this node only\r\n    setHoveredNode(null);\r\n    setEditingCards({\r\n      [node.id]: { patient: true, clinical: true }\r\n    });\r\n    onNodeClick?.(node);\r\n  }, [onNodeClick]);\r\n\r\n  // Handle node hover\r\n  const handleNodeHover = useCallback((node, isHovering) => {\r\n    if (!dragState.current.isDragging) {\r\n      if (isHovering) {\r\n        // Clear any existing editing states when hovering over a different node\r\n        setEditingCards({});\r\n        setHoveredNode(node);\r\n      } else {\r\n        setHoveredNode(null);\r\n      }\r\n      onNodeHover?.(node, isHovering);\r\n    }\r\n  }, [onNodeHover]);\r\n\r\n  // Handle text change with auto-save\r\n  const handleTextChange = useCallback((nodeId, cardType, newText) => {\r\n    setCardTexts(prev => ({\r\n      ...prev,\r\n      [nodeId]: {\r\n        ...prev[nodeId],\r\n        [cardType]: newText\r\n      }\r\n    }));\r\n    \r\n    // Trigger auto-save after text change\r\n    triggerAutoSave();\r\n  }, [triggerAutoSave]);\r\n\r\n  // Handle click outside card (save and exit edit mode for both cards)\r\n  const handleClickOutside = useCallback((nodeId, cardType) => {\r\n    setEditingCards(prev => ({\r\n      ...prev,\r\n      [nodeId]: { patient: false, clinical: false }\r\n    }));\r\n  }, []);\r\n\r\n  // Determine if cards should be visible\r\n  const shouldShowCards = useCallback((nodeId) => {\r\n    const isHovered = hoveredNode?.id === nodeId;\r\n    const isEditing = editingCards[nodeId]?.patient || editingCards[nodeId]?.clinical;\r\n    console.log(`Cards visibility check for ${nodeId}:`, { isHovered, isEditing, editingState: editingCards[nodeId] });\r\n    return isHovered || isEditing;\r\n  }, [hoveredNode, editingCards]);\r\n\r\n  // Handle adding new node to the timeline\r\n  const handleAddNode = useCallback(() => {\r\n    if (isAnimatingNewNode) return; // Prevent multiple additions during animation\r\n    \r\n    setIsAnimatingNewNode(true);\r\n    \r\n    // Generate new node data\r\n    const newNodeId = `node-${Date.now()}`;\r\n    const newIndex = nodes.length;\r\n    const baseY = 100 + (newIndex * NODE_SPACING);\r\n    \r\n    const newNodeData = {\r\n      id: newNodeId,\r\n      date: new Date().toISOString(),\r\n      patientData: {\r\n        chiefComplaint: '',\r\n        notes: ''\r\n      },\r\n      clinicalData: {\r\n        chiefComplaint: '',\r\n        notes: ''\r\n      },\r\n      x: CENTER_X,\r\n      y: baseY,\r\n      originalY: baseY\r\n    };\r\n\r\n    // Store initial position and physics data\r\n    initialPositions.current[newNodeId] = {\r\n      x: CENTER_X,\r\n      y: baseY,\r\n      index: newIndex\r\n    };\r\n\r\n    // No physics initialization needed for SVG path morphing\r\n\r\n    // Initialize card texts\r\n    setCardTexts(prev => ({\r\n      ...prev,\r\n      [newNodeId]: {\r\n        patient: '',\r\n        clinical: ''\r\n      }\r\n    }));\r\n\r\n    // Add new node to the timeline\r\n    setNodes(prevNodes => {\r\n      const updatedNodes = [...prevNodes, newNodeData];\r\n      \r\n      // Update all node indices in initialPositions\r\n      updatedNodes.forEach((node, index) => {\r\n        if (initialPositions.current[node.id]) {\r\n          initialPositions.current[node.id].index = index;\r\n        }\r\n      });\r\n      \r\n      return updatedNodes;\r\n    });\r\n\r\n    // Scroll to the new node after a brief delay for animation\r\n    setTimeout(() => {\r\n      const newNodeElement = document.querySelector(`[data-node-id=\"${newNodeId}\"]`);\r\n      if (newNodeElement && scrollContainerRef.current) {\r\n        newNodeElement.scrollIntoView({ \r\n          behavior: 'smooth', \r\n          block: 'center',\r\n          inline: 'nearest' \r\n        });\r\n      }\r\n      setIsAnimatingNewNode(false);\r\n      \r\n      // Trigger auto-save after adding new node\r\n      triggerAutoSave();\r\n    }, 800);\r\n\r\n  }, [nodes.length, isAnimatingNewNode, triggerAutoSave]);\r\n\r\n  // Handle resetting layout to original straight line\r\n  const handleResetLayout = useCallback(() => {\r\n    // Reset all nodes to their original positions\r\n    setNodes(prevNodes => \r\n      prevNodes.map((node, index) => {\r\n        const baseY = 100 + (index * NODE_SPACING);\r\n        const resetNode = {\r\n          ...node,\r\n          x: CENTER_X,\r\n          y: baseY,\r\n          originalY: baseY\r\n        };\r\n\r\n        // Update initial positions reference\r\n        if (initialPositions.current[node.id]) {\r\n          initialPositions.current[node.id].x = CENTER_X;\r\n          initialPositions.current[node.id].y = baseY;\r\n          initialPositions.current[node.id].index = index;\r\n        }\r\n\r\n        // Reset physics state\r\n        // Update connection paths after layout reset\r\n        const prevId = `connection-${node.id}-prev`;\r\n        const nextId = `connection-${node.id}-next`;\r\n        \r\n        [prevId, nextId].forEach(id => {\r\n          const pathRef = pathRefs.current[id];\r\n          if (pathRef) {\r\n            gsap.to(pathRef, {\r\n              attr: { d: \"\" }, // Will be recalculated when nodes are rendered\r\n              duration: PATH_ANIMATION_DURATION,\r\n              ease: PATH_ANIMATION_EASE\r\n            });\r\n          }\r\n        });\r\n\r\n        // Update DOM positions immediately\r\n        const nodeElement = document.querySelector(`[data-node-id=\"${node.id}\"]`);\r\n        if (nodeElement) {\r\n          nodeElement.style.left = `${CENTER_X - 30}px`;\r\n          nodeElement.style.top = `${baseY - 30}px`;\r\n          nodeElement.style.transform = '';\r\n        }\r\n\r\n        // Update card positions\r\n        const patientCard = document.querySelector(`[data-patient-card=\"${node.id}\"]`);\r\n        const clinicalCard = document.querySelector(`[data-clinical-card=\"${node.id}\"]`);\r\n        if (patientCard) {\r\n          patientCard.style.left = `${CENTER_X - CARD_OFFSET - CARD_WIDTH}px`;\r\n          patientCard.style.top = `${baseY - 60}px`;\r\n          patientCard.style.transform = '';\r\n        }\r\n        if (clinicalCard) {\r\n          clinicalCard.style.left = `${CENTER_X + CARD_OFFSET}px`;\r\n          clinicalCard.style.top = `${baseY - 60}px`;\r\n          clinicalCard.style.transform = '';\r\n        }\r\n\r\n        return resetNode;\r\n      })\r\n    );\r\n    \r\n    // Trigger auto-save after reset\r\n    triggerAutoSave();\r\n  }, [triggerAutoSave]);\r\n\r\n  // Manual save function\r\n  const handleManualSave = useCallback(() => {\r\n    saveTimelineData(true); // Force save\r\n  }, [saveTimelineData]);\r\n\r\n  // Cleanup auto-save timeout on unmount\r\n  useEffect(() => {\r\n    return () => {\r\n      if (saveTimeoutRef.current) {\r\n        clearTimeout(saveTimeoutRef.current);\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"relative w-full h-full\">\r\n      {/* Inject custom scrollbar styles */}\r\n      <style>{scrollbarStyles}</style>\r\n      \r\n      {/* Control Buttons Container */}\r\n      <div className=\"absolute top-4 right-4 flex gap-2 z-40\">\r\n        {/* Scroll Navigation */}\r\n        <motion.button\r\n          className=\"bg-gradient-to-r from-blue-600 to-purple-600 text-white px-3 py-2 rounded-lg shadow-lg flex items-center gap-2 transition-all hover:shadow-blue-300/30\"\r\n          onClick={scrollToTop}\r\n          whileHover={{ scale: 1.05 }}\r\n          whileTap={{ scale: 0.95 }}\r\n          initial={{ opacity: 0, x: 20 }}\r\n          animate={{ opacity: 1, x: 0 }}\r\n          transition={{ delay: 1.8, duration: 0.5 }}\r\n          title=\"Scroll to Top\"\r\n        >\r\n          <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5 10l7-7m0 0l7 7m-7-7v18\" />\r\n          </svg>\r\n          Top\r\n        </motion.button>\r\n\r\n        <motion.button\r\n          className=\"bg-gradient-to-r from-blue-600 to-purple-600 text-white px-3 py-2 rounded-lg shadow-lg flex items-center gap-2 transition-all hover:shadow-blue-300/30\"\r\n          onClick={scrollToBottom}\r\n          whileHover={{ scale: 1.05 }}\r\n          whileTap={{ scale: 0.95 }}\r\n          initial={{ opacity: 0, x: 20 }}\r\n          animate={{ opacity: 1, x: 0 }}\r\n          transition={{ delay: 2.0, duration: 0.5 }}\r\n          title=\"Scroll to Bottom\"\r\n        >\r\n          <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 14l-7 7m0 0l-7-7m7 7V4\" />\r\n          </svg>\r\n          Bottom\r\n        </motion.button>\r\n\r\n        <motion.button\r\n          className=\"bg-gradient-to-r from-indigo-600 to-purple-600 text-white px-3 py-2 rounded-lg shadow-lg flex items-center gap-2 transition-all hover:shadow-indigo-300/30\"\r\n          onClick={scrollToLatestNode}\r\n          whileHover={{ scale: 1.05 }}\r\n          whileTap={{ scale: 0.95 }}\r\n          initial={{ opacity: 0, x: 20 }}\r\n          animate={{ opacity: 1, x: 0 }}\r\n          transition={{ delay: 2.2, duration: 0.5 }}\r\n          title=\"Go to Latest Entry\"\r\n        >\r\n          <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M13 10V3L4 14h7v7l9-11h-7z\" />\r\n          </svg>\r\n          Latest\r\n        </motion.button>\r\n\r\n        {/* Save Button */}\r\n        <motion.button\r\n          className={`${\r\n            isSaving \r\n              ? 'bg-gradient-to-r from-green-500 to-emerald-600 cursor-not-allowed' \r\n              : 'bg-gradient-to-r from-green-500 to-emerald-600 hover:shadow-green-300/30'\r\n          } text-white px-4 py-2 rounded-lg shadow-lg flex items-center gap-2 transition-all`}\r\n          onClick={handleManualSave}\r\n          disabled={isSaving}\r\n          whileHover={!isSaving ? { scale: 1.05 } : {}}\r\n          whileTap={!isSaving ? { scale: 0.95 } : {}}\r\n          initial={{ opacity: 0, x: 20 }}\r\n          animate={{ opacity: 1, x: 0 }}\r\n          transition={{ delay: 1.4, duration: 0.5 }}\r\n        >\r\n          {isSaving ? (\r\n            <svg className=\"w-4 h-4 animate-spin\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\" />\r\n            </svg>\r\n          ) : (\r\n            <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M8 7H5a2 2 0 00-2 2v9a2 2 0 002 2h14a2 2 0 002-2V9a2 2 0 00-2-2h-3m-1 4l-3 3m0 0l-3-3m3 3V4\" />\r\n            </svg>\r\n          )}\r\n          {isSaving ? 'Saving...' : 'Save'}\r\n        </motion.button>\r\n\r\n        {/* Reset Layout Button */}\r\n        <motion.button\r\n          className=\"bg-gradient-to-r from-gray-600 to-slate-700 text-white px-4 py-2 rounded-lg shadow-lg flex items-center gap-2 transition-all hover:shadow-gray-400/20\"\r\n          onClick={handleResetLayout}\r\n          whileHover={{ scale: 1.05 }}\r\n          whileTap={{ scale: 0.95 }}\r\n          initial={{ opacity: 0, x: 20 }}\r\n          animate={{ opacity: 1, x: 0 }}\r\n          transition={{ delay: 1.2, duration: 0.5 }}\r\n        >\r\n          <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15\" />\r\n          </svg>\r\n          Reset Layout\r\n        </motion.button>\r\n\r\n        {/* Add Node Button */}\r\n        <motion.button\r\n          className=\"bg-gradient-to-r from-blue-500 to-blue-700 text-white px-4 py-2 rounded-lg shadow-lg flex items-center gap-2 transition-all hover:shadow-blue-400/30\"\r\n          onClick={handleAddNode}\r\n          disabled={isAnimatingNewNode}\r\n          whileHover={{ scale: 1.05 }}\r\n          whileTap={{ scale: 0.95 }}\r\n          initial={{ opacity: 0, x: 20 }}\r\n          animate={{ opacity: 1, x: 0 }}\r\n          transition={{ delay: 1, duration: 0.5 }}\r\n        >\r\n          <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 4v16m8-8H4\" />\r\n          </svg>\r\n          {isAnimatingNewNode ? 'Adding...' : 'Add Node'}\r\n        </motion.button>\r\n      </div>\r\n\r\n      {/* Scrollable Timeline Container */}\r\n      <div \r\n        ref={scrollContainerRef}\r\n        className=\"timeline-scrollbar relative w-full overflow-y-auto\"\r\n        style={{ \r\n          height: '80vh', // Fixed height to ensure scrolling works\r\n          maxHeight: '600px' // Maximum height constraint\r\n        }}\r\n        onClick={(e) => {\r\n          // Close all edit modes when clicking outside cards and nodes\r\n          const isClickOnCard = e.target.closest('.timeline-card');\r\n          const isClickOnNode = e.target.closest('.timeline-node');\r\n          const isClickOnButton = e.target.closest('button');\r\n          \r\n          if (!isClickOnCard && !isClickOnNode && !isClickOnButton) {\r\n            setEditingCards({});\r\n          }\r\n        }}\r\n      >\r\n        <div \r\n          className=\"relative w-full\" \r\n          style={{ \r\n            height: Math.max((totalHeight || 600) + 200, window.innerHeight || 600),\r\n            minHeight: '100vh' // Ensure minimum height is always at least viewport height\r\n          }}\r\n        >\r\n      {/* Main timeline container */}\r\n      <div \r\n        ref={timelineRef}\r\n        className=\"relative mx-auto\"\r\n        style={{ width: TIMELINE_WIDTH, height: (totalHeight || 600) + 200 }}\r\n      >\r\n        {/* Dynamic vertical line that responds to node movement */}\r\n        <svg \r\n          className=\"absolute inset-0 pointer-events-none\"\r\n          style={{ zIndex: 1 }}\r\n          width={TIMELINE_WIDTH}\r\n          height={totalHeight + 200}\r\n          viewBox={`0 0 ${TIMELINE_WIDTH} ${totalHeight + 200}`}\r\n        >\r\n          <path\r\n            d={`M ${CENTER_X} 50 ${nodes.map(node => `L ${node.x} ${node.y}`).join(' ')}`}\r\n            stroke=\"url(#timelineGradient)\"\r\n            strokeWidth=\"2\"\r\n            fill=\"none\"\r\n            strokeDasharray=\"5,5\"\r\n          />\r\n          \r\n          {/* Define gradients for timeline elements */}\r\n          <defs>\r\n            <linearGradient id=\"timelineGradient\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"100%\">\r\n              <stop offset=\"0%\" stopColor=\"#93C5FD\" />\r\n              <stop offset=\"100%\" stopColor=\"#C4B5FD\" />\r\n            </linearGradient>\r\n            <linearGradient id=\"connectionGradient\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"100%\">\r\n              <stop offset=\"0%\" stopColor=\"#3B82F6\" />\r\n              <stop offset=\"100%\" stopColor=\"#8B5CF6\" />\r\n            </linearGradient>\r\n            <filter id=\"glow\" x=\"-20%\" y=\"-20%\" width=\"140%\" height=\"140%\">\r\n              <feGaussianBlur stdDeviation=\"3\" result=\"blur\" />\r\n              <feComposite in=\"SourceGraphic\" in2=\"blur\" operator=\"over\" />\r\n            </filter>\r\n          </defs>\r\n          \r\n          {/* Curved connection paths between nodes with GSAP morphing */}\r\n          {nodes.map((node, index) => {\r\n            if (index === 0) return null;\r\n            const prevNode = nodes[index - 1];\r\n            \r\n            // Create curved Bezier path\r\n            const x1 = prevNode.x;\r\n            const y1 = prevNode.y;\r\n            const x2 = node.x;\r\n            const y2 = node.y;\r\n            const pathD = `M ${x1} ${y1} C ${x1} ${(y1 + y2) / 2}, ${x2} ${(y1 + y2) / 2}, ${x2} ${y2}`;\r\n            \r\n            // Create connection IDs for both directions\r\n            const prevConnectionId = `connection-${prevNode.id}-next`;\r\n            const nextConnectionId = `connection-${node.id}-prev`;\r\n            \r\n            // Generate the key using both node IDs to ensure uniqueness\r\n            const connectionKey = `connection-${prevNode.id}-${node.id}`;\r\n            \r\n            return (\r\n              <motion.path\r\n                key={connectionKey}\r\n                ref={el => {\r\n                  // Store refs for both connecting nodes for animation\r\n                  pathRefs.current[prevConnectionId] = el;\r\n                  pathRefs.current[nextConnectionId] = el;\r\n                }}\r\n                d={pathD}\r\n                stroke=\"url(#connectionGradient)\"\r\n                strokeWidth=\"3\"\r\n                fill=\"none\"\r\n                strokeLinecap=\"round\"\r\n                strokeOpacity=\"0.8\"\r\n                filter=\"url(#glow)\"\r\n                style={{ transformOrigin: 'center' }}\r\n                initial={{ opacity: 1, pathLength: 0 }}\r\n                animate={{ opacity: 1, pathLength: 1 }}\r\n                transition={{ duration: 0.8, delay: Math.min(0.5, index * 0.1) }}\r\n              />\r\n            );\r\n          })}\r\n        </svg>\r\n\r\n        {/* Timeline title */}\r\n        <motion.div\r\n          className=\"absolute text-center\"\r\n          style={{\r\n            left: CENTER_X - 150,\r\n            top: 10,\r\n            width: 300\r\n          }}\r\n          initial={{ opacity: 0, y: -20 }}\r\n          animate={{ opacity: 1, y: 0 }}\r\n          transition={{ delay: 0.5, duration: 0.6 }}\r\n        >\r\n          <h2 className=\"text-xl font-bold bg-gradient-to-r from-blue-600 to-purple-600 bg-clip-text text-transparent\">Patient Timeline</h2>\r\n          <p className=\"text-sm text-gray-600\">Instant 1:1 drag • Hover for cards • Click to edit</p>\r\n        </motion.div>\r\n\r\n        {/* All connections are now handled by the SVG path elements above */}\r\n\r\n        {/* Timeline nodes */}\r\n        {nodes.map((node, index) => (\r\n          <div key={node.id}>\r\n            {/* Pure DOM Draggable Timeline Node */}\r\n            <motion.div\r\n              ref={el => nodeRefs.current[node.id] = el}\r\n              data-node-id={node.id}\r\n              className={`timeline-node absolute cursor-grab active:cursor-grabbing transform-gpu ${\r\n                hoveredNode?.id === node.id\r\n                  ? 'ring-[5px] ring-purple-200/40 shadow-xl scale-110' \r\n                  : 'shadow-md hover:shadow-lg hover:scale-105'\r\n              }`}\r\n              style={{\r\n                left: node.x - 30, // Updated for bigger nodes\r\n                top: node.y - 30, // Updated for bigger nodes\r\n                width: 60, // Increased from 40\r\n                height: 60, // Increased from 40\r\n                borderRadius: '50%',\r\n                background: hoveredNode?.id === node.id\r\n                  ? 'linear-gradient(135deg, #8B5CF6, #6366F1, #4F46E5)' // Purple to indigo gradient when hovered\r\n                  : 'linear-gradient(135deg, #3B82F6, #6366F1, #4F46E5)', // Blue to indigo gradient normally\r\n                boxShadow: hoveredNode?.id === node.id\r\n                  ? '0 0 20px rgba(139, 92, 246, 0.6), inset 0 0 10px rgba(255, 255, 255, 0.2)' // Enhanced purple glow when hovered\r\n                  : '0 0 15px rgba(59, 130, 246, 0.5), inset 0 0 8px rgba(255, 255, 255, 0.2)', // Enhanced blue glow normally\r\n                border: '3px solid rgba(255, 255, 255, 0.9)',\r\n                display: 'flex',\r\n                alignItems: 'center',\r\n                justifyContent: 'center',\r\n                zIndex: 10,\r\n                transition: dragState.current.isDragging \r\n                  ? 'none' \r\n                  : 'all 0.2s cubic-bezier(0.4, 0, 0.2, 1), transform 0.15s ease-out',\r\n                willChange: dragState.current.isDragging ? 'transform' : 'auto'\r\n              }}\r\n              initial={{ scale: 0, opacity: 0 }}\r\n              animate={{ scale: 1, opacity: 1 }}\r\n              transition={{ \r\n                type: \"spring\", \r\n                stiffness: 200, \r\n                damping: 20,\r\n                delay: index * 0.1 \r\n              }}\r\n              onMouseDown={(event) => {\r\n                // Add active state animation\r\n                const nodeEl = event.currentTarget;\r\n                nodeEl.style.transform = 'scale(0.95)';\r\n                setTimeout(() => {\r\n                  if (nodeEl.style.transform === 'scale(0.95)') {\r\n                    nodeEl.style.transform = '';\r\n                  }\r\n                }, 100);\r\n                \r\n                handleMouseDown(event, node.id);\r\n              }}\r\n              onClick={(event) => {\r\n                event.stopPropagation();\r\n                // Small delay to ensure drag state is cleared\r\n                setTimeout(() => {\r\n                  if (!dragState.current.isDragging) {\r\n                    handleNodeClick(node);\r\n                  }\r\n                }, 20);\r\n              }}\r\n              onMouseEnter={(event) => {\r\n                // Only trigger hover if not dragging\r\n                if (!dragState.current.isDragging) {\r\n                  handleNodeHover(node, true);\r\n                }\r\n              }}\r\n              onMouseLeave={(event) => {\r\n                // Only trigger hover if not dragging\r\n                if (!dragState.current.isDragging) {\r\n                  handleNodeHover(node, false);\r\n                }\r\n              }}\r\n            >\r\n              {/* Node inner circle with pulse animation and icon */}\r\n              <div className=\"w-full h-full rounded-full bg-gradient-to-b from-white/40 to-white/10 flex items-center justify-center relative overflow-hidden backdrop-blur-[1px]\">\r\n                {/* Glass effect background */}\r\n                <div className=\"absolute inset-1 rounded-full bg-white/10 backdrop-blur-[2px]\"></div>\r\n                \r\n                {/* Icon with enhanced styling */}\r\n                <div className=\"z-10 text-white drop-shadow-lg relative\">\r\n                  {/* Show different icons based on node content or type */}\r\n                  {node.symptoms && node.symptoms.length > 0 ? (\r\n                    <svg className=\"w-6 h-6 filter drop-shadow-md\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\r\n                      <path d=\"M9 2a1 1 0 000 2h2a1 1 0 100-2H9z\" />\r\n                      <path fillRule=\"evenodd\" d=\"M4 5a2 2 0 012-2 3 3 0 003 3h2a3 3 0 003-3 2 2 0 012 2v11a2 2 0 01-2 2H6a2 2 0 01-2-2V5z\" clipRule=\"evenodd\" />\r\n                    </svg>\r\n                  ) : node.patientData?.notes ? (\r\n                    <svg className=\"w-6 h-6 filter drop-shadow-md\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\r\n                      <path fillRule=\"evenodd\" d=\"M10 9a3 3 0 100-6 3 3 0 000 6zm-7 9a7 7 0 1114 0H3z\" clipRule=\"evenodd\" />\r\n                    </svg>\r\n                  ) : (\r\n                    <svg className=\"w-6 h-6 filter drop-shadow-md\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\r\n                      <path fillRule=\"evenodd\" d=\"M6 2a1 1 0 00-1 1v1H4a2 2 0 00-2 2v10a2 2 0 002 2h12a2 2 0 002-2V6a2 2 0 00-2-2h-1V3a1 1 0 10-2 0v1H7V3a1 1 0 00-1-1zm0 5a1 1 0 000 2h8a1 1 0 100-2H6z\" clipRule=\"evenodd\" />\r\n                    </svg>\r\n                  )}\r\n                </div>\r\n                {/* Enhanced pulse ring effect with gradient */}\r\n                <div \r\n                  className=\"absolute inset-0 rounded-full bg-gradient-to-r from-white/30 to-blue-300/30\"\r\n                  style={{\r\n                    animation: hoveredNode?.id === node.id \r\n                      ? 'pulse 1.8s cubic-bezier(0.4, 0, 0.6, 1) infinite' \r\n                      : 'pulse 3s cubic-bezier(0.4, 0, 0.6, 1) infinite',\r\n                    opacity: hoveredNode?.id === node.id ? 0.8 : 0.4\r\n                  }}\r\n                ></div>\r\n                \r\n                {/* Second pulse ring for enhanced effect */}\r\n                {hoveredNode?.id === node.id && (\r\n                  <div \r\n                    className=\"absolute inset-[-5px] rounded-full bg-purple-300/20\"\r\n                    style={{\r\n                      animation: 'pulse 2.2s cubic-bezier(0.4, 0, 0.6, 1) infinite 0.5s'\r\n                    }}\r\n                  ></div>\r\n                )}\r\n              </div>\r\n              \r\n              {/* Date label with slide animation */}\r\n              <div \r\n                className={`absolute text-xs font-medium whitespace-nowrap transition-all duration-200 ease-out ${\r\n                  hoveredNode?.id === node.id \r\n                  ? 'translate-x-2 bg-gradient-to-r from-blue-600 to-purple-600 text-white shadow-md' \r\n                  : 'bg-white/90 text-gray-700'\r\n                } px-2 py-1 rounded-md shadow-sm`}\r\n                style={{\r\n                  left: 70, // Adjusted for bigger node\r\n                  top: '50%',\r\n                  transform: hoveredNode?.id === node.id \r\n                    ? 'translateY(-50%) translateX(8px) scale(1.05)' \r\n                    : 'translateY(-50%)',\r\n                  borderLeft: hoveredNode?.id === node.id\r\n                    ? '3px solid rgba(255, 255, 255, 0.7)'\r\n                    : 'none'\r\n                }}\r\n              >\r\n                {/* Format date to be more readable */}\r\n                {(() => {\r\n                  const date = new Date(node.date);\r\n                  return `${date.toLocaleDateString(undefined, { month: 'short', day: 'numeric' })} · ${date.toLocaleTimeString(undefined, { hour: '2-digit', minute: '2-digit' })}`;\r\n                })()}\r\n              </div>\r\n            </motion.div>\r\n\r\n            {/* Hover/Edit Cards */}\r\n            <AnimatePresence>\r\n              {shouldShowCards(node.id) && (\r\n                <>\r\n                  {/* Patient Card */}\r\n                  <motion.div\r\n                    data-patient-card={node.id}\r\n                    className=\"timeline-card absolute bg-white rounded-lg shadow-xl z-20 backdrop-blur-sm\"\r\n                    style={{\r\n                      left: node.x - CARD_OFFSET - CARD_WIDTH,\r\n                      top: node.y - 60,\r\n                      width: CARD_WIDTH,\r\n                      borderRadius: '0.75rem',\r\n                      borderLeft: '4px solid transparent',\r\n                      borderImage: 'linear-gradient(to bottom, #3B82F6, #8B5CF6) 1',\r\n                      boxShadow: '0 10px 25px -5px rgba(30, 58, 138, 0.3), 0 8px 10px -6px rgba(67, 56, 202, 0.25)',\r\n                      padding: '16px',\r\n                      background: 'linear-gradient(to bottom right, rgba(30, 41, 59, 0.85), rgba(15, 23, 42, 0.9))',\r\n                    }}\r\n                    initial={{ opacity: 0, scale: 0.8, x: 20 }}\r\n                    animate={{ opacity: 1, scale: 1, x: 0 }}\r\n                    exit={{ opacity: 0, scale: 0.8, x: 20 }}\r\n                    transition={{ type: \"spring\", stiffness: 300, damping: 25 }}\r\n                  >\r\n                    <div className=\"flex items-center mb-3\">\r\n                      <div className=\"w-3 h-3 bg-gradient-to-r from-blue-400 to-indigo-500 rounded-full mr-2 shadow-sm\"></div>\r\n                      <h4 className=\"font-semibold bg-gradient-to-r from-blue-300 to-indigo-300 bg-clip-text text-transparent\">Patient Narrative</h4>\r\n                      {editingCards[node.id]?.patient && (\r\n                        <div className=\"ml-auto text-xs font-medium px-2 py-0.5 rounded-full bg-blue-900/50 text-blue-200 shadow-inner border border-blue-700/30\">Editing</div>\r\n                      )}\r\n                    </div>\r\n                    \r\n                    {editingCards[node.id]?.patient ? (\r\n                      <textarea\r\n                        className=\"w-full h-24 p-3 border-2 border-blue-700/50 rounded-lg resize-none text-sm focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-600 shadow-inner bg-slate-800/70 backdrop-blur-sm transition-all text-blue-100\"\r\n                        value={cardTexts[node.id]?.patient || ''}\r\n                        onChange={(e) => handleTextChange(node.id, 'patient', e.target.value)}\r\n                        onBlur={(e) => {\r\n                          // Save and close when focus is lost\r\n                          handleClickOutside(node.id, 'patient');\r\n                        }}\r\n                        placeholder=\"Enter patient narrative...\"\r\n                        style={{\r\n                          boxShadow: 'inset 0 2px 4px 0 rgba(29, 78, 216, 0.2)'\r\n                        }}\r\n                      />\r\n                    ) : (\r\n                      <div\r\n                        className=\"text-sm text-blue-100 min-h-[60px] p-3 border-2 border-transparent hover:border-blue-700/40 rounded-lg cursor-text hover:bg-slate-800/50 transition-all\"\r\n                        onClick={(e) => {\r\n                          e.stopPropagation();\r\n                          // Clear any hover state and set editing for this node only\r\n                          setHoveredNode(null);\r\n                          setEditingCards({\r\n                            [node.id]: { patient: true, clinical: true }\r\n                          });\r\n                        }}\r\n                        style={{\r\n                          backgroundImage: cardTexts[node.id]?.patient ? 'linear-gradient(to bottom right, rgba(30, 58, 138, 0.3), rgba(30, 64, 175, 0.15))' : 'none',\r\n                          boxShadow: cardTexts[node.id]?.patient ? 'inset 0 1px 2px 0 rgba(29, 78, 216, 0.15)' : 'none'\r\n                        }}\r\n                      >\r\n                        {cardTexts[node.id]?.patient || (\r\n                          <span className=\"text-blue-300 italic\">Click to add patient narrative...</span>\r\n                        )}\r\n                      </div>\r\n                    )}\r\n                    \r\n                    {/* Connection line to node - gradient line with animated pulse */}\r\n                    <div className=\"absolute\" style={{\r\n                        width: CARD_OFFSET - 20,\r\n                        height: 2,\r\n                        right: -CARD_OFFSET + 20,\r\n                        top: 50,\r\n                        zIndex: 0,\r\n                        overflow: 'hidden'\r\n                      }}\r\n                    >\r\n                      <div \r\n                        className=\"h-full w-full bg-gradient-to-r from-blue-300 via-indigo-400 to-blue-500\"\r\n                        style={{\r\n                          animation: hoveredNode?.id === node.id \r\n                            ? 'shimmer 1.5s linear infinite' \r\n                            : 'none'\r\n                        }}\r\n                      ></div>\r\n                      <style jsx>{`\r\n                        @keyframes shimmer {\r\n                          0% { transform: translateX(-100%); }\r\n                          100% { transform: translateX(100%); }\r\n                        }\r\n                      `}</style>\r\n                    </div>\r\n                  </motion.div>\r\n\r\n                  {/* Clinical Card */}\r\n                  <motion.div\r\n                    data-clinical-card={node.id}\r\n                    className=\"timeline-card absolute bg-white rounded-lg shadow-xl z-20 backdrop-blur-sm\"\r\n                    style={{\r\n                      left: node.x + CARD_OFFSET,\r\n                      top: node.y - 60,\r\n                      width: CARD_WIDTH,\r\n                      borderRadius: '0.75rem',\r\n                      borderLeft: '4px solid transparent',\r\n                      borderImage: 'linear-gradient(to bottom, #8B5CF6, #6366F1) 1',\r\n                      boxShadow: '0 10px 25px -5px rgba(91, 33, 182, 0.3), 0 8px 10px -6px rgba(76, 29, 149, 0.25)',\r\n                      padding: '16px',\r\n                      background: 'linear-gradient(to bottom right, rgba(30, 41, 59, 0.85), rgba(15, 23, 42, 0.9))'\r\n                    }}\r\n                    initial={{ opacity: 0, scale: 0.8, x: -20 }}\r\n                    animate={{ opacity: 1, scale: 1, x: 0 }}\r\n                    exit={{ opacity: 0, scale: 0.8, x: -20 }}\r\n                    transition={{ type: \"spring\", stiffness: 300, damping: 25, delay: 0.1 }}\r\n                  >\r\n                    <div className=\"flex items-center mb-3\">\r\n                      <div className=\"w-3 h-3 bg-gradient-to-r from-purple-400 to-indigo-500 rounded-full mr-2 shadow-sm\"></div>\r\n                      <h4 className=\"font-semibold bg-gradient-to-r from-purple-300 to-indigo-300 bg-clip-text text-transparent\">Clinical Impression</h4>\r\n                      {editingCards[node.id]?.clinical && (\r\n                        <div className=\"ml-auto text-xs font-medium px-2 py-0.5 rounded-full bg-purple-900/50 text-purple-200 shadow-inner border border-purple-700/30\">Editing</div>\r\n                      )}\r\n                    </div>\r\n                    \r\n                    {editingCards[node.id]?.clinical ? (\r\n                      <textarea\r\n                        className=\"w-full h-24 p-3 border-2 border-purple-700/50 rounded-lg resize-none text-sm focus:outline-none focus:ring-2 focus:ring-purple-500 focus:border-purple-600 shadow-inner bg-slate-800/70 backdrop-blur-sm transition-all text-purple-100\"\r\n                        value={cardTexts[node.id]?.clinical || ''}\r\n                        onChange={(e) => handleTextChange(node.id, 'clinical', e.target.value)}\r\n                        onBlur={(e) => {\r\n                          // Save and close when focus is lost\r\n                          handleClickOutside(node.id, 'clinical');\r\n                        }}\r\n                        placeholder=\"Enter clinical impression...\"\r\n                        style={{\r\n                          boxShadow: 'inset 0 2px 4px 0 rgba(126, 34, 206, 0.2)'\r\n                        }}\r\n                      />\r\n                    ) : (\r\n                      <div\r\n                        className=\"text-sm text-purple-100 min-h-[60px] p-3 border-2 border-transparent hover:border-purple-700/40 rounded-lg cursor-text hover:bg-slate-800/50 transition-all\"\r\n                        onClick={(e) => {\r\n                          e.stopPropagation();\r\n                          // Clear any hover state and set editing for this node only\r\n                          setHoveredNode(null);\r\n                          setEditingCards({\r\n                            [node.id]: { patient: true, clinical: true }\r\n                          });\r\n                        }}\r\n                        style={{\r\n                          backgroundImage: cardTexts[node.id]?.clinical ? 'linear-gradient(to bottom right, rgba(88, 28, 135, 0.3), rgba(76, 29, 149, 0.15))' : 'none',\r\n                          boxShadow: cardTexts[node.id]?.clinical ? 'inset 0 1px 2px 0 rgba(126, 34, 206, 0.15)' : 'none'\r\n                        }}\r\n                      >\r\n                        {cardTexts[node.id]?.clinical || (\r\n                          <span className=\"text-purple-300 italic\">Click to add clinical impression...</span>\r\n                        )}\r\n                      </div>\r\n                    )}\r\n                    \r\n                    {/* Connection line to node - gradient line with animated pulse */}\r\n                    <div className=\"absolute\" style={{\r\n                        width: CARD_OFFSET - 20,\r\n                        height: 2,\r\n                        left: -CARD_OFFSET + 20,\r\n                        top: 50,\r\n                        zIndex: 0,\r\n                        overflow: 'hidden'\r\n                      }}\r\n                    >\r\n                      <div \r\n                        className=\"h-full w-full bg-gradient-to-r from-purple-300 via-indigo-400 to-purple-500\"\r\n                        style={{\r\n                          animation: hoveredNode?.id === node.id \r\n                            ? 'shimmerReverse 1.5s linear infinite' \r\n                            : 'none'\r\n                        }}\r\n                      ></div>\r\n                      <style jsx>{`\r\n                        @keyframes shimmerReverse {\r\n                          0% { transform: translateX(100%); }\r\n                          100% { transform: translateX(-100%); }\r\n                        }\r\n                      `}</style>\r\n                    </div>\r\n                  </motion.div>\r\n                </>\r\n              )}\r\n            </AnimatePresence>\r\n          </div>\r\n        ))}\r\n      \r\n        {/* Scroll Progress Indicator */}\r\n        <div className=\"absolute bottom-4 left-1/2 transform -translate-x-1/2 z-40\">\r\n          <motion.div \r\n            className=\"bg-slate-800 bg-opacity-90 rounded-full px-4 py-2 flex items-center gap-3 shadow-lg border border-slate-600\"\r\n            initial={{ opacity: 0, y: 20 }}\r\n            animate={{ opacity: 1, y: 0 }}\r\n            transition={{ delay: 2.5, duration: 0.5 }}\r\n          >\r\n            <span className=\"text-sm text-blue-300\">\r\n              {nodes.length} {nodes.length === 1 ? 'entry' : 'entries'}\r\n            </span>\r\n            <div className=\"w-px h-4 bg-slate-600\"></div>\r\n            <div className=\"flex items-center gap-2\">\r\n              <div className=\"w-16 h-1 bg-slate-600 rounded-full overflow-hidden\">\r\n                <div \r\n                  className=\"h-full bg-blue-400 rounded-full transition-all duration-300 ease-out\"\r\n                  style={{ width: `${scrollProgress}%` }}\r\n                ></div>\r\n              </div>\r\n              <span className=\"text-xs text-slate-400 min-w-[3rem] text-center\">\r\n                {scrollProgress}%\r\n              </span>\r\n            </div>\r\n            <div className=\"w-px h-4 bg-slate-600\"></div>\r\n            <span className=\"text-xs text-slate-400\">\r\n              Click nodes to center\r\n            </span>\r\n          </motion.div>\r\n        </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VerticalTimeline;\r\n","// Enhanced Topic Modal with tabbed interface and advanced animations\nimport React, { useState, useEffect, useMemo, useCallback, useRef } from 'react';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport { \n  X, \n  BookOpen, \n  Brain, \n  Target, \n  Award, \n  Clock, \n  Sparkles, \n  Link2,\n  Edit3,\n  Trash2,\n  Save,\n  Loader2,\n  Star,\n  Plus,\n  Check,\n  RotateCcw,\n  TrendingUp,\n  Lightbulb,\n  FileText,\n  Layers,\n  Stethoscope,\n  Pill,\n  Users,\n  Tag,\n  Calendar,\n  Activity,\n  ChevronDown,\n  ChevronRight\n} from 'lucide-react';\n\n// Animation variants for Framer Motion\nconst modalVariants = {\n  hidden: {\n    opacity: 0,\n    scale: 0.3,\n    y: 50,\n    rotate: -5,\n  },\n  visible: {\n    opacity: 1,\n    scale: 1,\n    y: 0,\n    rotate: 0,\n    transition: {\n      type: \"spring\",\n      damping: 25,\n      stiffness: 300,\n      duration: 0.6,\n    }\n  },\n  exit: {\n    opacity: 0,\n    scale: 0.7,\n    y: 30,\n    rotate: -3,\n    transition: {\n      type: \"easeInOut\",\n      duration: 0.4,\n    }\n  }\n};\n\nconst backdropVariants = {\n  hidden: { \n    opacity: 0,\n    backdropFilter: 'blur(0px)'\n  },\n  visible: { \n    opacity: 1,\n    backdropFilter: 'blur(8px)',\n    transition: {\n      duration: 0.4,\n      ease: \"easeOut\"\n    }\n  },\n  exit: { \n    opacity: 0,\n    backdropFilter: 'blur(0px)',\n    transition: {\n      duration: 0.3,\n      ease: \"easeIn\"\n    }\n  }\n};\n\nconst contentVariants = {\n  hidden: {\n    opacity: 0,\n    y: 20,\n    scale: 0.95,\n  },\n  visible: {\n    opacity: 1,\n    y: 0,\n    scale: 1,\n    transition: {\n      type: \"easeOut\",\n      duration: 0.3,\n      delay: 0.1,\n    }\n  },\n  exit: {\n    opacity: 0,\n    y: -10,\n    scale: 1.02,\n    transition: {\n      type: \"easeIn\",\n      duration: 0.2,\n    }\n  }\n};\n\n// Card animation variants for sections\nconst cardVariants = {\n  hidden: { opacity: 0, y: 20, scale: 0.95 },\n  visible: { \n    opacity: 1, \n    y: 0, \n    scale: 1,\n    transition: {\n      duration: 0.4,\n      ease: \"easeOut\"\n    }\n  },\n  edit: { \n    scale: 1.02,\n    boxShadow: \"0 8px 25px rgba(59, 130, 246, 0.15)\",\n    transition: {\n      duration: 0.3,\n      ease: \"easeOut\"\n    }\n  },\n  saved: {\n    scale: 1,\n    boxShadow: \"0 4px 15px rgba(34, 197, 94, 0.15)\",\n    transition: {\n      duration: 0.3,\n      ease: \"easeOut\"\n    }\n  }\n};\n\nconst TopicModal = ({ \n  isOpen, \n  data, \n  onClose,\n  onAnimationStart,\n  onAnimationEnd,\n  setMindMapData,\n  autoSaveMindMapData,\n  addToast,\n  syncNodeData,\n  forceNodeUpdate\n}) => {\n  const [isAnimating, setIsAnimating] = useState(false);\n  const [isVisible, setIsVisible] = useState(false);\n  const [isClosing, setIsClosing] = useState(false);\n  const [editData, setEditData] = useState({});\n  const [isLoading, setIsLoading] = useState(false);\n  const [hasInitialized, setHasInitialized] = useState(false);\n  const [activeTab, setActiveTab] = useState('overview');\n  const [isTabTransitioning, setIsTabTransitioning] = useState(false);\n  \n  // Individual section edit states\n  const [editingSections, setEditingSections] = useState({});\n  const [sectionData, setSectionData] = useState({});\n  \n  // Tab-specific scroll positions\n  const [scrollPositions, setScrollPositions] = useState({});\n  const contentRefs = useRef({});\n  \n  // Form states for different tabs\n  const [expandedCriteria, setExpandedCriteria] = useState(false);\n  const [newTags, setNewTags] = useState({}); // For managing new tag inputs\n  const [newResource, setNewResource] = useState('');\n  const [showResourceForm, setShowResourceForm] = useState(false);\n\n  // Category color mapping\n  const categoryColors = {\n    'Mood Disorders': { primary: '#ef4444', secondary: '#fca5a5' }, // red\n    'Anxiety Disorders': { primary: '#f59e0b', secondary: '#fbbf24' }, // amber\n    'Psychotic Disorders': { primary: '#8b5cf6', secondary: '#c4b5fd' }, // violet\n    'Personality Disorders': { primary: '#10b981', secondary: '#6ee7b7' }, // emerald\n    'Neurodevelopmental Disorders': { primary: '#3b82f6', secondary: '#93c5fd' }, // blue\n    'Trauma Related Disorders': { primary: '#dc2626', secondary: '#f87171' }, // red-600\n    'Substance Use Disorders': { primary: '#059669', secondary: '#34d399' }, // emerald-600\n    'Eating Disorders': { primary: '#d946ef', secondary: '#e879f9' }, // fuchsia\n    'Sleep Disorders': { primary: '#6366f1', secondary: '#a5b4fc' }, // indigo\n    'Cognitive Disorders': { primary: '#ea580c', secondary: '#fb923c' }, // orange-600\n    'Other': { primary: '#6b7280', secondary: '#9ca3af' } // gray\n  };\n\n  // Tab configuration\n  const tabs = [\n    { id: 'overview', label: 'Overview', icon: BookOpen },\n    { id: 'concept', label: 'Concept', icon: Brain },\n    { id: 'clinical', label: 'Clinical Associations', icon: Stethoscope },\n    { id: 'treatment', label: 'Treatment', icon: Pill },\n    { id: 'connections', label: 'Connections', icon: Link2 }\n  ];\n\n  useEffect(() => {\n    if (isOpen && data && !hasInitialized) {\n      setIsVisible(true);\n      const initialData = { \n        ...data,\n        category: data.category || 'Other',\n        definition: data.definition || '',\n        diagnostic_criteria: data.diagnostic_criteria || [],\n        comorbidities: data.comorbidities || [],\n        differential_diagnoses: data.differential_diagnoses || [],\n        medications: data.medications || [],\n        psychotherapy_modalities: data.psychotherapy_modalities || [],\n        flashcard_count: data.flashcard_count || 0,\n        completed_flashcards: data.completed_flashcards || 0,\n        last_updated: data.last_updated || new Date().toISOString()\n      };\n      setEditData(initialData);\n      setHasInitialized(true);\n      setIsAnimating(true);\n      if (onAnimationStart) onAnimationStart();\n      \n      setTimeout(() => {\n        setIsAnimating(false);\n        if (onAnimationEnd) onAnimationEnd();\n      }, 600);\n    } else if (!isOpen && hasInitialized) {\n      setHasInitialized(false);\n      setScrollPositions({});\n      setEditingSections({});\n      setSectionData({});\n    }\n  }, [isOpen, data, hasInitialized, onAnimationStart, onAnimationEnd]);\n\n  // Enhanced effect for instant feedback - updates editData immediately when data changes\n  useEffect(() => {\n    if (isOpen && data && hasInitialized) {\n      // Update editData with latest data for instant feedback\n      setEditData(prevEditData => {\n        const updatedData = { \n          ...prevEditData, // Keep any local edits\n          ...data, // Override with latest data from parent\n          category: data.category || prevEditData.category || 'Other',\n          definition: data.definition || prevEditData.definition || '',\n          diagnostic_criteria: data.diagnostic_criteria || prevEditData.diagnostic_criteria || [],\n          comorbidities: data.comorbidities || prevEditData.comorbidities || [],\n          differential_diagnoses: data.differential_diagnoses || prevEditData.differential_diagnoses || [],\n          medications: data.medications || prevEditData.medications || [],\n          psychotherapy_modalities: data.psychotherapy_modalities || prevEditData.psychotherapy_modalities || [],\n          flashcard_count: data.flashcard_count || prevEditData.flashcard_count || 0,\n          completed_flashcards: data.completed_flashcards || prevEditData.completed_flashcards || 0,\n          last_updated: data.last_updated || prevEditData.last_updated || new Date().toISOString()\n        };\n        return updatedData;\n      });\n    }\n  }, [data, isOpen, hasInitialized]);\n\n  const progressPercentage = useMemo(() => {\n    const total = editData.flashcard_count || 0;\n    const completed = editData.completed_flashcards || 0;\n    return total > 0 ? Math.round((completed / total) * 100) : 0;\n  }, [editData.flashcard_count, editData.completed_flashcards]);\n\n  const handleClose = useCallback(() => {\n    if (isAnimating || isClosing) return;\n    \n    setIsAnimating(true);\n    setIsClosing(true);\n    if (onAnimationStart) onAnimationStart();\n    \n    // Set visibility to false to trigger exit animation\n    setIsVisible(false);\n  }, [onAnimationStart, isAnimating, isClosing]);\n\n  const handleSave = useCallback(async () => {\n    if (isLoading) return;\n    \n    setIsLoading(true);\n    try {\n      const updatedData = {\n        ...editData,\n        last_updated: new Date().toISOString()\n      };\n      \n      setMindMapData(prevData => {\n        const updatedTopics = prevData.topics.map(topic =>\n          String(topic.id) === String(data?.id) ? { ...topic, ...updatedData } : topic\n        );\n        const newData = { ...prevData, topics: updatedTopics };\n        autoSaveMindMapData(newData);\n        return newData;\n      });\n      \n      setEditData(updatedData);\n      addToast('Topic updated successfully', 'success');\n    } catch (error) {\n      console.error('Error saving topic:', error);\n      addToast('Failed to save topic', 'error');\n    } finally {\n      setIsLoading(false);\n    }\n  }, [data?.id, editData, setMindMapData, autoSaveMindMapData, addToast, isLoading]);\n\n  // Save current tab's scroll position before switching\n  const saveScrollPosition = useCallback((tabId) => {\n    const contentRef = contentRefs.current[tabId];\n    if (contentRef) {\n      setScrollPositions(prev => ({\n        ...prev,\n        [tabId]: contentRef.scrollTop\n      }));\n    }\n  }, []);\n\n  // Restore scroll position when switching to a tab\n  const restoreScrollPosition = useCallback((tabId) => {\n    setTimeout(() => {\n      const contentRef = contentRefs.current[tabId];\n      const savedPosition = scrollPositions[tabId];\n      if (contentRef && savedPosition) {\n        contentRef.scrollTop = savedPosition;\n      }\n    }, 100); // Small delay to ensure content is rendered\n  }, [scrollPositions]);\n\n  // Handle tab switching with scroll position preservation\n  const handleTabSwitch = useCallback((newTabId) => {\n    if (newTabId === activeTab || isTabTransitioning) return;\n    \n    // Save current tab's scroll position\n    saveScrollPosition(activeTab);\n    \n    setIsTabTransitioning(true);\n    setActiveTab(newTabId);\n    \n    setTimeout(() => {\n      setIsTabTransitioning(false);\n      // Restore new tab's scroll position\n      restoreScrollPosition(newTabId);\n    }, 300);\n  }, [activeTab, isTabTransitioning, saveScrollPosition, restoreScrollPosition]);\n\n// Enhanced category change handler - fixes node color updates and category saving\n  const handleCategoryChange = useCallback(async (newCategory) => {\n    console.log('Category changing to:', newCategory);\n    \n    // Get the new color for immediate update\n    const newColor = categoryColors[newCategory]?.primary || categoryColors.Other.primary;\n    console.log('New color for category:', newColor);\n    \n    // Update local edit data for immediate UI feedback\n    const updatedEditData = { ...editData, category: newCategory, color: newColor, last_updated: new Date().toISOString() };\n    setEditData(updatedEditData);\n    \n    // Update node color in mind map immediately and save\n    setMindMapData(prevData => {\n      const updatedTopics = prevData.topics.map(topic =>\n        String(topic.id) === String(data?.id) \n          ? { ...topic, category: newCategory, color: newColor, last_updated: new Date().toISOString() }\n          : topic\n      );\n      const newData = { ...prevData, topics: updatedTopics };\n      \n      // Auto-save the changes to backend immediately\n      console.log('Saving category change to backend:', newCategory, newColor);\n      autoSaveMindMapData(newData);\n      \n      // Force immediate node update after state change\n      setTimeout(() => {\n        console.log('Triggering force node update');\n        if (forceNodeUpdate) {\n          forceNodeUpdate();\n        }\n        if (syncNodeData) {\n          syncNodeData();\n        }\n      }, 200);\n      \n      return newData;\n    });\n    \n    addToast(`Category updated to ${newCategory}`, 'success');\n  }, [data?.id, editData, setMindMapData, categoryColors, autoSaveMindMapData, addToast, syncNodeData, forceNodeUpdate]);\n\n  // Get connected nodes for Connections tab\n  const connectedNodes = useMemo(() => {\n    if (!data?.id) return { cases: [], literature: [] };\n    \n    // This would typically come from your mind map data\n    // For now, return empty arrays - you can implement based on your data structure\n    return {\n      cases: [],\n      literature: []\n    };\n  }, [data?.id]);\n\n  const handleDelete = useCallback(async () => {\n    if (isLoading) return;\n    \n    if (!window.confirm('Are you sure you want to delete this topic?')) return;\n    \n    setIsLoading(true);\n    try {\n      setMindMapData(prevData => {\n        const updatedTopics = prevData.topics.filter(topic => String(topic.id) !== String(data?.id));\n        const newData = { ...prevData, topics: updatedTopics };\n        autoSaveMindMapData(newData);\n        return newData;\n      });\n      \n      addToast('Topic deleted successfully', 'success');\n      handleClose();\n    } catch (error) {\n      console.error('Error deleting topic:', error);\n      addToast('Failed to delete topic', 'error');\n    } finally {\n      setIsLoading(false);\n    }\n  }, [data?.id, setMindMapData, autoSaveMindMapData, addToast, handleClose, isLoading]);\n\n  // Individual section edit functions\n  const startEditingSection = useCallback((sectionId) => {\n    setEditingSections(prev => ({ ...prev, [sectionId]: true }));\n    // Initialize section data with current values\n    setSectionData(prev => ({\n      ...prev,\n      [sectionId]: { ...editData }\n    }));\n  }, [editData]);\n\n  const cancelEditingSection = useCallback((sectionId) => {\n    setEditingSections(prev => ({ ...prev, [sectionId]: false }));\n    setSectionData(prev => {\n      const newData = { ...prev };\n      delete newData[sectionId];\n      return newData;\n    });\n  }, []);\n\n  const saveSectionEdit = useCallback(async (sectionId) => {\n    if (isLoading) return;\n    \n    const sectionChanges = sectionData[sectionId];\n    if (!sectionChanges) return;\n    \n    setIsLoading(true);\n    try {\n      const updatedData = {\n        ...editData,\n        ...sectionChanges,\n        last_updated: new Date().toISOString()\n      };\n      \n      // Update editData immediately for instant feedback\n      setEditData(updatedData);\n      \n      setMindMapData(prevData => {\n        const updatedTopics = prevData.topics.map(topic =>\n          String(topic.id) === String(data?.id) ? { ...topic, ...updatedData } : topic\n        );\n        const newData = { ...prevData, topics: updatedTopics };\n        autoSaveMindMapData(newData);\n        return newData;\n      });\n      \n      setEditingSections(prev => ({ ...prev, [sectionId]: false }));\n      setSectionData(prev => {\n        const newData = { ...prev };\n        delete newData[sectionId];\n        return newData;\n      });\n      \n      addToast('Section updated successfully', 'success');\n    } catch (error) {\n      console.error('Error saving section:', error);\n      addToast('Failed to save section', 'error');\n    } finally {\n      setIsLoading(false);\n    }\n  }, [sectionData, editData, data?.id, setMindMapData, autoSaveMindMapData, addToast, isLoading]);\n\n  const updateSectionField = useCallback((sectionId, field, value) => {\n    setSectionData(prev => ({\n      ...prev,\n      [sectionId]: {\n        ...prev[sectionId],\n        [field]: value\n      }\n    }));\n  }, []);\n\n  // Tag management functions for list-based sections\n  const addTagToSection = useCallback((sectionId, field, tag) => {\n    if (!tag.trim()) return;\n    \n    const currentTags = sectionData[sectionId]?.[field] || editData[field] || [];\n    if (!currentTags.includes(tag.trim())) {\n      updateSectionField(sectionId, field, [...currentTags, tag.trim()]);\n    }\n  }, [sectionData, editData, updateSectionField]);\n\n  const removeTagFromSection = useCallback((sectionId, field, tagToRemove) => {\n    const currentTags = sectionData[sectionId]?.[field] || editData[field] || [];\n    updateSectionField(sectionId, field, currentTags.filter(tag => tag !== tagToRemove));\n  }, [sectionData, editData, updateSectionField]);\n\n  // Helper functions for new tag input management\n  const setNewTag = useCallback((sectionId, value) => {\n    setNewTags(prev => ({ ...prev, [sectionId]: value }));\n  }, []);\n\n  const getNewTag = useCallback((sectionId) => {\n    return newTags[sectionId] || '';\n  }, [newTags]);\n\n  const clearNewTag = useCallback((sectionId) => {\n    setNewTags(prev => {\n      const newTags = { ...prev };\n      delete newTags[sectionId];\n      return newTags;\n    });\n  }, []);\n\n  // Enhanced direct list management functions\n  const addItemDirectly = useCallback((field, item) => {\n    if (!item.trim()) return;\n    \n    const currentItems = editData[field] || [];\n    if (!currentItems.includes(item.trim())) {\n      const updatedItems = [...currentItems, item.trim()];\n      const updatedData = { \n        ...editData, \n        [field]: updatedItems, \n        last_updated: new Date().toISOString() \n      };\n      \n      // Update local state immediately\n      setEditData(updatedData);\n      \n      // Update mind map data and save\n      setMindMapData(prevData => {\n        const updatedTopics = prevData.topics.map(topic =>\n          String(topic.id) === String(data?.id) ? { ...topic, ...updatedData } : topic\n        );\n        const newData = { ...prevData, topics: updatedTopics };\n        autoSaveMindMapData(newData);\n        return newData;\n      });\n      \n      addToast(`${field} updated successfully`, 'success');\n    }\n  }, [editData, data?.id, setMindMapData, autoSaveMindMapData, addToast]);\n\n  const removeItemDirectly = useCallback((field, itemToRemove) => {\n    const currentItems = editData[field] || [];\n    const updatedItems = currentItems.filter(item => item !== itemToRemove);\n    const updatedData = { \n      ...editData, \n      [field]: updatedItems, \n      last_updated: new Date().toISOString() \n    };\n    \n    // Update local state immediately\n    setEditData(updatedData);\n    \n    // Update mind map data and save\n    setMindMapData(prevData => {\n      const updatedTopics = prevData.topics.map(topic =>\n        String(topic.id) === String(data?.id) ? { ...topic, ...updatedData } : topic\n      );\n      const newData = { ...prevData, topics: updatedTopics };\n      autoSaveMindMapData(newData);\n      return newData;\n    });\n    \n    addToast(`${field} updated successfully`, 'success');\n  }, [editData, data?.id, setMindMapData, autoSaveMindMapData, addToast]);\n\n  if (!isOpen) return null;\n\n  return (\n    <AnimatePresence mode=\"wait\" onExitComplete={() => {\n      setIsAnimating(false);\n      setIsClosing(false);\n      setHasInitialized(false);\n      onClose();\n      if (onAnimationEnd) onAnimationEnd();\n    }}>\n      {isVisible && (\n        <motion.div\n          key={`topic-modal-${data?.id || 'default'}`}\n          initial=\"hidden\"\n          animate=\"visible\"\n          exit=\"exit\"\n          variants={backdropVariants}\n          className=\"fixed inset-0 bg-black flex items-center justify-center z-50\"\n          style={{ \n            willChange: 'backdrop-filter, opacity',\n            backfaceVisibility: 'hidden',\n            transform: 'translate3d(0, 0, 0)'\n          }}\n          onClick={(e) => e.target === e.currentTarget && handleClose()}\n        >\n          <motion.div\n            initial=\"hidden\"\n            animate=\"visible\"\n            exit=\"exit\"\n            variants={modalVariants}\n            className=\"bg-white rounded-2xl shadow-2xl max-w-4xl w-full mx-4 max-h-[85vh] overflow-hidden\"\n            style={{ \n              willChange: 'transform, opacity, scale',\n              backfaceVisibility: 'hidden'\n            }}\n            onClick={(e) => e.stopPropagation()}\n            onAnimationStart={() => {\n              setIsAnimating(true);\n              if (onAnimationStart) onAnimationStart();\n            }}\n            onAnimationComplete={() => {\n              setIsAnimating(false);\n              if (onAnimationEnd) onAnimationEnd();\n            }}\n          >\n            <motion.div \n              initial=\"hidden\"\n              animate=\"visible\"\n              exit=\"exit\"\n              variants={contentVariants}\n              className=\"bg-gradient-to-br from-slate-900 to-slate-800 text-white px-6 py-4 flex items-center justify-between\"\n            >\n              <div className=\"flex items-center gap-3\">\n                <BookOpen size={24} />\n                <h2 className=\"text-xl font-semibold\">Topic Details</h2>\n              </div>\n              <button\n                onClick={handleClose}\n                className=\"text-slate-400 hover:text-white transition-colors\"\n              >\n                <X size={24} />\n              </button>\n            </motion.div>\n\n            {/* Tab Navigation */}\n            <div className=\"bg-gradient-to-r from-slate-900 via-slate-800 to-slate-900 border-b border-slate-600\">\n              <nav className=\"flex flex-wrap gap-2 px-6 py-4\">\n                {tabs.map(({ id, label, icon: Icon }) => (\n                  <motion.button\n                    key={id}\n                    onClick={() => handleTabSwitch(id)}\n                    className={`relative flex items-center gap-2 px-4 py-3 rounded-xl font-medium text-sm transition-all duration-300 ${\n                      activeTab === id\n                        ? 'bg-gradient-to-r from-purple-500 to-indigo-600 text-white shadow-lg shadow-purple-500/25'\n                        : 'text-slate-300 hover:text-white hover:bg-slate-700/50 hover:shadow-md'\n                    }`}\n                    whileHover={{ scale: activeTab === id ? 1 : 1.02 }}\n                    whileTap={{ scale: 0.98 }}\n                    disabled={isTabTransitioning}\n                  >\n                    <Icon size={16} className={activeTab === id ? 'drop-shadow-sm' : ''} />\n                    {label}\n                    \n                    {activeTab === id && (\n                      <motion.div\n                        layoutId=\"topicActiveTab\"\n                        className=\"absolute inset-0 bg-gradient-to-r from-purple-400/20 to-indigo-500/20 rounded-xl blur-sm\"\n                        initial={false}\n                        transition={{ duration: 0.3, ease: \"easeOut\" }}\n                      />\n                    )}\n                  </motion.button>\n                ))}\n              </nav>\n            </div>\n\n            {/* Dark Content Area */}\n            <motion.div\n              className=\"flex-1 bg-gradient-to-br from-slate-900 to-slate-800 overflow-hidden\"\n              animate={{ opacity: isTabTransitioning ? 0.7 : 1 }}\n              transition={{ duration: 0.2 }}\n            >\n              <AnimatePresence mode=\"wait\">\n                {/* Overview Tab */}\n                {activeTab === 'overview' && (\n                  <motion.div\n                    key=\"overview\"\n                    ref={el => contentRefs.current.overview = el}\n                    initial={{ opacity: 0, x: -20 }}\n                    animate={{ opacity: 1, x: 0 }}\n                    exit={{ opacity: 0, x: 20 }}\n                    transition={{ duration: 0.3 }}\n                    className=\"h-full overflow-y-auto p-6 space-y-6\"\n                  >\n                    {/* Title Section */}\n                    <motion.div \n                      variants={cardVariants}\n                      animate={editingSections.title ? \"edit\" : \"visible\"}\n                      className=\"bg-slate-800/50 backdrop-blur-sm rounded-xl p-6 border border-slate-700\"\n                    >\n                      <div className=\"flex items-center justify-between mb-4\">\n                        <h3 className=\"text-lg font-semibold text-white\">Title</h3>\n                        {!editingSections.title && (\n                          <motion.button\n                            whileHover={{ scale: 1.1 }}\n                            whileTap={{ scale: 0.9 }}\n                            onClick={() => startEditingSection('title')}\n                            className=\"text-slate-400 hover:text-white transition-colors p-1 rounded\"\n                            title=\"Edit title\"\n                          >\n                            <Edit3 size={16} />\n                          </motion.button>\n                        )}\n                      </div>\n                      \n                      {editingSections.title ? (\n                        <motion.div \n                          className=\"space-y-4\"\n                          initial={{ opacity: 0, y: 10 }}\n                          animate={{ opacity: 1, y: 0 }}\n                          transition={{ duration: 0.3 }}\n                        >\n                          <input\n                            type=\"text\"\n                            value={sectionData.title?.title || editData.title || ''}\n                            onChange={(e) => updateSectionField('title', 'title', e.target.value)}\n                            className=\"w-full text-xl font-bold bg-slate-700 border border-slate-600 rounded-lg px-4 py-3 text-white placeholder-slate-400 focus:ring-2 focus:ring-purple-500 focus:border-purple-500\"\n                            placeholder=\"Topic title...\"\n                          />\n                          <div className=\"flex justify-end gap-2\">\n                            <motion.button\n                              whileHover={{ scale: 1.02 }}\n                              whileTap={{ scale: 0.98 }}\n                              onClick={() => cancelEditingSection('title')}\n                              className=\"px-3 py-2 text-slate-300 hover:text-white border border-slate-600 rounded-lg hover:bg-slate-700 transition-colors text-sm\"\n                            >\n                              Cancel\n                            </motion.button>\n                            <motion.button\n                              whileHover={{ scale: 1.02 }}\n                              whileTap={{ scale: 0.98 }}\n                              onClick={() => saveSectionEdit('title')}\n                              disabled={isLoading}\n                              className=\"px-3 py-2 bg-purple-600 text-white rounded-lg hover:bg-purple-700 transition-colors text-sm flex items-center gap-2\"\n                            >\n                              {isLoading ? <Loader2 size={14} className=\"animate-spin\" /> : <Save size={14} />}\n                              Save\n                            </motion.button>\n                          </div>\n                        </motion.div>\n                      ) : (\n                        <motion.h1 \n                          className=\"text-2xl font-bold text-white\"\n                          whileHover={{ scale: 1.01 }}\n                          transition={{ duration: 0.2 }}\n                        >\n                          {editData.title || 'Untitled Topic'}\n                        </motion.h1>\n                      )}\n                    </motion.div>\n\n                    {/* Category and Progress Row */}\n                    <div className=\"grid md:grid-cols-2 gap-6\">\n                      {/* Category Selection - Direct Access (No Edit Button) */}\n                      <motion.div \n                        variants={cardVariants}\n                        initial=\"hidden\"\n                        animate=\"visible\"\n                        className=\"bg-slate-800/50 backdrop-blur-sm rounded-xl p-6 border border-slate-700\"\n                      >\n                        <label className=\"block text-sm font-medium text-slate-300 mb-3\">Category</label>\n                        <motion.select\n                          value={editData.category || 'Other'}\n                          onChange={(e) => handleCategoryChange(e.target.value)}\n                          className=\"w-full bg-slate-700 border border-slate-600 rounded-lg px-4 py-3 text-white focus:ring-2 focus:ring-purple-500 focus:border-purple-500 hover:bg-slate-650 transition-colors cursor-pointer\"\n                          whileFocus={{ scale: 1.02 }}\n                        >\n                          {Object.keys(categoryColors).map(category => (\n                            <option key={category} value={category}>{category}</option>\n                          ))}\n                        </motion.select>\n                        <p className=\"text-xs text-slate-400 mt-2\">\n                          Changes are saved automatically and will update the node color\n                        </p>\n                      </motion.div>\n\n                      {/* Flashcard Progress */}\n                      <motion.div \n                        variants={cardVariants}\n                        initial=\"hidden\"\n                        animate=\"visible\"\n                        className=\"bg-slate-800/50 backdrop-blur-sm rounded-xl p-6 border border-slate-700\"\n                      >\n                        <div className=\"flex items-center justify-between mb-3\">\n                          <span className=\"text-sm font-medium text-slate-300\">Flashcard Progress</span>\n                          <span className=\"text-sm text-slate-400\">\n                            {editData.completed_flashcards || 0} / {editData.flashcard_count || 0}\n                          </span>\n                        </div>\n                        <div className=\"w-full bg-slate-700 rounded-full h-3 mb-2\">\n                          <motion.div\n                            className=\"h-3 rounded-full bg-gradient-to-r from-purple-500 to-indigo-600\"\n                            initial={{ width: 0 }}\n                            animate={{ width: `${progressPercentage}%` }}\n                            transition={{ duration: 1, ease: \"easeOut\" }}\n                          />\n                        </div>\n                        <div className=\"text-right\">\n                          <span className=\"text-lg font-bold text-white\">{progressPercentage}%</span>\n                          <span className=\"text-sm text-slate-400 ml-1\">complete</span>\n                        </div>\n                      </motion.div>\n                    </div>\n\n                    {/* Last Updated */}\n                    <div className=\"text-xs text-slate-500 text-right\">\n                      Last updated: {editData.last_updated ? new Date(editData.last_updated).toLocaleString() : 'Never'}\n                    </div>\n                  </motion.div>\n                )}\n\n                {/* Concept Tab */}\n                {activeTab === 'concept' && (\n                  <motion.div\n                    key=\"concept\"\n                    ref={el => contentRefs.current.concept = el}\n                    initial={{ opacity: 0, x: -20 }}\n                    animate={{ opacity: 1, x: 0 }}\n                    exit={{ opacity: 0, x: 20 }}\n                    transition={{ duration: 0.3 }}\n                    className=\"h-full overflow-y-auto p-6 space-y-6\"\n                  >\n                    {/* Definition Section */}\n                    <motion.div \n                      variants={cardVariants}\n                      animate={editingSections.definition ? \"edit\" : \"visible\"}\n                      className=\"bg-slate-800/50 backdrop-blur-sm rounded-xl p-6 border border-slate-700\"\n                    >\n                      <div className=\"flex items-center justify-between mb-4\">\n                        <h3 className=\"text-lg font-semibold text-white flex items-center gap-2\">\n                          <Brain size={20} className=\"text-purple-400\" />\n                          Definition\n                        </h3>\n                        {!editingSections.definition && (\n                          <motion.button\n                            whileHover={{ scale: 1.1 }}\n                            whileTap={{ scale: 0.9 }}\n                            onClick={() => startEditingSection('definition')}\n                            className=\"text-slate-400 hover:text-white transition-colors p-1 rounded\"\n                            title=\"Edit definition\"\n                          >\n                            <Edit3 size={16} />\n                          </motion.button>\n                        )}\n                      </div>\n                      \n                      {editingSections.definition ? (\n                        <motion.div \n                          className=\"space-y-4\"\n                          initial={{ opacity: 0, y: 10 }}\n                          animate={{ opacity: 1, y: 0 }}\n                          transition={{ duration: 0.3 }}\n                        >\n                          <textarea\n                            value={sectionData.definition?.definition || editData.definition || ''}\n                            onChange={(e) => updateSectionField('definition', 'definition', e.target.value)}\n                            rows={4}\n                            className=\"w-full bg-slate-700 border border-slate-600 rounded-lg px-4 py-3 text-white placeholder-slate-400 focus:ring-2 focus:ring-purple-500 focus:border-purple-500 resize-none\"\n                            placeholder=\"Enter the definition of this topic...\"\n                          />\n                          <div className=\"flex justify-end gap-2\">\n                            <motion.button\n                              whileHover={{ scale: 1.02 }}\n                              whileTap={{ scale: 0.98 }}\n                              onClick={() => cancelEditingSection('definition')}\n                              className=\"px-3 py-2 text-slate-300 hover:text-white border border-slate-600 rounded-lg hover:bg-slate-700 transition-colors text-sm\"\n                            >\n                              Cancel\n                            </motion.button>\n                            <motion.button\n                              whileHover={{ scale: 1.02 }}\n                              whileTap={{ scale: 0.98 }}\n                              onClick={() => saveSectionEdit('definition')}\n                              disabled={isLoading}\n                              className=\"px-3 py-2 bg-purple-600 text-white rounded-lg hover:bg-purple-700 transition-colors text-sm flex items-center gap-2\"\n                            >\n                              {isLoading ? <Loader2 size={14} className=\"animate-spin\" /> : <Save size={14} />}\n                              Save\n                            </motion.button>\n                          </div>\n                        </motion.div>\n                      ) : (\n                        <motion.div \n                          className=\"text-slate-300 leading-relaxed\"\n                          whileHover={{ scale: 1.01 }}\n                          transition={{ duration: 0.2 }}\n                        >\n                          {editData.definition || <span className=\"text-slate-500 italic\">No definition provided</span>}\n                        </motion.div>\n                      )}\n                    </motion.div>\n\n                    {/* Diagnostic Criteria Section */}\n                    <motion.div \n                      variants={cardVariants}\n                      animate={editingSections.diagnostic_criteria ? \"edit\" : \"visible\"}\n                      className=\"bg-slate-800/50 backdrop-blur-sm rounded-xl p-6 border border-slate-700\"\n                    >\n                      <div className=\"flex items-center justify-between mb-4\">\n                        <h3 className=\"text-lg font-semibold text-white flex items-center gap-2\">\n                          <FileText size={20} className=\"text-indigo-400\" />\n                          Diagnostic Criteria\n                        </h3>\n                        <div className=\"flex items-center gap-2\">\n                          {!editingSections.diagnostic_criteria && (\n                            <motion.button\n                              whileHover={{ scale: 1.1 }}\n                              whileTap={{ scale: 0.9 }}\n                              onClick={() => startEditingSection('diagnostic_criteria')}\n                              className=\"text-slate-400 hover:text-white transition-colors p-1 rounded\"\n                              title=\"Edit diagnostic criteria\"\n                            >\n                              <Edit3 size={16} />\n                            </motion.button>\n                          )}\n                          <button\n                            onClick={() => setExpandedCriteria(!expandedCriteria)}\n                            className=\"text-slate-400 hover:text-white transition-colors\"\n                          >\n                            {expandedCriteria ? <ChevronDown size={20} /> : <ChevronRight size={20} />}\n                          </button>\n                        </div>\n                      </div>\n                      \n                      <AnimatePresence>\n                        {expandedCriteria && (\n                          <motion.div\n                            initial={{ height: 0, opacity: 0 }}\n                            animate={{ height: 'auto', opacity: 1 }}\n                            exit={{ height: 0, opacity: 0 }}\n                            transition={{ duration: 0.3 }}\n                            className=\"overflow-hidden\"\n                          >\n                            {editingSections.diagnostic_criteria ? (\n                              <div className=\"space-y-4\">\n                                <textarea\n                                  value={Array.isArray(sectionData.diagnostic_criteria?.diagnostic_criteria) \n                                    ? sectionData.diagnostic_criteria.diagnostic_criteria.join('\\n') \n                                    : Array.isArray(editData.diagnostic_criteria) \n                                      ? editData.diagnostic_criteria.join('\\n') \n                                      : editData.diagnostic_criteria || ''}\n                                  onChange={(e) => updateSectionField('diagnostic_criteria', 'diagnostic_criteria', e.target.value.split('\\n').filter(item => item.trim()))}\n                                  rows={6}\n                                  className=\"w-full bg-slate-700 border border-slate-600 rounded-lg px-4 py-3 text-white placeholder-slate-400 focus:ring-2 focus:ring-purple-500 focus:border-purple-500 resize-none\"\n                                  placeholder=\"Enter diagnostic criteria (one per line)...\"\n                                />\n                                <div className=\"flex justify-end gap-2\">\n                                  <button\n                                    onClick={() => cancelEditingSection('diagnostic_criteria')}\n                                    className=\"px-3 py-2 text-slate-300 hover:text-white border border-slate-600 rounded-lg hover:bg-slate-700 transition-colors text-sm\"\n                                  >\n                                    Cancel\n                                  </button>\n                                  <motion.button\n                                    onClick={() => saveSectionEdit('diagnostic_criteria')}\n                                    disabled={isLoading}\n                                    className=\"px-3 py-2 bg-purple-600 text-white rounded-lg hover:bg-purple-700 transition-colors text-sm flex items-center gap-2\"\n                                  >\n                                    {isLoading ? <Loader2 size={14} className=\"animate-spin\" /> : <Save size={14} />}\n                                    Save\n                                  </motion.button>\n                                </div>\n                              </div>\n                            ) : (\n                              <div className=\"space-y-2\">\n                                {(editData.diagnostic_criteria || []).length > 0 ? (\n                                  editData.diagnostic_criteria.map((criteria, index) => (\n                                    <div key={index} className=\"flex items-start gap-3\">\n                                      <span className=\"text-purple-400 font-medium\">{index + 1}.</span>\n                                      <span className=\"text-slate-300\">{criteria}</span>\n                                    </div>\n                                  ))\n                                ) : (\n                                  <span className=\"text-slate-500 italic\">No diagnostic criteria provided</span>\n                                )}\n                              </div>\n                            )}\n                          </motion.div>\n                        )}\n                      </AnimatePresence>\n                    </motion.div>\n                  </motion.div>\n                )}\n\n                {/* Clinical Associations Tab */}\n                {activeTab === 'clinical' && (\n                  <motion.div\n                    key=\"clinical\"\n                    ref={el => contentRefs.current.clinical = el}\n                    initial={{ opacity: 0, x: -20 }}\n                    animate={{ opacity: 1, x: 0 }}\n                    exit={{ opacity: 0, x: 20 }}\n                    transition={{ duration: 0.3 }}\n                    className=\"h-full overflow-y-auto p-6 space-y-6\"\n                  >\n                    {/* Comorbidities Section */}\n                    <motion.div \n                      variants={cardVariants}\n                      initial=\"hidden\"\n                      animate=\"visible\"\n                      className=\"bg-slate-800/50 backdrop-blur-sm rounded-xl p-6 border border-slate-700\"\n                    >\n                      <h3 className=\"text-lg font-semibold text-white mb-4 flex items-center gap-2\">\n                        <Users size={20} className=\"text-amber-400\" />\n                        Comorbidities\n                      </h3>\n                      \n                      {/* Current comorbidities list */}\n                      <div className=\"space-y-2 mb-4\">\n                        <AnimatePresence>\n                          {(editData.comorbidities || []).map((comorbidity, index) => (\n                            <motion.div\n                              key={index}\n                              initial={{ opacity: 0, scale: 0.8 }}\n                              animate={{ opacity: 1, scale: 1 }}\n                              exit={{ opacity: 0, scale: 0.8 }}\n                              className=\"flex items-center justify-between p-3 bg-amber-600/10 rounded-lg border border-amber-600/20 group hover:bg-amber-600/15 transition-colors\"\n                            >\n                              <span className=\"text-amber-300\">{comorbidity}</span>\n                              <motion.button\n                                whileHover={{ scale: 1.1 }}\n                                whileTap={{ scale: 0.9 }}\n                                onClick={() => removeItemDirectly('comorbidities', comorbidity)}\n                                className=\"text-amber-400 hover:text-amber-200 opacity-0 group-hover:opacity-100 transition-opacity p-1 rounded\"\n                                title=\"Remove comorbidity\"\n                              >\n                                <X size={16} />\n                              </motion.button>\n                            </motion.div>\n                          ))}\n                        </AnimatePresence>\n                      </div>\n                      \n                      {/* Add new comorbidity */}\n                      <div className=\"flex gap-2\">\n                        <input\n                          type=\"text\"\n                          value={getNewTag('comorbidities')}\n                          onChange={(e) => setNewTag('comorbidities', e.target.value)}\n                          placeholder=\"Add comorbidity...\"\n                          className=\"flex-1 bg-slate-700 border border-slate-600 rounded-lg px-3 py-2 text-white placeholder-slate-400 focus:ring-2 focus:ring-amber-500 focus:border-amber-500 transition-colors\"\n                          onKeyPress={(e) => {\n                            if (e.key === 'Enter' && getNewTag('comorbidities').trim()) {\n                              addItemDirectly('comorbidities', getNewTag('comorbidities'));\n                              clearNewTag('comorbidities');\n                            }\n                          }}\n                        />\n                        <motion.button\n                          whileHover={{ scale: 1.02 }}\n                          whileTap={{ scale: 0.98 }}\n                          onClick={() => {\n                            if (getNewTag('comorbidities').trim()) {\n                              addItemDirectly('comorbidities', getNewTag('comorbidities'));\n                              clearNewTag('comorbidities');\n                            }\n                          }}\n                          className=\"px-4 py-2 bg-amber-600 text-white rounded-lg hover:bg-amber-700 transition-colors flex items-center gap-2\"\n                        >\n                          <Plus size={16} />\n                          Add\n                        </motion.button>\n                      </div>\n                      \n                      {(editData.comorbidities || []).length === 0 && (\n                        <p className=\"text-slate-500 italic text-center py-4\">No comorbidities added yet</p>\n                      )}\n                    </motion.div>\n\n                    {/* Differential Diagnoses Section */}\n                    <motion.div \n                      variants={cardVariants}\n                      initial=\"hidden\"\n                      animate=\"visible\"\n                      className=\"bg-slate-800/50 backdrop-blur-sm rounded-xl p-6 border border-slate-700\"\n                    >\n                      <h3 className=\"text-lg font-semibold text-white mb-4 flex items-center gap-2\">\n                        <Activity size={20} className=\"text-cyan-400\" />\n                        Differential Diagnoses\n                      </h3>\n                      \n                      {/* Current differential diagnoses list */}\n                      <div className=\"space-y-2 mb-4\">\n                        <AnimatePresence>\n                          {(editData.differential_diagnoses || []).map((diagnosis, index) => (\n                            <motion.div\n                              key={index}\n                              initial={{ opacity: 0, scale: 0.8 }}\n                              animate={{ opacity: 1, scale: 1 }}\n                              exit={{ opacity: 0, scale: 0.8 }}\n                              className=\"flex items-center justify-between p-3 bg-cyan-600/10 rounded-lg border border-cyan-600/20 group hover:bg-cyan-600/15 transition-colors\"\n                            >\n                              <span className=\"text-cyan-300\">{diagnosis}</span>\n                              <motion.button\n                                whileHover={{ scale: 1.1 }}\n                                whileTap={{ scale: 0.9 }}\n                                onClick={() => removeItemDirectly('differential_diagnoses', diagnosis)}\n                                className=\"text-cyan-400 hover:text-cyan-200 opacity-0 group-hover:opacity-100 transition-opacity p-1 rounded\"\n                                title=\"Remove differential diagnosis\"\n                              >\n                                <X size={16} />\n                              </motion.button>\n                            </motion.div>\n                          ))}\n                        </AnimatePresence>\n                      </div>\n                      \n                      {/* Add new differential diagnosis */}\n                      <div className=\"flex gap-2\">\n                        <input\n                          type=\"text\"\n                          value={getNewTag('differential_diagnoses')}\n                          onChange={(e) => setNewTag('differential_diagnoses', e.target.value)}\n                          placeholder=\"Add differential diagnosis...\"\n                          className=\"flex-1 bg-slate-700 border border-slate-600 rounded-lg px-3 py-2 text-white placeholder-slate-400 focus:ring-2 focus:ring-cyan-500 focus:border-cyan-500 transition-colors\"\n                          onKeyPress={(e) => {\n                            if (e.key === 'Enter' && getNewTag('differential_diagnoses').trim()) {\n                              addItemDirectly('differential_diagnoses', getNewTag('differential_diagnoses'));\n                              clearNewTag('differential_diagnoses');\n                            }\n                          }}\n                        />\n                        <motion.button\n                          whileHover={{ scale: 1.02 }}\n                          whileTap={{ scale: 0.98 }}\n                          onClick={() => {\n                            if (getNewTag('differential_diagnoses').trim()) {\n                              addItemDirectly('differential_diagnoses', getNewTag('differential_diagnoses'));\n                              clearNewTag('differential_diagnoses');\n                            }\n                          }}\n                          className=\"px-4 py-2 bg-cyan-600 text-white rounded-lg hover:bg-cyan-700 transition-colors flex items-center gap-2\"\n                        >\n                          <Plus size={16} />\n                          Add\n                        </motion.button>\n                      </div>\n                      \n                      {(editData.differential_diagnoses || []).length === 0 && (\n                        <p className=\"text-slate-500 italic text-center py-4\">No differential diagnoses added yet</p>\n                      )}\n                    </motion.div>\n                  </motion.div>\n                )}\n\n                {/* Treatment Tab */}\n                {activeTab === 'treatment' && (\n                  <motion.div\n                    key=\"treatment\"\n                    ref={el => contentRefs.current.treatment = el}\n                    initial={{ opacity: 0, x: -20 }}\n                    animate={{ opacity: 1, x: 0 }}\n                    exit={{ opacity: 0, x: 20 }}\n                    transition={{ duration: 0.3 }}\n                    className=\"h-full overflow-y-auto p-6 space-y-6\"\n                  >\n                    {/* Medications Section */}\n                    <motion.div \n                      variants={cardVariants}\n                      initial=\"hidden\"\n                      animate=\"visible\"\n                      className=\"bg-slate-800/50 backdrop-blur-sm rounded-xl p-6 border border-slate-700\"\n                    >\n                      <h3 className=\"text-lg font-semibold text-white mb-4 flex items-center gap-2\">\n                        <Pill size={20} className=\"text-green-400\" />\n                        Medications\n                      </h3>\n                      \n                      {/* Current medications list */}\n                      <div className=\"space-y-2 mb-4\">\n                        <AnimatePresence>\n                          {(editData.medications || []).map((medication, index) => (\n                            <motion.div\n                              key={index}\n                              initial={{ opacity: 0, scale: 0.8 }}\n                              animate={{ opacity: 1, scale: 1 }}\n                              exit={{ opacity: 0, scale: 0.8 }}\n                              className=\"flex items-center justify-between p-3 bg-green-600/10 rounded-lg border border-green-600/20 group hover:bg-green-600/15 transition-colors\"\n                            >\n                              <span className=\"text-green-300\">{medication}</span>\n                              <motion.button\n                                whileHover={{ scale: 1.1 }}\n                                whileTap={{ scale: 0.9 }}\n                                onClick={() => removeItemDirectly('medications', medication)}\n                                className=\"text-green-400 hover:text-green-200 opacity-0 group-hover:opacity-100 transition-opacity p-1 rounded\"\n                                title=\"Remove medication\"\n                              >\n                                <X size={16} />\n                              </motion.button>\n                            </motion.div>\n                          ))}\n                        </AnimatePresence>\n                      </div>\n                      \n                      {/* Add new medication */}\n                      <div className=\"flex gap-2\">\n                        <input\n                          type=\"text\"\n                          value={getNewTag('medications')}\n                          onChange={(e) => setNewTag('medications', e.target.value)}\n                          placeholder=\"Add medication...\"\n                          className=\"flex-1 bg-slate-700 border border-slate-600 rounded-lg px-3 py-2 text-white placeholder-slate-400 focus:ring-2 focus:ring-green-500 focus:border-green-500 transition-colors\"\n                          onKeyPress={(e) => {\n                            if (e.key === 'Enter' && getNewTag('medications').trim()) {\n                              addItemDirectly('medications', getNewTag('medications'));\n                              clearNewTag('medications');\n                            }\n                          }}\n                        />\n                        <motion.button\n                          whileHover={{ scale: 1.02 }}\n                          whileTap={{ scale: 0.98 }}\n                          onClick={() => {\n                            if (getNewTag('medications').trim()) {\n                              addItemDirectly('medications', getNewTag('medications'));\n                              clearNewTag('medications');\n                            }\n                          }}\n                          className=\"px-4 py-2 bg-green-600 text-white rounded-lg hover:bg-green-700 transition-colors flex items-center gap-2\"\n                        >\n                          <Plus size={16} />\n                          Add\n                        </motion.button>\n                      </div>\n                      \n                      {(editData.medications || []).length === 0 && (\n                        <p className=\"text-slate-500 italic text-center py-4\">No medications added yet</p>\n                      )}\n                    </motion.div>\n\n                    {/* Psychotherapy Modalities Section */}\n                    <motion.div \n                      variants={cardVariants}\n                      animate={editingSections.psychotherapy_modalities ? \"edit\" : \"visible\"}\n                      className=\"bg-slate-800/50 backdrop-blur-sm rounded-xl p-6 border border-slate-700\"\n                    >\n                      <div className=\"flex items-center justify-between mb-4\">\n                        <h3 className=\"text-lg font-semibold text-white flex items-center gap-2\">\n                          <Brain size={20} className=\"text-purple-400\" />\n                          Psychotherapy Modalities\n                        </h3>\n                        {!editingSections.psychotherapy_modalities && (\n                          <motion.button\n                            whileHover={{ scale: 1.1 }}\n                            whileTap={{ scale: 0.9 }}\n                            onClick={() => startEditingSection('psychotherapy_modalities')}\n                            className=\"text-slate-400 hover:text-white transition-colors p-1 rounded\"\n                            title=\"Edit psychotherapy modalities\"\n                          >\n                            <Edit3 size={16} />\n                          </motion.button>\n                        )}\n                      </div>\n                      \n                      {editingSections.psychotherapy_modalities ? (\n                        <div className=\"space-y-4\">\n                          <textarea\n                            value={Array.isArray(sectionData.psychotherapy_modalities?.psychotherapy_modalities) \n                              ? sectionData.psychotherapy_modalities.psychotherapy_modalities.join('\\n') \n                              : Array.isArray(editData.psychotherapy_modalities)\n                                ? editData.psychotherapy_modalities.join('\\n')\n                                : editData.psychotherapy_modalities || ''}\n                            onChange={(e) => updateSectionField('psychotherapy_modalities', 'psychotherapy_modalities', e.target.value.split('\\n').filter(item => item.trim()))}\n                            rows={4}\n                            className=\"w-full bg-slate-700 border border-slate-600 rounded-lg px-4 py-3 text-white placeholder-slate-400 focus:ring-2 focus:ring-purple-500 focus:border-purple-500 resize-none\"\n                            placeholder=\"Enter psychotherapy modalities (one per line)...\"\n                          />\n                          <div className=\"flex justify-end gap-2\">\n                            <button\n                              onClick={() => cancelEditingSection('psychotherapy_modalities')}\n                              className=\"px-3 py-2 text-slate-300 hover:text-white border border-slate-600 rounded-lg hover:bg-slate-700 transition-colors text-sm\"\n                            >\n                              Cancel\n                            </button>\n                            <motion.button\n                              onClick={() => saveSectionEdit('psychotherapy_modalities')}\n                              disabled={isLoading}\n                              className=\"px-3 py-2 bg-purple-600 text-white rounded-lg hover:bg-purple-700 transition-colors text-sm flex items-center gap-2\"\n                            >\n                              {isLoading ? <Loader2 size={14} className=\"animate-spin\" /> : <Save size={14} />}\n                              Save\n                            </motion.button>\n                          </div>\n                        </div>\n                      ) : (\n                        <div className=\"space-y-2\">\n                          {(editData.psychotherapy_modalities || []).length > 0 ? (\n                            editData.psychotherapy_modalities.map((modality, index) => (\n                              <div key={index} className=\"flex items-center gap-3\">\n                                <span className=\"text-purple-400 font-medium\">•</span>\n                                <span className=\"text-slate-300\">{modality}</span>\n                              </div>\n                            ))\n                          ) : (\n                            <span className=\"text-slate-500 italic\">No psychotherapy modalities added</span>\n                          )}\n                        </div>\n                      )}\n                    </motion.div>\n                  </motion.div>\n                )}\n\n                {/* Connections Tab */}\n                {activeTab === 'connections' && (\n                  <motion.div\n                    key=\"connections\"\n                    ref={el => contentRefs.current.connections = el}\n                    initial={{ opacity: 0, x: -20 }}\n                    animate={{ opacity: 1, x: 0 }}\n                    exit={{ opacity: 0, x: 20 }}\n                    transition={{ duration: 0.3 }}\n                    className=\"h-full overflow-y-auto p-6 space-y-6\"\n                  >\n                    <motion.div \n                      variants={cardVariants}\n                      initial=\"hidden\"\n                      animate=\"visible\"\n                      className=\"bg-slate-800/50 backdrop-blur-sm rounded-xl p-6 border border-slate-700\"\n                    >\n                      <h3 className=\"text-lg font-semibold text-white mb-4 flex items-center gap-2\">\n                        <Link2 size={20} className=\"text-blue-400\" />\n                        Connected Nodes\n                      </h3>\n                      <p className=\"text-slate-400 text-center py-8\">\n                        This section will show nodes connected to this topic in the mind map.\n                      </p>\n                    </motion.div>\n                  </motion.div>\n                )}\n              </AnimatePresence>\n            </motion.div>\n          </motion.div>\n        </motion.div>\n      )}\n    </AnimatePresence>\n  );\n};\n\nexport default TopicModal;","// Enhanced Task Modal with tabbed interface and advanced animations\nimport React, { useState, useEffect, useMemo, useCallback, useRef } from 'react';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport { \n  X, \n  CheckSquare, \n  Clock, \n  AlertTriangle, \n  Flag, \n  Calendar, \n  Link2, \n  Target,\n  Edit3,\n  Trash2,\n  Save,\n  Loader2,\n  Star,\n  Play,\n  Pause,\n  RotateCcw,\n  TrendingUp,\n  Users,\n  BookOpen,\n  FileText,\n  Tag\n} from 'lucide-react';\n\n// Animation variants for Framer Motion\nconst modalVariants = {\n  hidden: {\n    opacity: 0,\n    scale: 0.3,\n    y: 50,\n    rotate: -5,\n  },\n  visible: {\n    opacity: 1,\n    scale: 1,\n    y: 0,\n    rotate: 0,\n    transition: {\n      type: \"spring\",\n      damping: 25,\n      stiffness: 300,\n      duration: 0.6,\n    }\n  },\n  exit: {\n    opacity: 0,\n    scale: 0.7,\n    y: 30,\n    rotate: -3,\n    transition: {\n      type: \"easeInOut\",\n      duration: 0.4,\n    }\n  }\n};\n\nconst backdropVariants = {\n  hidden: { \n    opacity: 0,\n    backdropFilter: 'blur(0px)'\n  },\n  visible: { \n    opacity: 1,\n    backdropFilter: 'blur(8px)',\n    transition: {\n      duration: 0.4,\n      ease: \"easeOut\"\n    }\n  },\n  exit: { \n    opacity: 0,\n    backdropFilter: 'blur(0px)',\n    transition: {\n      duration: 0.3,\n      ease: \"easeIn\"\n    }\n  }\n};\n\nconst contentVariants = {\n  hidden: {\n    opacity: 0,\n    y: 20,\n    scale: 0.95,\n  },\n  visible: {\n    opacity: 1,\n    y: 0,\n    scale: 1,\n    transition: {\n      type: \"easeOut\",\n      duration: 0.3,\n      delay: 0.1,\n    }\n  },\n  exit: {\n    opacity: 0,\n    y: -10,\n    scale: 1.02,\n    transition: {\n      type: \"easeIn\",\n      duration: 0.2,\n    }\n  }\n};\n\nconst TaskModal = ({ \n  isOpen, \n  data, \n  onClose,\n  onAnimationStart,\n  onAnimationEnd,\n  setMindMapData,\n  autoSaveMindMapData,\n  addToast\n}) => {\n  const [isAnimating, setIsAnimating] = useState(false);\n  const [isVisible, setIsVisible] = useState(false);\n  const [isClosing, setIsClosing] = useState(false);\n  const [isEditing, setIsEditing] = useState(false);\n  const [editData, setEditData] = useState({});\n  const [isLoading, setIsLoading] = useState(false);\n  const [hasInitialized, setHasInitialized] = useState(false);\n  const [activeTab, setActiveTab] = useState('overview');\n  const [isTabTransitioning, setIsTabTransitioning] = useState(false);\n\n  useEffect(() => {\n    if (isOpen && data && !hasInitialized) {\n      setIsVisible(true);\n      setEditData({ \n        ...data,\n        status: data.status || 'pending',\n        priority: data.priority || 'medium'\n      });\n      setHasInitialized(true);\n      setIsAnimating(true);\n      if (onAnimationStart) onAnimationStart();\n      \n      setTimeout(() => {\n        setIsAnimating(false);\n        if (onAnimationEnd) onAnimationEnd();\n      }, 600);\n    } else if (!isOpen && hasInitialized) {\n      setHasInitialized(false);\n    }\n  }, [isOpen, hasInitialized, onAnimationStart, onAnimationEnd]);\n\n  // Separate effect for data updates when modal is already open\n  useEffect(() => {\n    if (isOpen && data && hasInitialized && !isEditing && !isLoading && !isTabTransitioning && !isAnimating) {\n      setEditData({ \n        ...data,\n        status: data.status || 'pending',\n        priority: data.priority || 'medium'\n      });\n    }\n  }, [data?.id, isOpen, hasInitialized, isEditing, isLoading, isTabTransitioning, isAnimating]);\n\n  const priorityConfig = useMemo(() => ({\n    low: { color: 'green', label: 'Low Priority', icon: Flag },\n    medium: { color: 'yellow', label: 'Medium Priority', icon: Flag },\n    high: { color: 'red', label: 'High Priority', icon: Flag },\n    urgent: { color: 'purple', label: 'Urgent', icon: AlertTriangle }\n  }), []);\n\n  const statusConfig = useMemo(() => ({\n    pending: { color: 'gray', label: 'Pending', icon: Clock },\n    in_progress: { color: 'blue', label: 'In Progress', icon: Play },\n    completed: { color: 'green', label: 'Completed', icon: CheckSquare },\n    paused: { color: 'orange', label: 'Paused', icon: Pause }\n  }), []);\n\n  const isOverdue = useMemo(() => {\n    if (!editData.due_date) return false;\n    const dueDate = new Date(editData.due_date);\n    const today = new Date();\n    return dueDate < today && editData.status !== 'completed';\n  }, [editData.due_date, editData.status]);\n\n  const handleClose = useCallback(() => {\n    if (isAnimating || isClosing) return;\n    \n    setIsAnimating(true);\n    setIsClosing(true);\n    if (onAnimationStart) onAnimationStart();\n    \n    // Set visibility to false to trigger exit animation\n    setIsVisible(false);\n  }, [onAnimationStart, isAnimating, isClosing]);\n\n  const handleSave = useCallback(async () => {\n    if (isLoading) return;\n    \n    setIsLoading(true);\n    try {\n      setMindMapData(prevData => {\n        const updatedTasks = prevData.tasks.map(task =>\n          String(task.id) === String(data?.id) ? { ...task, ...editData } : task\n        );\n        const newData = { ...prevData, tasks: updatedTasks };\n        autoSaveMindMapData(newData);\n        return newData;\n      });\n      \n      setIsEditing(false);\n      addToast('Task updated successfully', 'success');\n    } catch (error) {\n      console.error('Error saving task:', error);\n      addToast('Failed to save task', 'error');\n    } finally {\n      setIsLoading(false);\n    }\n  }, [data?.id, editData, setMindMapData, autoSaveMindMapData, addToast, isLoading]);\n\n  const handleDelete = useCallback(async () => {\n    if (isLoading) return;\n    \n    if (!window.confirm('Are you sure you want to delete this task?')) return;\n    \n    setIsLoading(true);\n    try {\n      setMindMapData(prevData => {\n        const updatedTasks = prevData.tasks.filter(task => String(task.id) !== String(data?.id));\n        const newData = { ...prevData, tasks: updatedTasks };\n        autoSaveMindMapData(newData);\n        return newData;\n      });\n      \n      addToast('Task deleted successfully', 'success');\n      handleClose();\n    } catch (error) {\n      console.error('Error deleting task:', error);\n      addToast('Failed to delete task', 'error');\n    } finally {\n      setIsLoading(false);\n    }\n  }, [data?.id, setMindMapData, autoSaveMindMapData, addToast, handleClose, isLoading]);\n\n  const handleStatusChange = useCallback((newStatus) => {\n    setEditData(prev => ({ ...prev, status: newStatus }));\n  }, []);\n\n  const updateField = useCallback((field, value) => {\n    setEditData(prev => ({ ...prev, [field]: value }));\n  }, []);\n\n  const renderField = (label, field, type = 'text', options = {}) => {\n    const value = editData[field] || '';\n    \n    if (!isEditing) {\n      if (type === 'textarea') {\n        return (\n          <div className=\"space-y-2\">\n            <label className=\"block text-sm font-medium text-gray-700\">{label}</label>\n            <div className=\"p-3 bg-gray-50 rounded-lg border min-h-[2.5rem] text-gray-800\">\n              {value || <span className=\"text-gray-400 italic\">Not specified</span>}\n            </div>\n          </div>\n        );\n      }\n      \n      if (type === 'select') {\n        return (\n          <div className=\"space-y-2\">\n            <label className=\"block text-sm font-medium text-gray-700\">{label}</label>\n            <div className=\"p-3 bg-gray-50 rounded-lg border text-gray-800\">\n              {value || <span className=\"text-gray-400 italic\">Not specified</span>}\n            </div>\n          </div>\n        );\n      }\n      \n      if (type === 'date') {\n        return (\n          <div className=\"space-y-2\">\n            <label className=\"block text-sm font-medium text-gray-700\">{label}</label>\n            <div className=\"p-3 bg-gray-50 rounded-lg border text-gray-800\">\n              {value ? new Date(value).toLocaleDateString() : <span className=\"text-gray-400 italic\">Not set</span>}\n            </div>\n          </div>\n        );\n      }\n      \n      return (\n        <div className=\"space-y-2\">\n          <label className=\"block text-sm font-medium text-gray-700\">{label}</label>\n          <div className=\"p-3 bg-gray-50 rounded-lg border text-gray-800\">\n            {value || <span className=\"text-gray-400 italic\">Not specified</span>}\n          </div>\n        </div>\n      );\n    }\n\n    // Editing mode\n    if (type === 'textarea') {\n      return (\n        <div className=\"space-y-2\">\n          <label className=\"block text-sm font-medium text-gray-700\">{label}</label>\n          <textarea\n            value={value}\n            onChange={(e) => updateField(field, e.target.value)}\n            className=\"w-full p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-colors\"\n            rows={options.rows || 3}\n            placeholder={`Enter ${label.toLowerCase()}...`}\n          />\n        </div>\n      );\n    }\n\n    if (type === 'select' && options.choices) {\n      return (\n        <div className=\"space-y-2\">\n          <label className=\"block text-sm font-medium text-gray-700\">{label}</label>\n          <select\n            value={value}\n            onChange={(e) => updateField(field, e.target.value)}\n            className=\"w-full p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-colors\"\n          >\n            <option value=\"\">Select {label.toLowerCase()}...</option>\n            {options.choices.map(choice => (\n              <option key={choice.value} value={choice.value}>{choice.label}</option>\n            ))}\n          </select>\n        </div>\n      );\n    }\n\n    if (type === 'date') {\n      return (\n        <div className=\"space-y-2\">\n          <label className=\"block text-sm font-medium text-gray-700\">{label}</label>\n          <input\n            type=\"date\"\n            value={value}\n            onChange={(e) => updateField(field, e.target.value)}\n            className=\"w-full p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-colors\"\n          />\n        </div>\n      );\n    }\n\n    return (\n      <div className=\"space-y-2\">\n        <label className=\"block text-sm font-medium text-gray-700\">{label}</label>\n        <input\n          type={type}\n          value={value}\n          onChange={(e) => updateField(field, type === 'number' ? Number(e.target.value) : e.target.value)}\n          className=\"w-full p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-colors\"\n          placeholder={`Enter ${label.toLowerCase()}...`}\n        />\n      </div>\n    );\n  };\n\n  if (!isOpen) return null;\n\n  return (\n    <AnimatePresence mode=\"wait\" onExitComplete={() => {\n      setIsAnimating(false);\n      setIsClosing(false);\n      setHasInitialized(false);\n      onClose();\n      if (onAnimationEnd) onAnimationEnd();\n    }}>\n      {isVisible && (\n        <motion.div\n          key={`task-modal-${data?.id || 'default'}`}\n          initial=\"hidden\"\n          animate=\"visible\"\n          exit=\"exit\"\n          variants={backdropVariants}\n          className=\"fixed inset-0 bg-black flex items-center justify-center z-50\"\n          style={{ \n            willChange: 'backdrop-filter, opacity',\n            backfaceVisibility: 'hidden',\n            transform: 'translate3d(0, 0, 0)'\n          }}\n          onClick={(e) => e.target === e.currentTarget && handleClose()}\n        >\n          <motion.div\n            initial=\"hidden\"\n            animate=\"visible\"\n            exit=\"exit\"\n            variants={modalVariants}\n            className=\"bg-white rounded-2xl shadow-2xl max-w-4xl w-full mx-4 max-h-[85vh] overflow-hidden\"\n            style={{ \n              willChange: 'transform, opacity, scale',\n              backfaceVisibility: 'hidden'\n            }}\n            onClick={(e) => e.stopPropagation()}\n            onAnimationStart={() => {\n              setIsAnimating(true);\n              if (onAnimationStart) onAnimationStart();\n            }}\n            onAnimationComplete={() => {\n              setIsAnimating(false);\n              if (onAnimationEnd) onAnimationEnd();\n            }}\n          >\n            <motion.div \n              initial=\"hidden\"\n              animate=\"visible\"\n              exit=\"exit\"\n              variants={contentVariants}\n              className=\"bg-gradient-to-br from-slate-900 to-slate-800 text-white px-6 py-4 flex items-center justify-between\"\n            >\n              <div className=\"flex items-center gap-3\">\n                <CheckSquare size={24} />\n                <h2 className=\"text-xl font-semibold\">Task Details</h2>\n                {isOverdue && (\n                  <motion.div\n                    animate={{ scale: [1, 1.1, 1] }}\n                    transition={{ duration: 1, repeat: Infinity }}\n                    className=\"flex items-center gap-1 px-2 py-1 bg-red-500 rounded-full text-xs font-medium\"\n                  >\n                    <AlertTriangle size={12} />\n                    Overdue\n                  </motion.div>\n                )}\n              </div>\n              <div className=\"flex items-center gap-2\">\n                {!isEditing && !isLoading && (\n                  <>\n                    <button\n                      onClick={() => setIsEditing(true)}\n                      className=\"text-white hover:text-gray-200 p-2 rounded-full hover:bg-white hover:bg-opacity-20 transition-all\"\n                      title=\"Edit\"\n                    >\n                      <Edit3 size={20} />\n                    </button>\n                    <button\n                      onClick={handleDelete}\n                      className=\"text-white hover:text-red-200 p-2 rounded-full hover:bg-red-500 hover:bg-opacity-30 transition-all\"\n                      title=\"Delete\"\n                    >\n                      <Trash2 size={20} />\n                    </button>\n                  </>\n                )}\n                <button onClick={handleClose} className=\"text-white hover:text-gray-200 p-2 rounded-full hover:bg-white hover:bg-opacity-20 transition-all\">\n                  <X size={20} />\n                </button>\n              </div>\n            </motion.div>\n\n            {/* Tab Navigation */}\n            <div className=\"bg-gradient-to-r from-slate-900 via-slate-800 to-slate-900 border-b border-slate-600\">\n              <nav className=\"flex flex-wrap gap-2 px-6 py-4\">\n                {[\n                  { key: 'overview', label: 'Overview', icon: CheckSquare },\n                  { key: 'progress', label: 'Progress', icon: TrendingUp },\n                  { key: 'connections', label: 'Connections', icon: Link2 },\n                  { key: 'details', label: 'Details', icon: FileText }\n                ].map(({ key, label, icon: Icon }) => (\n                  <motion.button\n                    key={key}\n                    onClick={() => {\n                      if (isTabTransitioning) return;\n                      setIsTabTransitioning(true);\n                      setActiveTab(key);\n                      setTimeout(() => setIsTabTransitioning(false), 300);\n                    }}\n                    className={`relative flex items-center gap-2 px-4 py-3 rounded-xl font-medium text-sm transition-all duration-300 ${\n                      activeTab === key\n                        ? 'bg-gradient-to-r from-emerald-500 to-teal-600 text-white shadow-lg shadow-emerald-500/25'\n                        : 'text-slate-300 hover:text-white hover:bg-slate-700/50 hover:shadow-md'\n                    }`}\n                    whileHover={{ scale: activeTab === key ? 1 : 1.02 }}\n                    whileTap={{ scale: 0.98 }}\n                    initial={false}\n                    animate={{\n                      scale: activeTab === key ? 1.05 : 1,\n                      boxShadow: activeTab === key \n                        ? '0 8px 25px rgba(16, 185, 129, 0.3), 0 0 20px rgba(20, 184, 166, 0.2)' \n                        : '0 2px 8px rgba(0, 0, 0, 0.1)'\n                    }}\n                    transition={{ duration: 0.3, ease: \"easeOut\" }}\n                  >\n                    <Icon size={16} className={activeTab === key ? 'drop-shadow-sm' : ''} />\n                    {label}\n                    \n                    {activeTab === key && (\n                      <motion.div\n                        layoutId=\"taskTabGlow\"\n                        className=\"absolute inset-0 bg-gradient-to-r from-emerald-400/20 to-teal-500/20 rounded-xl blur-sm\"\n                        initial={false}\n                        transition={{ type: \"spring\", bounce: 0.2, duration: 0.6 }}\n                      />\n                    )}\n                  </motion.button>\n                ))}\n              </nav>\n            </div>\n            \n            {/* Tab Content */}\n            <motion.div \n              className=\"relative overflow-hidden bg-gradient-to-br from-slate-50 to-slate-100\"\n              layout=\"position\"\n              layoutRoot\n              transition={{ \n                layout: { duration: 0.4, ease: \"easeInOut\" },\n                height: { duration: 0.4, ease: \"easeInOut\" }\n              }}\n            >\n              <AnimatePresence mode=\"wait\" initial={false} onExitComplete={() => setIsTabTransitioning(false)}>\n                {/* Overview Tab */}\n                {activeTab === 'overview' && (\n                  <motion.div\n                    key=\"overview\"\n                    initial={{ opacity: 0, x: -30 }}\n                    animate={{ opacity: 1, x: 0 }}\n                    exit={{ opacity: 0, x: 30 }}\n                    transition={{ duration: 0.4, ease: \"easeOut\" }}\n                    layout=\"position\"\n                    layoutId=\"tabContent\"\n                    className=\"p-6 overflow-y-auto max-h-[calc(85vh-200px)] scrollbar-thin scrollbar-thumb-slate-400 scrollbar-track-slate-200\"\n                  >\n                    <div className=\"space-y-6\">\n                      <div className=\"bg-white rounded-xl p-6 shadow-lg border border-slate-200\">\n                        <h3 className=\"text-lg font-semibold text-slate-800 mb-4 flex items-center gap-2\">\n                          <Target size={20} className=\"text-emerald-600\" />\n                          Task Information\n                        </h3>\n                        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                          {renderField('Title', 'title')}\n                          {renderField('Priority', 'priority', 'select', {\n                            choices: [\n                              { value: 'low', label: 'Low Priority' },\n                              { value: 'medium', label: 'Medium Priority' },\n                              { value: 'high', label: 'High Priority' },\n                              { value: 'urgent', label: 'Urgent' }\n                            ]\n                          })}\n                        </div>\n                        <div className=\"mt-6\">\n                          {renderField('Description', 'description', 'textarea', { rows: 4 })}\n                        </div>\n                      </div>\n                      \n                      <div className=\"bg-white rounded-xl p-6 shadow-lg border border-slate-200\">\n                        <h3 className=\"text-lg font-semibold text-slate-800 mb-4 flex items-center gap-2\">\n                          <Clock size={20} className=\"text-blue-600\" />\n                          Status & Timeline\n                        </h3>\n                        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                          {renderField('Status', 'status', 'select', {\n                            choices: [\n                              { value: 'pending', label: 'Pending' },\n                              { value: 'in_progress', label: 'In Progress' },\n                              { value: 'completed', label: 'Completed' },\n                              { value: 'paused', label: 'Paused' }\n                            ]\n                          })}\n                          {renderField('Due Date', 'due_date', 'date')}\n                        </div>\n                        \n                        {/* Status Change Buttons */}\n                        <div className=\"mt-6\">\n                          <label className=\"block text-sm font-medium text-gray-700 mb-3\">Quick Status Update</label>\n                          <div className=\"flex flex-wrap gap-3\">\n                            {Object.entries(statusConfig).map(([status, config]) => {\n                              const Icon = config.icon;\n                              const isActive = editData.status === status;\n                              return (\n                                <motion.button\n                                  key={status}\n                                  onClick={() => handleStatusChange(status)}\n                                  disabled={!isEditing}\n                                  whileHover={isEditing ? { scale: 1.05 } : {}}\n                                  whileTap={isEditing ? { scale: 0.95 } : {}}\n                                  className={`flex items-center gap-2 px-4 py-2 rounded-lg font-medium text-sm transition-all ${\n                                    isActive\n                                      ? `bg-${config.color}-100 text-${config.color}-800 border-2 border-${config.color}-300`\n                                      : `bg-gray-100 text-gray-600 border-2 border-gray-200 ${isEditing ? 'hover:bg-gray-200' : 'cursor-not-allowed opacity-50'}`\n                                  }`}\n                                >\n                                  <Icon size={16} />\n                                  {config.label}\n                                </motion.button>\n                              );\n                            })}\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </motion.div>\n                )}\n\n                {/* Progress Tab */}\n                {activeTab === 'progress' && (\n                  <motion.div\n                    key=\"progress\"\n                    initial={{ opacity: 0, x: -30 }}\n                    animate={{ opacity: 1, x: 0 }}\n                    exit={{ opacity: 0, x: 30 }}\n                    transition={{ duration: 0.4, ease: \"easeOut\" }}\n                    layout=\"position\"\n                    layoutId=\"tabContent\"\n                    className=\"p-6 overflow-y-auto max-h-[calc(85vh-200px)] scrollbar-thin scrollbar-thumb-slate-400 scrollbar-track-slate-200\"\n                  >\n                    <div className=\"bg-white rounded-xl p-6 shadow-lg border border-slate-200\">\n                      <h3 className=\"text-lg font-semibold text-slate-800 mb-6 flex items-center gap-2\">\n                        <TrendingUp size={20} className=\"text-blue-600\" />\n                        Task Progress\n                      </h3>\n                      \n                      {/* Status Overview */}\n                      <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6 mb-8\">\n                        <motion.div\n                          whileHover={{ scale: 1.02 }}\n                          className={`p-4 rounded-lg border-2 ${\n                            editData.status === 'completed' \n                              ? 'bg-green-50 border-green-200' \n                              : 'bg-gray-50 border-gray-200'\n                          }`}\n                        >\n                          <div className=\"flex items-center gap-3 mb-2\">\n                            <CheckSquare size={20} className={editData.status === 'completed' ? 'text-green-600' : 'text-gray-400'} />\n                            <span className={`font-medium ${editData.status === 'completed' ? 'text-green-800' : 'text-gray-600'}`}>\n                              Completion\n                            </span>\n                          </div>\n                          <div className={`text-2xl font-bold ${editData.status === 'completed' ? 'text-green-700' : 'text-gray-700'}`}>\n                            {editData.status === 'completed' ? '100%' : '0%'}\n                          </div>\n                        </motion.div>\n                        \n                        <motion.div\n                          whileHover={{ scale: 1.02 }}\n                          className={`p-4 rounded-lg border-2 ${\n                            isOverdue \n                              ? 'bg-red-50 border-red-200' \n                              : 'bg-blue-50 border-blue-200'\n                          }`}\n                        >\n                          <div className=\"flex items-center gap-3 mb-2\">\n                            <Calendar size={20} className={isOverdue ? 'text-red-600' : 'text-blue-600'} />\n                            <span className={`font-medium ${isOverdue ? 'text-red-800' : 'text-blue-800'}`}>\n                              Due Date\n                            </span>\n                          </div>\n                          <div className={`text-lg font-bold ${isOverdue ? 'text-red-700' : 'text-blue-700'}`}>\n                            {editData.due_date ? new Date(editData.due_date).toLocaleDateString() : 'Not set'}\n                          </div>\n                          {isOverdue && (\n                            <div className=\"text-sm text-red-600 mt-1\">Overdue</div>\n                          )}\n                        </motion.div>\n                        \n                        <motion.div\n                          whileHover={{ scale: 1.02 }}\n                          className={`p-4 rounded-lg border-2 ${\n                            editData.priority === 'urgent' || editData.priority === 'high'\n                              ? 'bg-orange-50 border-orange-200'\n                              : 'bg-gray-50 border-gray-200'\n                          }`}\n                        >\n                          <div className=\"flex items-center gap-3 mb-2\">\n                            <Flag size={20} className={\n                              editData.priority === 'urgent' || editData.priority === 'high' \n                                ? 'text-orange-600' \n                                : 'text-gray-600'\n                            } />\n                            <span className={`font-medium ${\n                              editData.priority === 'urgent' || editData.priority === 'high' \n                                ? 'text-orange-800' \n                                : 'text-gray-800'\n                            }`}>\n                              Priority\n                            </span>\n                          </div>\n                          <div className={`text-lg font-bold ${\n                            editData.priority === 'urgent' || editData.priority === 'high' \n                              ? 'text-orange-700' \n                              : 'text-gray-700'\n                          }`}>\n                            {priorityConfig[editData.priority]?.label || 'Not set'}\n                          </div>\n                        </motion.div>\n                      </div>\n                    </div>\n                  </motion.div>\n                )}\n\n                {/* Connections Tab */}\n                {activeTab === 'connections' && (\n                  <motion.div\n                    key=\"connections\"\n                    initial={{ opacity: 0, x: -30 }}\n                    animate={{ opacity: 1, x: 0 }}\n                    exit={{ opacity: 0, x: 30 }}\n                    transition={{ duration: 0.4, ease: \"easeOut\" }}\n                    layout=\"position\"\n                    layoutId=\"tabContent\"\n                    className=\"p-6 overflow-y-auto max-h-[calc(85vh-200px)] scrollbar-thin scrollbar-thumb-slate-400 scrollbar-track-slate-200\"\n                  >\n                    <div className=\"bg-white rounded-xl p-6 shadow-lg border border-slate-200\">\n                      <h3 className=\"text-lg font-semibold text-slate-800 mb-6 flex items-center gap-2\">\n                        <Link2 size={20} className=\"text-indigo-600\" />\n                        Related Content\n                      </h3>\n                      \n                      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                        {renderField('Linked Case ID', 'linked_case_id')}\n                        {renderField('Linked Topic ID', 'linked_topic_id')}\n                      </div>\n                      \n                      <div className=\"mt-8 text-center py-8 text-gray-500\">\n                        <Link2 size={48} className=\"mx-auto mb-3 text-gray-300\" />\n                        <p>No connections found</p>\n                        <p className=\"text-sm mt-1\">Link this task to cases or topics to create connections</p>\n                      </div>\n                    </div>\n                  </motion.div>\n                )}\n\n                {/* Details Tab */}\n                {activeTab === 'details' && (\n                  <motion.div\n                    key=\"details\"\n                    initial={{ opacity: 0, x: -30 }}\n                    animate={{ opacity: 1, x: 0 }}\n                    exit={{ opacity: 0, x: 30 }}\n                    transition={{ duration: 0.4, ease: \"easeOut\" }}\n                    layout=\"position\"\n                    layoutId=\"tabContent\"\n                    className=\"p-6 overflow-y-auto max-h-[calc(85vh-200px)] scrollbar-thin scrollbar-thumb-slate-400 scrollbar-track-slate-200\"\n                  >\n                    <div className=\"bg-white rounded-xl p-6 shadow-lg border border-slate-200\">\n                      <h3 className=\"text-lg font-semibold text-slate-800 mb-6 flex items-center gap-2\">\n                        <FileText size={20} className=\"text-gray-600\" />\n                        Additional Details\n                      </h3>\n                      \n                      <div className=\"space-y-6\">\n                        <div className=\"text-sm text-gray-600 bg-slate-50 p-4 rounded-lg\">\n                          <p className=\"font-medium mb-2\">Task Details</p>\n                          <div className=\"space-y-2\">\n                            <p><span className=\"font-medium\">Created:</span> {data?.created_at ? new Date(data.created_at).toLocaleString() : 'Unknown'}</p>\n                            <p><span className=\"font-medium\">Last Updated:</span> {data?.updated_at ? new Date(data.updated_at).toLocaleString() : 'Unknown'}</p>\n                            <p><span className=\"font-medium\">Task ID:</span> {data?.id || 'Unknown'}</p>\n                          </div>\n                        </div>\n                        \n                        <div className=\"p-4 bg-blue-50 rounded-lg border border-blue-200\">\n                          <h4 className=\"font-medium text-blue-800 mb-2\">Task Management Tips</h4>\n                          <ul className=\"text-blue-700 text-sm space-y-1\">\n                            <li>• Break large tasks into smaller, manageable subtasks</li>\n                            <li>• Set realistic due dates to maintain accountability</li>\n                            <li>• Link tasks to relevant cases or topics for better organization</li>\n                            <li>• Update status regularly to track progress</li>\n                          </ul>\n                        </div>\n                      </div>\n                    </div>\n                  </motion.div>\n                )}\n              </AnimatePresence>\n            </motion.div>\n\n            {isEditing && (\n              <div className=\"sticky bottom-0 bg-gray-50 border-t border-gray-200 px-6 py-4 flex items-center justify-between\">\n                <div className=\"text-sm text-gray-500\">\n                  Changes will be auto-saved\n                </div>\n                <div className=\"flex items-center gap-3\">\n                  <button\n                    onClick={() => {\n                      setIsEditing(false);\n                      setEditData({ ...data });\n                    }}\n                    disabled={isLoading}\n                    className=\"px-4 py-2 text-gray-600 hover:text-gray-800 border border-gray-300 rounded-lg hover:bg-gray-100 transition-colors\"\n                  >\n                    Cancel\n                  </button>\n                  <button\n                    onClick={handleSave}\n                    disabled={isLoading}\n                    className=\"px-4 py-2 bg-emerald-600 text-white rounded-lg hover:bg-emerald-700 transition-colors flex items-center gap-2\"\n                  >\n                    {isLoading ? <Loader2 size={16} className=\"animate-spin\" /> : <Save size={16} />}\n                    {isLoading ? 'Saving...' : 'Save Changes'}\n                  </button>\n                </div>\n              </div>\n            )}\n          </motion.div>\n        </motion.div>\n      )}\n    </AnimatePresence>\n  );\n};\n\nexport default React.memo(TaskModal, (prevProps, nextProps) => {\n  return (\n    prevProps.isOpen === nextProps.isOpen &&\n    prevProps.data?.id === nextProps.data?.id &&\n    prevProps.data?.updated_at === nextProps.data?.updated_at\n  );\n});\n","// Enhanced Case Modal with tabbed interface and advanced animations\nimport React, { useState, useEffect, useMemo, useCallback, useRef } from 'react';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport { \n  X, \n  Users, \n  FileText, \n  Pill, \n  Brain, \n  Link2,\n  Edit3,\n  Trash2,\n  Save,\n  Loader2,\n  Plus,\n  Check,\n  Calendar,\n  Clock,\n  AlertCircle,\n  BookOpen,\n  Target,\n  Heart,\n  ChevronDown,\n  ChevronRight,\n  Activity\n} from 'lucide-react';\n\n// Import the Vertical Timeline component\nimport VerticalTimeline from './timeline-test/VerticalTimeline';\n\n// Utility function for debouncing\nconst debounce = (func, delay) => {\n  let timeoutId;\n  return (...args) => {\n    clearTimeout(timeoutId);\n    timeoutId = setTimeout(() => func.apply(null, args), delay);\n  };\n};\n\n// Animation variants for Framer Motion\nconst modalVariants = {\n  hidden: {\n    opacity: 0,\n    scale: 0.3,\n    y: 50,\n    rotate: -5,\n  },\n  visible: {\n    opacity: 1,\n    scale: 1,\n    y: 0,\n    rotate: 0,\n    transition: {\n      type: \"spring\",\n      damping: 25,\n      stiffness: 300,\n      duration: 0.6,\n    }\n  },\n  exit: {\n    opacity: 0,\n    scale: 0.7,\n    y: 30,\n    rotate: -3,\n    transition: {\n      type: \"easeInOut\",\n      duration: 0.4,\n    }\n  }\n};\n\nconst backdropVariants = {\n  hidden: { \n    opacity: 0,\n    backdropFilter: 'blur(0px)'\n  },\n  visible: { \n    opacity: 1,\n    backdropFilter: 'blur(8px)',\n    transition: {\n      duration: 0.4,\n      ease: \"easeOut\"\n    }\n  },\n  exit: { \n    opacity: 0,\n    backdropFilter: 'blur(0px)',\n    transition: {\n      duration: 0.3,\n      ease: \"easeIn\"\n    }\n  }\n};\n\nconst contentVariants = {\n  hidden: {\n    opacity: 0,\n    y: 20,\n    scale: 0.95,\n  },\n  visible: {\n    opacity: 1,\n    y: 0,\n    scale: 1,\n    transition: {\n      type: \"easeOut\",\n      duration: 0.3,\n      delay: 0.1,\n    }\n  },\n  exit: {\n    opacity: 0,\n    y: -10,\n    scale: 1.02,\n    transition: {\n      type: \"easeIn\",\n      duration: 0.2,\n    }\n  }\n};\n\n// Card animation variants for sections\nconst cardVariants = {\n  hidden: { opacity: 0, y: 20, scale: 0.95 },\n  visible: { \n    opacity: 1, \n    y: 0, \n    scale: 1,\n    transition: {\n      duration: 0.4,\n      ease: \"easeOut\"\n    }\n  },\n  edit: { \n    scale: 1.02,\n    boxShadow: \"0 8px 25px rgba(59, 130, 246, 0.15)\",\n    transition: {\n      duration: 0.3,\n      ease: \"easeOut\"\n    }\n  },\n  saved: {\n    scale: 1,\n    boxShadow: \"0 4px 15px rgba(34, 197, 94, 0.15)\",\n    transition: {\n      duration: 0.3,\n      ease: \"easeOut\"\n    }\n  }\n};\n\nconst CaseModal = ({ \n  isOpen, \n  data, \n  onClose,\n  onAnimationStart,\n  onAnimationEnd,\n  setMindMapData,\n  autoSaveMindMapData,\n  addToast\n}) => {\n  const [isAnimating, setIsAnimating] = useState(false);\n  const [isVisible, setIsVisible] = useState(false);\n  const [isClosing, setIsClosing] = useState(false);\n  const [editData, setEditData] = useState({});\n  const [isLoading, setIsLoading] = useState(false);\n  const [hasInitialized, setHasInitialized] = useState(false);\n  const [activeTab, setActiveTab] = useState('overview');\n  const [isTabTransitioning, setIsTabTransitioning] = useState(false);\n  \n  // Individual section edit states\n  const [editingSections, setEditingSections] = useState({});\n  const [sectionData, setSectionData] = useState({});\n  \n  // Tab-specific scroll positions\n  const [scrollPositions, setScrollPositions] = useState({});\n  const contentRefs = useRef({});\n  \n  // Form states for different tabs\n  const [newMedication, setNewMedication] = useState({ name: '', dosage: '', frequency: '', effect: '' });\n  const [showMedicationForm, setShowMedicationForm] = useState(false);\n\n  useEffect(() => {\n    if (isOpen && data && !hasInitialized) {\n      setIsVisible(true);\n      const initialData = { \n        ...data,\n        narrative_summary: data.narrative_summary || '',\n        medications: data.medications || [],\n        therapeutic_highlights: data.therapeutic_highlights || '',\n        timeline: data.timeline || [], // Initialize timeline\n        last_updated: data.last_updated || new Date().toISOString()\n      };\n      setEditData(initialData);\n      setHasInitialized(true);\n      setIsAnimating(true);\n      if (onAnimationStart) onAnimationStart();\n      \n      setTimeout(() => {\n        setIsAnimating(false);\n        if (onAnimationEnd) onAnimationEnd();\n      }, 600);\n    } else if (!isOpen && hasInitialized) {\n      setHasInitialized(false);\n      setScrollPositions({});\n      setEditingSections({});\n      setSectionData({});\n    }\n  }, [isOpen, data, hasInitialized, onAnimationStart, onAnimationEnd]);\n\n  // Enhanced effect for instant feedback - updates editData immediately when data changes\n  useEffect(() => {\n    if (isOpen && data && hasInitialized) {\n      // Update editData with latest data for instant feedback\n      setEditData(prevEditData => {\n        const updatedData = { \n          ...prevEditData, // Keep any local edits\n          ...data, // Override with latest data from parent\n        };\n        return updatedData;\n      });\n    }\n  }, [data, isOpen, hasInitialized]);\n\n  const handleClose = useCallback(() => {\n    if (isAnimating || isClosing) return;\n    \n    setIsAnimating(true);\n    setIsClosing(true);\n    if (onAnimationStart) onAnimationStart();\n    \n    // Set visibility to false to trigger exit animation\n    setIsVisible(false);\n  }, [onAnimationStart, isAnimating, isClosing]);\n\n  // Escape key handling to close modal - MOVED AFTER handleClose definition\n  useEffect(() => {\n    const handleKeyDown = (event) => {\n      if (event.key === 'Escape') {\n        handleClose();\n      }\n    };\n\n    if (isOpen) {\n      document.addEventListener('keydown', handleKeyDown);\n      return () => {\n        document.removeEventListener('keydown', handleKeyDown);\n      };\n    }\n  }, [isOpen, handleClose]);\n\n  const handleSave = useCallback(async () => {\n    if (isLoading) return;\n    \n    setIsLoading(true);\n    try {\n      const updatedData = {\n        ...editData,\n        last_updated: new Date().toISOString()\n      };\n      \n      setMindMapData(prevData => {\n        const updatedCases = prevData.cases.map(caseItem =>\n          String(caseItem.id) === String(data?.id) ? { ...caseItem, ...updatedData } : caseItem\n        );\n        const newData = { ...prevData, cases: updatedCases };\n        autoSaveMindMapData(newData);\n        return newData;\n      });\n      \n      setEditData(updatedData);\n      addToast('Case updated successfully', 'success');\n    } catch (error) {\n      console.error('Error saving case:', error);\n      addToast('Failed to save case', 'error');\n    } finally {\n      setIsLoading(false);\n    }\n  }, [data?.id, editData, setMindMapData, autoSaveMindMapData, addToast, isLoading]);\n\n  // Save current tab's scroll position before switching\n  const saveScrollPosition = useCallback((tabId) => {\n    const contentRef = contentRefs.current[tabId];\n    if (contentRef) {\n      setScrollPositions(prev => ({\n        ...prev,\n        [tabId]: contentRef.scrollTop\n      }));\n    }\n  }, []);\n\n  // Restore scroll position when switching to a tab\n  const restoreScrollPosition = useCallback((tabId) => {\n    setTimeout(() => {\n      const contentRef = contentRefs.current[tabId];\n      const savedPosition = scrollPositions[tabId];\n      if (contentRef && savedPosition) {\n        contentRef.scrollTop = savedPosition;\n      }\n    }, 100); // Small delay to ensure content is rendered\n  }, [scrollPositions]);\n\n  // Handle tab switching with scroll position preservation\n  const handleTabSwitch = useCallback((newTabId) => {\n    if (newTabId === activeTab || isTabTransitioning) return;\n    \n    // Save current tab's scroll position\n    saveScrollPosition(activeTab);\n    \n    setIsTabTransitioning(true);\n    setActiveTab(newTabId);\n    \n    setTimeout(() => {\n      setIsTabTransitioning(false);\n      // Restore new tab's scroll position\n      restoreScrollPosition(newTabId);\n    }, 300);\n  }, [activeTab, isTabTransitioning, saveScrollPosition, restoreScrollPosition]);\n\n  // Section editing functionality\n  const toggleEditSection = useCallback((sectionId) => {\n    setEditingSections(prev => ({\n      ...prev,\n      [sectionId]: !prev[sectionId]\n    }));\n    \n    // Initialize section data if starting to edit\n    if (!editingSections[sectionId]) {\n      setSectionData(prev => ({\n        ...prev,\n        [sectionId]: {\n          // Initialize with current values from editData\n          ...(sectionId === 'basic_info' && {\n            label: editData.label || editData.title || '',\n            status: editData.status || 'active'\n          }),\n          ...(sectionId === 'chief_complaint' && {\n            content: editData.chiefComplaint || editData.chief_complaint || ''\n          }),\n          ...(sectionId === 'initial_presentation' && {\n            content: editData.initialPresentation || editData.initial_presentation || ''\n          }),\n          ...(sectionId === 'narrative' && {\n            content: editData.narrative_summary || ''\n          }),\n          ...(sectionId === 'therapeutic_highlights' && {\n            therapeutic_highlights: editData.therapeutic_highlights || ''\n          })\n        }\n      }));\n    }\n  }, [editingSections, editData]);\n\n  const updateSectionData = useCallback((sectionId, field, value) => {\n    // Update sectionData for temporary editing state\n    setSectionData(prev => ({\n      ...prev,\n      [sectionId]: {\n        ...prev[sectionId],\n        [field]: value\n      }\n    }));\n  }, []);\n\n  const cancelEdit = useCallback((sectionId) => {\n    setEditingSections(prev => ({\n      ...prev,\n      [sectionId]: false\n    }));\n    setSectionData(prev => {\n      const newData = { ...prev };\n      delete newData[sectionId];\n      return newData;\n    });\n  }, []);\n\n  const saveSection = useCallback(async (sectionId) => {\n    if (isLoading) return;\n    \n    setIsLoading(true);\n    try {\n      const sectionChanges = sectionData[sectionId] || {};\n      let updatedData = { ...editData };\n      \n      // Apply section-specific changes\n      if (sectionId === 'basic_info') {\n        if (sectionChanges.label) {\n          updatedData.label = sectionChanges.label;\n          updatedData.title = sectionChanges.label; // Also update title for compatibility\n        }\n        if (sectionChanges.status) {\n          updatedData.status = sectionChanges.status;\n        }\n      } else if (sectionId === 'chief_complaint') {\n        if (sectionChanges.content !== undefined) {\n          updatedData.chief_complaint = sectionChanges.content;\n          updatedData.chiefComplaint = sectionChanges.content;\n        }\n      } else if (sectionId === 'initial_presentation') {\n        if (sectionChanges.content !== undefined) {\n          updatedData.initial_presentation = sectionChanges.content;\n          updatedData.initialPresentation = sectionChanges.content;\n        }\n      } else if (sectionId === 'narrative') {\n        if (sectionChanges.content !== undefined) {\n          updatedData.narrative_summary = sectionChanges.content;\n        }\n      }\n      \n      updatedData.last_updated = new Date().toISOString();\n      \n      // Update editData immediately for instant feedback\n      setEditData(updatedData);\n      \n      // Update parent data\n      setMindMapData(prevData => {\n        const updatedCases = prevData.cases.map(caseItem =>\n          String(caseItem.id) === String(data?.id) ? { ...caseItem, ...updatedData } : caseItem\n        );\n        const newData = { ...prevData, cases: updatedCases };\n        autoSaveMindMapData(newData);\n        return newData;\n      });\n      \n      // Clear editing state\n      setEditingSections(prev => ({\n        ...prev,\n        [sectionId]: false\n      }));\n      setSectionData(prev => {\n        const newData = { ...prev };\n        delete newData[sectionId];\n        return newData;\n      });\n      \n      addToast('Case information updated successfully', 'success');\n      \n    } catch (error) {\n      console.error('Error saving section:', error);\n      addToast('Failed to save changes', 'error');\n    } finally {\n      setIsLoading(false);\n    }\n  }, [sectionData, editData, data?.id, setMindMapData, autoSaveMindMapData, addToast, isLoading]);\n\n  const handleDelete = useCallback(async () => {\n    if (isLoading) return;\n    \n    if (!window.confirm('Are you sure you want to delete this case?')) return;\n    \n    setIsLoading(true);\n    try {\n      setMindMapData(prevData => {\n        const updatedCases = prevData.cases.filter(caseItem => String(caseItem.id) !== String(data?.id));\n        const newData = { ...prevData, cases: updatedCases };\n        autoSaveMindMapData(newData);\n        return newData;\n      });\n      \n      addToast('Case deleted successfully', 'success');\n      handleClose();\n    } catch (error) {\n      console.error('Error deleting case:', error);\n      addToast('Failed to delete case', 'error');\n    } finally {\n      setIsLoading(false);\n    }\n  }, [data?.id, setMindMapData, autoSaveMindMapData, addToast, handleClose, isLoading]);\n\n  // Individual section edit functions\n  const startEditingSection = useCallback((sectionId) => {\n    setEditingSections(prev => ({ ...prev, [sectionId]: true }));\n    // Initialize section data with current values\n    setSectionData(prev => ({\n      ...prev,\n      [sectionId]: { ...editData }\n    }));\n  }, [editData]);\n\n  const cancelEditingSection = useCallback((sectionId) => {\n    setEditingSections(prev => ({ ...prev, [sectionId]: false }));\n    setSectionData(prev => {\n      const newData = { ...prev };\n      delete newData[sectionId];\n      return newData;\n    });\n  }, []);\n\n  const saveSectionEdit = useCallback(async (sectionId) => {\n    if (isLoading) return;\n    \n    const sectionChanges = sectionData[sectionId];\n    if (!sectionChanges) return;\n    \n    setIsLoading(true);\n    try {\n      const updatedData = {\n        ...editData,\n        ...sectionChanges,\n        last_updated: new Date().toISOString()\n      };\n      \n      // Update editData immediately for instant feedback\n      setEditData(updatedData);\n      \n      setMindMapData(prevData => {\n        const updatedCases = prevData.cases.map(caseItem =>\n          String(caseItem.id) === String(data?.id) ? { ...caseItem, ...updatedData } : caseItem\n        );\n        const newData = { ...prevData, cases: updatedCases };\n        autoSaveMindMapData(newData);\n        return newData;\n      });\n      \n      setEditingSections(prev => ({ ...prev, [sectionId]: false }));\n      setSectionData(prev => {\n        const newData = { ...prev };\n        delete newData[sectionId];\n        return newData;\n      });\n      \n      addToast('Section updated successfully', 'success');\n    } catch (error) {\n      console.error('Error saving section:', error);\n      addToast('Failed to save section', 'error');\n    } finally {\n      setIsLoading(false);\n    }\n  }, [sectionData, editData, data?.id, setMindMapData, autoSaveMindMapData, addToast, isLoading]);\n\n  const updateSectionField = useCallback((sectionId, field, value) => {\n    setSectionData(prev => ({\n      ...prev,\n      [sectionId]: {\n        ...prev[sectionId],\n        [field]: value\n      }\n    }));\n  }, []);\n\n  // Medication management functions\n  const addMedication = useCallback(() => {\n    if (!newMedication.name.trim()) return;\n    \n    const updatedMedications = [...(editData.medications || []), { \n      id: Date.now(),\n      ...newMedication,\n      dateAdded: new Date().toISOString()\n    }];\n    \n    const updatedData = {\n      ...editData,\n      medications: updatedMedications,\n      last_updated: new Date().toISOString()\n    };\n    \n    setEditData(updatedData);\n    \n    setMindMapData(prevData => {\n      const updatedCases = prevData.cases.map(caseItem =>\n        String(caseItem.id) === String(data?.id) ? { ...caseItem, ...updatedData } : caseItem\n      );\n      const newData = { ...prevData, cases: updatedCases };\n      autoSaveMindMapData(newData);\n      return newData;\n    });\n    \n    setNewMedication({ name: '', dosage: '', frequency: '', effect: '' });\n    setShowMedicationForm(false);\n    addToast('Medication added successfully', 'success');\n  }, [newMedication, editData, data?.id, setMindMapData, autoSaveMindMapData, addToast]);\n\n  const removeMedication = useCallback((medicationId) => {\n    const updatedMedications = (editData.medications || []).filter(med => med.id !== medicationId);\n    const updatedData = {\n      ...editData,\n      medications: updatedMedications,\n      last_updated: new Date().toISOString()\n    };\n    \n    setEditData(updatedData);\n    \n    setMindMapData(prevData => {\n      const updatedCases = prevData.cases.map(caseItem =>\n        String(caseItem.id) === String(data?.id) ? { ...caseItem, ...updatedData } : caseItem\n      );\n      const newData = { ...prevData, cases: updatedCases };\n      autoSaveMindMapData(newData);\n      return newData;\n    });\n    \n    addToast('Medication removed successfully', 'success');\n  }, [editData, data?.id, setMindMapData, autoSaveMindMapData, addToast]);\n\n  // Enhanced timeline management with debounced auto-save and better backend integration\n  const timelineEntries = useMemo(() => {\n    // Ensure timeline data is properly structured for the VerticalTimeline component\n    const timeline = editData.timeline || [];\n    console.log(`Timeline entries for case ${data?.id}:`, timeline);\n    return timeline;\n  }, [editData.timeline, data?.id]);\n  \n  // Debounced timeline save function with enhanced error handling\n  const debouncedTimelineSave = useCallback(\n    debounce(async (updatedTimeline, retryCount = 0) => {\n      try {\n        // Validate timeline data structure\n        const validatedTimeline = updatedTimeline.map((entry, index) => ({\n          id: entry.id || `timeline-${data?.id}-${Date.now()}-${index}`,\n          title: entry.title || `Timeline Entry ${index + 1}`,\n          type: entry.type || 'timeline_entry',\n          timestamp: entry.timestamp || entry.date || new Date().toISOString(),\n          date: entry.date || entry.timestamp || new Date().toISOString(),\n          patient_narrative: entry.patient_narrative || entry.patientData?.notes || '',\n          clinical_notes: entry.clinical_notes || entry.clinicalData?.notes || '',\n          content: entry.content || entry.patient_narrative || entry.clinical_notes || '',\n          symptoms: entry.symptoms || [],\n          orderIndex: entry.orderIndex !== undefined ? entry.orderIndex : index,\n          x: entry.x || 400, // Default center position\n          y: entry.y || (100 + (index * 200)), // Default spacing\n          created_at: entry.created_at || new Date().toISOString(),\n          updated_at: new Date().toISOString(),\n          // Keep original data for backward compatibility\n          ...entry\n        }));\n\n        const updatedData = {\n          ...editData,\n          timeline: validatedTimeline,\n          last_updated: new Date().toISOString()\n        };\n        \n        // Update editData immediately for instant feedback\n        setEditData(updatedData);\n        \n        // Enhanced mind map data update with better timeline integration\n        setMindMapData(prevData => {\n          const updatedCases = prevData.cases.map(caseItem => {\n            if (String(caseItem.id) === String(data?.id)) {\n              return { \n                ...caseItem, \n                ...updatedData,\n                // Ensure timeline data is properly structured for backend\n                timeline: validatedTimeline.map(entry => ({\n                  id: String(entry.id || `${Date.now()}-${caseItem.id}-timeline-${entry.orderIndex || 0}`),\n                  title: entry.title || `Timeline Entry ${(entry.orderIndex || 0) + 1}`,\n                  type: entry.type || 'timeline_entry',\n                  timestamp: entry.timestamp || entry.date || new Date().toISOString(),\n                  date: entry.date || entry.timestamp || new Date().toISOString(),\n                  patient_narrative: entry.patient_narrative || '',\n                  clinical_notes: entry.clinical_notes || '',\n                  content: entry.content || entry.patient_narrative || entry.clinical_notes || '',\n                  symptoms: entry.symptoms || [],\n                  orderIndex: entry.orderIndex !== undefined ? entry.orderIndex : 0,\n                  x: Number(entry.x) || 400,\n                  y: Number(entry.y) || 100,\n                  created_at: entry.created_at || new Date().toISOString(),\n                  updated_at: new Date().toISOString()\n                }))\n              };\n            }\n            return caseItem;\n          });\n          const newData = { ...prevData, cases: updatedCases };\n          autoSaveMindMapData(newData);\n          return newData;\n        });\n        \n        return { success: true, data: updatedData };\n      } catch (error) {\n        console.error('Timeline save error:', error);\n        \n        // Retry logic - up to 3 attempts\n        if (retryCount < 3) {\n          console.log(`Retrying timeline save (attempt ${retryCount + 1}/3)`);\n          return debouncedTimelineSave(updatedTimeline, retryCount + 1);\n        }\n        \n        return { success: false, error };\n      }\n    }, 500), // 500ms debounce\n    [editData, data?.id, setMindMapData, autoSaveMindMapData]\n  );\n  \n  const updateTimeline = useCallback(async (updatedTimeline, options = {}) => {\n    if (isLoading && !options.force) return;\n    \n    // Enhanced validation - check for meaningful content or position changes\n    const hasContent = updatedTimeline.some(entry => \n      (entry.patient_narrative && entry.patient_narrative.trim()) ||\n      (entry.clinical_notes && entry.clinical_notes.trim()) ||\n      (entry.content && entry.content.trim()) ||\n      entry.x !== 400 || entry.y !== 100 // Position has changed from default\n    );\n    \n    // Always save if forced or if there's meaningful content/changes\n    if (!hasContent && !options.force) {\n      console.log('Skipping timeline save - no meaningful content or changes');\n      return { success: true, skipped: true };\n    }\n    \n    console.log(`Updating timeline for case ${data?.id} with ${updatedTimeline.length} entries`);\n    return debouncedTimelineSave(updatedTimeline);\n  }, [debouncedTimelineSave, isLoading, data?.id]);\n\n  // Get connected nodes for Related tab\n  const connectedNodes = useMemo(() => {\n    if (!data?.id) return { topics: [], literature: [], cases: [] };\n    \n    // This would typically come from your mind map connections data\n    // For now, return empty arrays - you can implement based on your data structure\n    return {\n      topics: [],\n      literature: [],\n      cases: []\n    };\n  }, [data?.id]);\n\n  // Tab configuration\n  const tabs = [\n    { id: 'overview', label: 'Overview', icon: Users },\n    { id: 'medications', label: 'Medications', icon: Pill },\n    { id: 'therapy', label: 'Therapy & Insights', icon: Brain },\n    { id: 'timeline', label: 'Timeline', icon: Clock },\n    { id: 'related', label: 'Related', icon: Link2 }\n  ];\n\n  if (!isOpen) return null;\n\n  return (\n    <AnimatePresence mode=\"wait\" onExitComplete={() => {\n      setIsAnimating(false);\n      setIsClosing(false);\n      setHasInitialized(false);\n      onClose();\n      if (onAnimationEnd) onAnimationEnd();\n    }}>\n      {isVisible && (\n        <motion.div\n          key={`case-modal-${data?.id || 'default'}`}\n          initial=\"hidden\"\n          animate=\"visible\"\n          exit=\"exit\"\n          variants={backdropVariants}\n          className=\"fixed inset-0 bg-black flex items-center justify-center z-50\"\n          style={{ \n            willChange: 'backdrop-filter, opacity',\n            backfaceVisibility: 'hidden',\n            transform: 'translate3d(0, 0, 0)'\n          }}\n          onClick={(e) => e.target === e.currentTarget && handleClose()}\n        >\n          <motion.div\n            initial=\"hidden\"\n            animate=\"visible\"\n            exit=\"exit\"\n            variants={modalVariants}\n            className={`bg-white rounded-2xl shadow-2xl w-full mx-4 max-h-[90vh] overflow-hidden transition-all duration-500 ease-in-out ${\n              activeTab === 'timeline' ? 'max-w-7xl' : 'max-w-4xl'\n            }`}\n            style={{ \n              willChange: 'transform, opacity, scale',\n              backfaceVisibility: 'hidden'\n            }}\n            onClick={(e) => e.stopPropagation()}\n            onAnimationStart={() => {\n              setIsAnimating(true);\n              if (onAnimationStart) onAnimationStart();\n            }}\n            onAnimationComplete={() => {\n              setIsAnimating(false);\n              if (onAnimationEnd) onAnimationEnd();\n            }}\n          >\n            <motion.div \n              initial=\"hidden\"\n              animate=\"visible\"\n              exit=\"exit\"\n              variants={contentVariants}\n              className=\"bg-gradient-to-br from-slate-900 to-slate-800 text-white px-6 py-4 flex items-center justify-between\"\n            >\n              <div className=\"flex items-center gap-3\">\n                <Users size={24} />\n                <h2 className=\"text-xl font-semibold\">Case Details</h2>\n              </div>\n              <button\n                onClick={handleClose}\n                className=\"text-slate-400 hover:text-white transition-colors\"\n              >\n                <X size={24} />\n              </button>\n            </motion.div>\n\n            {/* Tab Navigation */}\n            <div className=\"bg-gradient-to-r from-slate-900 via-slate-800 to-slate-900 border-b border-slate-600\">\n              <nav className=\"flex flex-wrap gap-2 px-6 py-4\">\n                {tabs.map(({ id, label, icon: Icon }) => (\n                  <motion.button\n                    key={id}\n                    onClick={() => handleTabSwitch(id)}\n                    className={`relative flex items-center gap-2 px-4 py-3 rounded-xl font-medium text-sm transition-all duration-300 ${\n                      activeTab === id\n                        ? 'bg-gradient-to-r from-blue-500 to-indigo-600 text-white shadow-lg shadow-blue-500/25'\n                        : 'text-slate-300 hover:text-white hover:bg-slate-700/50 hover:shadow-md'\n                    }`}\n                    whileHover={{ scale: activeTab === id ? 1 : 1.02 }}\n                    whileTap={{ scale: 0.98 }}\n                    disabled={isTabTransitioning}\n                  >\n                    <Icon size={16} className={activeTab === id ? 'drop-shadow-sm' : ''} />\n                    {label}\n                    \n                    {activeTab === id && (\n                      <motion.div\n                        layoutId=\"caseActiveTab\"\n                        className=\"absolute inset-0 bg-gradient-to-r from-blue-400/20 to-indigo-500/20 rounded-xl blur-sm\"\n                        initial={false}\n                        transition={{ duration: 0.3, ease: \"easeOut\" }}\n                      />\n                    )}\n                  </motion.button>\n                ))}\n              </nav>\n            </div>\n\n            {/* Dark Content Area */}\n            <motion.div\n              className=\"flex-1 bg-gradient-to-br from-slate-900 to-slate-800 overflow-hidden\"\n              animate={{ opacity: isTabTransitioning ? 0.7 : 1 }}\n              transition={{ duration: 0.2 }}\n            >\n              <AnimatePresence mode=\"wait\">\n                {/* Overview Tab */}\n                {activeTab === 'overview' && (\n                  <motion.div\n                    key=\"overview\"\n                    ref={el => contentRefs.current.overview = el}\n                    initial={{ opacity: 0, x: -20 }}\n                    animate={{ opacity: 1, x: 0 }}\n                    exit={{ opacity: 0, x: 20 }}\n                    transition={{ duration: 0.3 }}\n                    className=\"h-full overflow-y-auto p-6 space-y-6\"\n                  >\n                    {/* Case Title and Basic Info */}\n                    <motion.div \n                      variants={cardVariants}\n                      initial=\"hidden\"\n                      animate=\"visible\"\n                      className=\"bg-slate-800/50 backdrop-blur-sm rounded-xl p-6 border border-slate-700\"\n                    >\n                      <div className=\"flex items-center justify-between mb-4\">\n                        <h3 className=\"text-lg font-semibold text-white\">Case Information</h3>\n                        <motion.button\n                          whileHover={{ scale: 1.05 }}\n                          whileTap={{ scale: 0.95 }}\n                          onClick={() => toggleEditSection('basic_info')}\n                          className=\"text-blue-400 hover:text-blue-300 transition-colors p-2 rounded-lg hover:bg-slate-700/50\"\n                          title=\"Edit case information\"\n                        >\n                          <Edit3 size={16} />\n                        </motion.button>\n                      </div>\n                      \n                      {editingSections.basic_info ? (\n                        <div className=\"space-y-4\">\n                          <div className=\"grid md:grid-cols-2 gap-4\">\n                            <div>\n                              <label className=\"block text-sm font-medium text-slate-300 mb-2\">Case Title/Label</label>\n                              <input\n                                type=\"text\"\n                                value={sectionData.basic_info?.label !== undefined ? sectionData.basic_info.label : (editData.label || editData.title || '')}\n                                onChange={(e) => updateSectionData('basic_info', 'label', e.target.value)}\n                                className=\"w-full bg-slate-700 border border-slate-600 rounded-lg px-3 py-2 text-white placeholder-slate-400 focus:ring-2 focus:ring-blue-400 focus:border-blue-400\"\n                                placeholder=\"Enter case title/label\"\n                              />\n                            </div>\n                            <div>\n                              <label className=\"block text-sm font-medium text-slate-300 mb-2\">Status</label>\n                              <select\n                                value={sectionData.basic_info?.status !== undefined ? sectionData.basic_info.status : (editData.status || 'active')}\n                                onChange={(e) => updateSectionData('basic_info', 'status', e.target.value)}\n                                className=\"w-full bg-slate-700 border border-slate-600 rounded-lg px-3 py-2 text-white focus:ring-2 focus:ring-blue-400 focus:border-blue-400\"\n                              >\n                                <option value=\"active\">Active</option>\n                                <option value=\"archived\">Archived</option>\n                                <option value=\"follow_up\">Follow-up</option>\n                                <option value=\"completed\">Completed</option>\n                              </select>\n                            </div>\n                          </div>\n                          \n                          {/* Action buttons area - consistent height */}\n                          <div className=\"flex gap-2 justify-end min-h-[44px] items-center\">\n                            <motion.button\n                              whileHover={{ scale: 1.05 }}\n                              whileTap={{ scale: 0.95 }}\n                              onClick={() => cancelEdit('basic_info')}\n                              className=\"px-4 py-2 bg-slate-600 text-white rounded-lg hover:bg-slate-500 transition-colors\"\n                            >\n                              Cancel\n                            </motion.button>\n                            <motion.button\n                              whileHover={{ scale: 1.05 }}\n                              whileTap={{ scale: 0.95 }}\n                              onClick={() => saveSection('basic_info')}\n                              className=\"px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors flex items-center gap-2\"\n                            >\n                              <Save size={16} />\n                              Save Changes\n                            </motion.button>\n                          </div>\n                        </div>\n                      ) : (\n                        <div className=\"space-y-4\">\n                          <div className=\"grid md:grid-cols-2 gap-4\">\n                            <div>\n                              <label className=\"block text-sm font-medium text-slate-300 mb-2\">Case Title/Label</label>\n                              <div className={`bg-slate-700/50 rounded-lg p-3 ${editData.label || editData.title ? 'text-white' : 'text-slate-400 italic'}`}>\n                                {editData.label || editData.title || 'Untitled case'}\n                              </div>\n                            </div>\n                            <div>\n                              <label className=\"block text-sm font-medium text-slate-300 mb-2\">Status</label>\n                              <div className=\"text-white bg-slate-700/50 rounded-lg p-3\">\n                                {editData.status || 'Active'}\n                              </div>\n                            </div>\n                          </div>\n                          \n                          {/* Reserved space for action buttons - maintains consistent height */}\n                          <div className=\"flex gap-2 justify-end min-h-[44px] items-center\">\n                            {/* Empty space to maintain layout consistency */}\n                          </div>\n                        </div>\n                      )}\n                    </motion.div>\n\n                    {/* Narrative Summary */}\n                    <motion.div \n                      variants={cardVariants}\n                      initial=\"hidden\"\n                      animate=\"visible\"\n                      className=\"bg-slate-800/50 backdrop-blur-sm rounded-xl p-6 border border-slate-700\"\n                    >\n                      <div className=\"flex items-center justify-between mb-4\">\n                        <h3 className=\"text-lg font-semibold text-white flex items-center gap-2\">\n                          <FileText size={20} className=\"text-blue-400\" />\n                          Case Narrative\n                        </h3>\n                        <motion.button\n                          whileHover={{ scale: 1.05 }}\n                          whileTap={{ scale: 0.95 }}\n                          onClick={() => toggleEditSection('narrative')}\n                          className=\"text-blue-400 hover:text-blue-300 transition-colors p-2 rounded-lg hover:bg-slate-700/50\"\n                          title=\"Edit narrative summary\"\n                        >\n                          <Edit3 size={16} />\n                        </motion.button>\n                      </div>\n                      \n                      {editingSections.narrative ? (\n                        <div className=\"space-y-4\">\n                          <textarea\n                            value={sectionData.narrative?.content !== undefined ? sectionData.narrative.content : (editData.narrative_summary || '')}\n                            onChange={(e) => updateSectionData('narrative', 'content', e.target.value)}\n                            rows={8}\n                            className=\"w-full bg-slate-700 border border-slate-600 rounded-lg px-3 py-2 text-white placeholder-slate-400 focus:ring-2 focus:ring-blue-400 focus:border-blue-400 resize-none\"\n                            placeholder=\"Enter the narrative summary for this case...\"\n                          />\n                          \n                          {/* Action buttons area - consistent height */}\n                          <div className=\"flex gap-2 justify-end min-h-[44px] items-center\">\n                            <motion.button\n                              whileHover={{ scale: 1.05 }}\n                              whileTap={{ scale: 0.95 }}\n                              onClick={() => cancelEdit('narrative')}\n                              className=\"px-4 py-2 bg-slate-600 text-white rounded-lg hover:bg-slate-500 transition-colors\"\n                            >\n                              Cancel\n                            </motion.button>\n                            <motion.button\n                              whileHover={{ scale: 1.05 }}\n                              whileTap={{ scale: 0.95 }}\n                              onClick={() => saveSection('narrative')}\n                              className=\"px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors flex items-center gap-2\"\n                            >\n                              <Save size={16} />\n                              Save Changes\n                            </motion.button>\n                          </div>\n                        </div>\n                      ) : (\n                        <div className=\"space-y-4\">\n                          <div className={`leading-relaxed bg-slate-700/30 rounded-lg p-4 ${editData.narrative_summary ? 'text-slate-300' : 'text-slate-400 italic'}`}>\n                            {editData.narrative_summary || 'No narrative summary documented'}\n                          </div>\n                          \n                          {/* Reserved space for action buttons - maintains consistent height */}\n                          <div className=\"flex gap-2 justify-end min-h-[44px] items-center\">\n                            {/* Empty space to maintain layout consistency */}\n                          </div>\n                        </div>\n                      )}\n                    </motion.div>\n\n                    {/* Last Updated */}\n                    <div className=\"text-xs text-slate-500 text-right\">\n                      Last updated: {editData.last_updated ? new Date(editData.last_updated).toLocaleString() : 'Never'}\n                    </div>\n                  </motion.div>\n                )}\n\n                {/* Medications Tab */}\n                {activeTab === 'medications' && (\n                  <motion.div\n                    key=\"medications\"\n                    ref={el => contentRefs.current.medications = el}\n                    initial={{ opacity: 0, x: -20 }}\n                    animate={{ opacity: 1, x: 0 }}\n                    exit={{ opacity: 0, x: 20 }}\n                    transition={{ duration: 0.3 }}\n                    className=\"h-full overflow-y-auto p-6 space-y-6\"\n                  >\n                    {/* Medications List */}\n                    <motion.div \n                      variants={cardVariants}\n                      initial=\"hidden\"\n                      animate=\"visible\"\n                      className=\"bg-slate-800/50 backdrop-blur-sm rounded-xl p-6 border border-slate-700\"\n                    >\n                      <h3 className=\"text-lg font-semibold text-white mb-4 flex items-center gap-2\">\n                        <Pill size={20} className=\"text-green-400\" />\n                        Current Medications\n                      </h3>\n                      \n                      {/* Existing Medications */}\n                      <div className=\"space-y-4 mb-6\">\n                        <AnimatePresence>\n                          {(editData.medications || []).map((medication, index) => (\n                            <motion.div\n                              key={medication.id || index}\n                              initial={{ opacity: 0, scale: 0.8 }}\n                              animate={{ opacity: 1, scale: 1 }}\n                              exit={{ opacity: 0, scale: 0.8 }}\n                              className=\"bg-green-600/10 border border-green-600/20 rounded-lg p-4 group hover:bg-green-600/15 transition-colors\"\n                            >\n                              <div className=\"flex items-start justify-between\">\n                                <div className=\"flex-1\">\n                                  <div className=\"flex items-center gap-3 mb-2\">\n                                    <h4 className=\"font-semibold text-green-300\">{medication.name}</h4>\n                                    {medication.dosage && (\n                                      <span className=\"text-xs bg-green-600/20 text-green-300 px-2 py-1 rounded\">\n                                        {medication.dosage}\n                                      </span>\n                                    )}\n                                  </div>\n                                  <div className=\"space-y-1 text-sm text-slate-300\">\n                                    {medication.frequency && (\n                                      <div className=\"flex items-center gap-2\">\n                                        <Clock size={14} className=\"text-green-400\" />\n                                        <span>Frequency: {medication.frequency}</span>\n                                      </div>\n                                    )}\n                                    {medication.effect && (\n                                      <div className=\"flex items-center gap-2\">\n                                        <Activity size={14} className=\"text-green-400\" />\n                                        <span>Effect: {medication.effect}</span>\n                                      </div>\n                                    )}\n                                    {medication.dateAdded && (\n                                      <div className=\"flex items-center gap-2\">\n                                        <Calendar size={14} className=\"text-green-400\" />\n                                        <span>Added: {new Date(medication.dateAdded).toLocaleDateString()}</span>\n                                      </div>\n                                    )}\n                                  </div>\n                                </div>\n                                <motion.button\n                                  whileHover={{ scale: 1.1 }}\n                                  whileTap={{ scale: 0.9 }}\n                                  onClick={() => removeMedication(medication.id)}\n                                  className=\"text-green-400 hover:text-green-200 opacity-0 group-hover:opacity-100 transition-opacity p-1 rounded\"\n                                  title=\"Remove medication\"\n                                >\n                                  <Trash2 size={16} />\n                                </motion.button>\n                              </div>\n                            </motion.div>\n                          ))}\n                        </AnimatePresence>\n                      </div>\n                      \n                      {/* Add New Medication */}\n                      {!showMedicationForm ? (\n                        <motion.button\n                          whileHover={{ scale: 1.02 }}\n                          whileTap={{ scale: 0.98 }}\n                          onClick={() => setShowMedicationForm(true)}\n                          className=\"w-full flex items-center justify-center gap-2 p-4 border-2 border-dashed border-green-600/30 rounded-lg text-green-400 hover:border-green-600/50 hover:bg-green-600/5 transition-colors\"\n                        >\n                          <Plus size={16} />\n                          Add New Medication\n                        </motion.button>\n                      ) : (\n                        <motion.div\n                          initial={{ opacity: 0, y: 20 }}\n                          animate={{ opacity: 1, y: 0 }}\n                          className=\"bg-slate-700/30 rounded-lg p-4 space-y-4\"\n                        >\n                          <div className=\"grid md:grid-cols-2 gap-4\">\n                            <div>\n                              <label className=\"block text-sm font-medium text-slate-300 mb-2\">\n                                Medication Name <span className=\"text-red-400\">*</span>\n                              </label>\n                              <input\n                                type=\"text\"\n                                value={newMedication.name}\n                                onChange={(e) => setNewMedication(prev => ({ ...prev, name: e.target.value }))}\n                                className=\"w-full bg-slate-700 border border-slate-600 rounded-lg px-3 py-2 text-white placeholder-slate-400 focus:ring-2 focus:ring-green-500 focus:border-green-500\"\n                                placeholder=\"Enter medication name\"\n                              />\n                            </div>\n                            <div>\n                              <label className=\"block text-sm font-medium text-slate-300 mb-2\">Dosage</label>\n                              <input\n                                type=\"text\"\n                                value={newMedication.dosage}\n                                onChange={(e) => setNewMedication(prev => ({ ...prev, dosage: e.target.value }))}\n                                className=\"w-full bg-slate-700 border border-slate-600 rounded-lg px-3 py-2 text-white placeholder-slate-400 focus:ring-2 focus:ring-green-500 focus:border-green-500\"\n                                placeholder=\"e.g., 50mg\"\n                              />\n                            </div>\n                          </div>\n                          <div className=\"grid md:grid-cols-2 gap-4\">\n                            <div>\n                              <label className=\"block text-sm font-medium text-slate-300 mb-2\">Frequency</label>\n                              <input\n                                type=\"text\"\n                                value={newMedication.frequency}\n                                onChange={(e) => setNewMedication(prev => ({ ...prev, frequency: e.target.value }))}\n                                className=\"w-full bg-slate-700 border border-slate-600 rounded-lg px-3 py-2 text-white placeholder-slate-400 focus:ring-2 focus:ring-green-500 focus:border-green-500\"\n                                placeholder=\"e.g., Once daily\"\n                              />\n                            </div>\n                            <div>\n                              <label className=\"block text-sm font-medium text-slate-300 mb-2\">Effect/Notes</label>\n                              <input\n                                type=\"text\"\n                                value={newMedication.effect}\n                                onChange={(e) => setNewMedication(prev => ({ ...prev, effect: e.target.value }))}\n                                className=\"w-full bg-slate-700 border border-slate-600 rounded-lg px-3 py-2 text-white placeholder-slate-400 focus:ring-2 focus:ring-green-500 focus:border-green-500\"\n                                placeholder=\"e.g., Improved mood\"\n                              />\n                            </div>\n                          </div>\n                          <div className=\"flex justify-end gap-2\">\n                            <motion.button\n                              whileHover={{ scale: 1.02 }}\n                              whileTap={{ scale: 0.98 }}\n                              onClick={() => {\n                                setShowMedicationForm(false);\n                                setNewMedication({ name: '', dosage: '', frequency: '', effect: '' });\n                              }}\n                              className=\"px-4 py-2 text-slate-300 hover:text-white border border-slate-600 rounded-lg hover:bg-slate-700 transition-colors\"\n                            >\n                              Cancel\n                            </motion.button>\n                            <motion.button\n                              whileHover={{ scale: 1.02 }}\n                              whileTap={{ scale: 0.98 }}\n                              onClick={addMedication}\n                              disabled={!newMedication.name.trim()}\n                              className=\"px-4 py-2 bg-green-600 text-white rounded-lg hover:bg-green-700 transition-colors flex items-center gap-2 disabled:opacity-50 disabled:cursor-not-allowed\"\n                            >\n                              <Plus size={16} />\n                              Add Medication\n                            </motion.button>\n                          </div>\n                        </motion.div>\n                      )}\n                      \n                      {(editData.medications || []).length === 0 && !showMedicationForm && (\n                        <p className=\"text-slate-500 italic text-center py-8\">No medications documented yet</p>\n                      )}\n                    </motion.div>\n                  </motion.div>\n                )}\n\n                {/* Therapy & Insights Tab */}\n                {activeTab === 'therapy' && (\n                  <motion.div\n                    key=\"therapy\"\n                    ref={el => contentRefs.current.therapy = el}\n                    initial={{ opacity: 0, x: -20 }}\n                    animate={{ opacity: 1, x: 0 }}\n                    exit={{ opacity: 0, x: 20 }}\n                    transition={{ duration: 0.3 }}\n                    className=\"h-full overflow-y-auto p-6 space-y-6\"\n                  >\n                    {/* Therapeutic Highlights Section */}\n                    <motion.div \n                      variants={cardVariants}\n                      animate={editingSections.therapeutic_highlights ? \"edit\" : \"visible\"}\n                      className=\"bg-slate-800/50 backdrop-blur-sm rounded-xl p-6 border border-slate-700\"\n                    >\n                      <div className=\"flex items-center justify-between mb-4\">\n                        <h3 className=\"text-lg font-semibold text-white flex items-center gap-2\">\n                          <Brain size={20} className=\"text-purple-400\" />\n                          Therapeutic Highlights\n                        </h3>\n                        {!editingSections.therapeutic_highlights && (\n                          <motion.button\n                            whileHover={{ scale: 1.1 }}\n                            whileTap={{ scale: 0.9 }}\n                            onClick={() => startEditingSection('therapeutic_highlights')}\n                            className=\"text-slate-400 hover:text-white transition-colors p-1 rounded\"\n                            title=\"Edit therapeutic highlights\"\n                          >\n                            <Edit3 size={16} />\n                          </motion.button>\n                        )}\n                      </div>\n                      \n                      {editingSections.therapeutic_highlights ? (\n                        <motion.div \n                          className=\"space-y-4\"\n                          initial={{ opacity: 0, y: 10 }}\n                          animate={{ opacity: 1, y: 0 }}\n                          transition={{ duration: 0.3 }}\n                        >\n                          <textarea\n                            value={sectionData.therapeutic_highlights?.therapeutic_highlights !== undefined ? sectionData.therapeutic_highlights.therapeutic_highlights : (editData.therapeutic_highlights || '')}\n                            onChange={(e) => updateSectionField('therapeutic_highlights', 'therapeutic_highlights', e.target.value)}\n                            rows={10}\n                            className=\"w-full bg-slate-700 border border-slate-600 rounded-lg px-4 py-3 text-white placeholder-slate-400 focus:ring-2 focus:ring-purple-500 focus:border-purple-500 resize-none\"\n                            placeholder=\"Enter key therapeutic moments, insights, breakthroughs, or notes on therapy process...\"\n                          />\n                          <div className=\"flex justify-end gap-2\">\n                            <motion.button\n                              whileHover={{ scale: 1.02 }}\n                              whileTap={{ scale: 0.98 }}\n                              onClick={() => cancelEditingSection('therapeutic_highlights')}\n                              className=\"px-3 py-2 text-slate-300 hover:text-white border border-slate-600 rounded-lg hover:bg-slate-700 transition-colors text-sm\"\n                            >\n                              Cancel\n                            </motion.button>\n                            <motion.button\n                              whileHover={{ scale: 1.02 }}\n                              whileTap={{ scale: 0.98 }}\n                              onClick={() => saveSectionEdit('therapeutic_highlights')}\n                              disabled={isLoading}\n                              className=\"px-3 py-2 bg-purple-600 text-white rounded-lg hover:bg-purple-700 transition-colors text-sm flex items-center gap-2\"\n                            >\n                              {isLoading ? <Loader2 size={14} className=\"animate-spin\" /> : <Save size={14} />}\n                              Save\n                            </motion.button>\n                          </div>\n                        </motion.div>\n                      ) : (\n                        <motion.div \n                          className=\"text-slate-300 leading-relaxed cursor-pointer hover:bg-slate-700/20 rounded-lg p-4 transition-colors min-h-[200px]\"\n                          whileHover={{ scale: 1.01 }}\n                          transition={{ duration: 0.2 }}\n                          onClick={() => startEditingSection('therapeutic_highlights')}\n                        >\n                          {editData.therapeutic_highlights ? (\n                            <div className=\"whitespace-pre-wrap\">{editData.therapeutic_highlights}</div>\n                          ) : (\n                            <span className=\"text-slate-500 italic\">Click to add therapeutic highlights, key moments, insights, breakthroughs, or therapy process notes...</span>\n                          )}\n                        </motion.div>\n                      )}\n                    </motion.div>\n                  </motion.div>\n                )}\n\n                {/* Timeline Tab */}\n                {activeTab === 'timeline' && (\n                  <motion.div\n                    key=\"timeline\"\n                    ref={el => contentRefs.current.timeline = el}\n                    initial={{ opacity: 0, x: -20 }}\n                    animate={{ opacity: 1, x: 0 }}\n                    exit={{ opacity: 0, x: 20 }}\n                    transition={{ duration: 0.3 }}\n                    className=\"h-full\"\n                  >\n                    <VerticalTimeline\n                      data={timelineEntries}\n                      caseId={data?.id}\n                      setMindMapData={setMindMapData}\n                      autoSaveMindMapData={autoSaveMindMapData}\n                      onDataChange={(timelineData) => {\n                        // Handle timeline data changes - the VerticalTimeline handles the save internally\n                        console.log('Timeline data updated:', timelineData);\n                        addToast('Timeline updated successfully', 'success');\n                      }}\n                    />\n                  </motion.div>\n                )}\n\n                {/* Related Tab */}\n                {activeTab === 'related' && (\n                  <motion.div\n                    key=\"related\"\n                    ref={el => contentRefs.current.related = el}\n                    initial={{ opacity: 0, x: -20 }}\n                    animate={{ opacity: 1, x: 0 }}\n                    exit={{ opacity: 0, x: 20 }}\n                    transition={{ duration: 0.3 }}\n                    className=\"h-full overflow-y-auto p-6 space-y-6\"\n                  >\n                    {/* Connected Nodes */}\n                    <motion.div \n                      variants={cardVariants}\n                      initial=\"hidden\"\n                      animate=\"visible\"\n                      className=\"bg-slate-800/50 backdrop-blur-sm rounded-xl p-6 border border-slate-700\"\n                    >\n                      <h3 className=\"text-lg font-semibold text-white mb-4 flex items-center gap-2\">\n                        <Link2 size={20} className=\"text-cyan-400\" />\n                        Connected Nodes\n                      </h3>\n                      \n                      {/* Topics */}\n                      <div className=\"mb-6\">\n                        <h4 className=\"text-md font-medium text-slate-300 mb-3 flex items-center gap-2\">\n                          <Brain size={16} className=\"text-blue-400\" />\n                          Related Topics\n                        </h4>\n                        {connectedNodes.topics.length > 0 ? (\n                          <div className=\"space-y-2\">\n                            {connectedNodes.topics.map((topic, index) => (\n                              <div key={index} className=\"flex items-center gap-3 p-3 bg-blue-600/10 border border-blue-600/20 rounded-lg\">\n                                <Brain size={16} className=\"text-blue-400\" />\n                                <span className=\"text-blue-300\">{topic.title}</span>\n                              </div>\n                            ))}\n                          </div>\n                        ) : (\n                          <p className=\"text-slate-500 italic text-sm\">No connected topics</p>\n                        )}\n                      </div>\n\n                      {/* Literature */}\n                      <div className=\"mb-6\">\n                        <h4 className=\"text-md font-medium text-slate-300 mb-3 flex items-center gap-2\">\n                          <BookOpen size={16} className=\"text-purple-400\" />\n                          Related Literature\n                        </h4>\n                        {connectedNodes.literature.length > 0 ? (\n                          <div className=\"space-y-2\">\n                            {connectedNodes.literature.map((lit, index) => (\n                              <div key={index} className=\"flex items-center gap-3 p-3 bg-purple-600/10 border border-purple-600/20 rounded-lg\">\n                                <BookOpen size={16} className=\"text-purple-400\" />\n                                <span className=\"text-purple-300\">{lit.title}</span>\n                              </div>\n                            ))}\n                          </div>\n                        ) : (\n                          <p className=\"text-slate-500 italic text-sm\">No connected literature</p>\n                        )}\n                      </div>\n\n                      {/* Other Cases */}\n                      <div>\n                        <h4 className=\"text-md font-medium text-slate-300 mb-3 flex items-center gap-2\">\n                          <Users size={16} className=\"text-green-400\" />\n                          Related Cases\n                        </h4>\n                        {connectedNodes.cases.length > 0 ? (\n                          <div className=\"space-y-2\">\n                            {connectedNodes.cases.map((caseNode, index) => (\n                              <div key={index} className=\"flex items-center gap-3 p-3 bg-green-600/10 border border-green-600/20 rounded-lg\">\n                                <Users size={16} className=\"text-green-400\" />\n                                <span className=\"text-green-300\">{caseNode.title}</span>\n                              </div>\n                            ))}\n                          </div>\n                        ) : (\n                          <p className=\"text-slate-500 italic text-sm\">No connected cases</p>\n                        )}\n                      </div>\n\n                      <div className=\"mt-6 p-4 bg-slate-700/20 rounded-lg border border-slate-600\">\n                        <p className=\"text-slate-400 text-sm italic\">\n                          Connected nodes will be automatically populated based on mind map relationships and connections created in the graph view.\n                        </p>\n                      </div>\n                    </motion.div>\n                  </motion.div>\n                )}\n              </AnimatePresence>\n            </motion.div>\n          </motion.div>\n        </motion.div>\n      )}\n    </AnimatePresence>\n  );\n};\n\nexport default CaseModal;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","var getProto = Object.getPrototypeOf ? (obj) => (Object.getPrototypeOf(obj)) : (obj) => (obj.__proto__);\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; (typeof current == 'object' || typeof current == 'function') && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach((key) => (def[key] = () => (value[key])));\n\t}\n\tdef['default'] = () => (value);\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = (chunkId) => {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce((promises, key) => {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks\n__webpack_require__.u = (chunkId) => {\n\t// return url for filenames based on template\n\treturn \"static/js/\" + chunkId + \".\" + {\"213\":\"953ef4c7\",\"261\":\"de3004f3\",\"524\":\"7d493d91\"}[chunkId] + \".chunk.js\";\n};","// This function allow to reference async chunks\n__webpack_require__.miniCssF = (chunkId) => {\n\t// return url for filenames based on template\n\treturn undefined;\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","var inProgress = {};\nvar dataWebpackPrefix = \"frontend:\";\n// loadScript function to load a script via script tag\n__webpack_require__.l = (url, done, key, chunkId) => {\n\tif(inProgress[url]) { inProgress[url].push(done); return; }\n\tvar script, needAttach;\n\tif(key !== undefined) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tfor(var i = 0; i < scripts.length; i++) {\n\t\t\tvar s = scripts[i];\n\t\t\tif(s.getAttribute(\"src\") == url || s.getAttribute(\"data-webpack\") == dataWebpackPrefix + key) { script = s; break; }\n\t\t}\n\t}\n\tif(!script) {\n\t\tneedAttach = true;\n\t\tscript = document.createElement('script');\n\n\t\tscript.charset = 'utf-8';\n\t\tscript.timeout = 120;\n\t\tif (__webpack_require__.nc) {\n\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n\t\t}\n\t\tscript.setAttribute(\"data-webpack\", dataWebpackPrefix + key);\n\n\t\tscript.src = url;\n\t}\n\tinProgress[url] = [done];\n\tvar onScriptComplete = (prev, event) => {\n\t\t// avoid mem leaks in IE.\n\t\tscript.onerror = script.onload = null;\n\t\tclearTimeout(timeout);\n\t\tvar doneFns = inProgress[url];\n\t\tdelete inProgress[url];\n\t\tscript.parentNode && script.parentNode.removeChild(script);\n\t\tdoneFns && doneFns.forEach((fn) => (fn(event)));\n\t\tif(prev) return prev(event);\n\t}\n\tvar timeout = setTimeout(onScriptComplete.bind(null, undefined, { type: 'timeout', target: script }), 120000);\n\tscript.onerror = onScriptComplete.bind(null, script.onerror);\n\tscript.onload = onScriptComplete.bind(null, script.onload);\n\tneedAttach && document.head.appendChild(script);\n};","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","__webpack_require__.p = \"./\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t792: 0\n};\n\n__webpack_require__.f.j = (chunkId, promises) => {\n\t\t// JSONP chunk loading for javascript\n\t\tvar installedChunkData = __webpack_require__.o(installedChunks, chunkId) ? installedChunks[chunkId] : undefined;\n\t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n\t\t\t// a Promise means \"currently loading\".\n\t\t\tif(installedChunkData) {\n\t\t\t\tpromises.push(installedChunkData[2]);\n\t\t\t} else {\n\t\t\t\tif(true) { // all chunks have JS\n\t\t\t\t\t// setup Promise in chunk cache\n\t\t\t\t\tvar promise = new Promise((resolve, reject) => (installedChunkData = installedChunks[chunkId] = [resolve, reject]));\n\t\t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n\t\t\t\t\t// start chunk loading\n\t\t\t\t\tvar url = __webpack_require__.p + __webpack_require__.u(chunkId);\n\t\t\t\t\t// create error before stack unwound to get useful stacktrace later\n\t\t\t\t\tvar error = new Error();\n\t\t\t\t\tvar loadingEnded = (event) => {\n\t\t\t\t\t\tif(__webpack_require__.o(installedChunks, chunkId)) {\n\t\t\t\t\t\t\tinstalledChunkData = installedChunks[chunkId];\n\t\t\t\t\t\t\tif(installedChunkData !== 0) installedChunks[chunkId] = undefined;\n\t\t\t\t\t\t\tif(installedChunkData) {\n\t\t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n\t\t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n\t\t\t\t\t\t\t\terror.message = 'Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')';\n\t\t\t\t\t\t\t\terror.name = 'ChunkLoadError';\n\t\t\t\t\t\t\t\terror.type = errorType;\n\t\t\t\t\t\t\t\terror.request = realSrc;\n\t\t\t\t\t\t\t\tinstalledChunkData[1](error);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t\t__webpack_require__.l(url, loadingEnded, \"chunk-\" + chunkId, chunkId);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n};\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkfrontend\"] = self[\"webpackChunkfrontend\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [967,497,96], () => (__webpack_require__(964)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["sampleVerticalTimelineData","id","timestamp","date","title","type","patientData","chiefComplaint","currentStatus","notes","clinicalData","SimpleGSAPTest","boxRef","useRef","useEffect","current","gsap","to","duration","x","rotation","backgroundColor","repeat","yoyo","_jsxs","className","children","_jsx","ref","backdropVariants","hidden","opacity","backdropFilter","visible","transition","ease","exit","modalVariants","scale","y","rotate","stiffness","damping","_ref","isOpen","onClose","data","onNodeClick","onNodeHover","isClosing","setIsClosing","useState","handleClose","useCallback","setTimeout","handleNodeClick","node","console","log","handleNodeHover","isHovering","AnimatePresence","mode","onExitComplete","motion","div","initial","animate","variants","style","willChange","backfaceVisibility","transform","onClick","e","target","currentTarget","stopPropagation","Clock","Users","length","Activity","button","whileHover","whileTap","X","height","VerticalTimeline","TimelineTestPage","isLoading","setIsLoading","showSimpleTest","setShowSimpleTest","showTimelineModal","setShowTimelineModal","timer","clearTimeout","TimelineModal","LoadingSpinner","message","Loader2","LazyRichTextEditor","lazy","LazyTemplateManager","LazyLiteratureModal","LazyCaseModal","LazyTopicModal","LazyTaskModal","withLazyLoading","LazyComponent","fallbackMessage","props","Suspense","fallback","LiteratureModal","getIntersectionPoint","rect","center","point","rectX","rectY","width","centerX","centerY","pointX","pointY","left","right","top","bottom","dx","dy","Math","abs","side","slope","yIntercept","intersections","leftY","push","distance","hypot","rightY","topX","bottomX","validIntersections","filter","intersection","intersectionDx","intersectionDy","sort","a","b","FloatingEdge","memo","_sourceNode","_targetNode","_sourceNode2","_sourceNode3","_targetNode2","_targetNode3","source","sourceX","sourceY","targetX","targetY","sourcePosition","targetPosition","markerEnd","markerStart","getNode","useReactFlow","sourceNode","targetNode","error","edgePath","labelX","labelY","useMemo","__isAnimating","__forceUpdate","_sourceNode$dimension","_sourceNode$data","_sourceNode$style","_targetNode$dimension","_targetNode$data","_targetNode$style","_sourceNode$positionA","_sourceNode$positionA2","_targetNode$positionA","_targetNode$positionA2","sourceHasDimensions","Boolean","dimensions","targetHasDimensions","getNodeDimensions","_node$dimensions","_node$data","_node$dimensions2","_node$data2","defaultWidth","defaultHeight","sourceDims","targetDims","floatingEdgeData","options","arguments","undefined","sourceWidth","sourceHeight","targetWidth","targetHeight","offset","sourceSide","targetSide","sourceCenter","targetCenter","sourceRect","targetRect","sourceIntersection","targetIntersection","sqrt","unitX","unitY","extensionAmount","debug","getFloatingEdgePath","positionAbsolute","position","sx","sy","tx","ty","warn","edgeStyle","getEdgeStyle","defaultStyle","stroke","strokeWidth","strokeLinecap","strokeOpacity","sourceType","targetType","strokeDasharray","_Fragment","x1","y1","x2","y2","stopColor","selected","BaseEdge","path","prevProps","nextProps","_prevProps$data","_nextProps$data","EnhancedEdge","label","sourceHandleId","targetHandleId","animated","getBezierPath","isSelected","sourceNodeType","split","targetNodeType","EdgeLabelRenderer","fontSize","pointerEvents","displayName","fromX","fromY","toX","toY","connectionLineStyle","animation","d","fill","progress","Brain","Sparkles","max","min","isVisible","setIsVisible","skipAnimation","isHovered","setIsHovered","completionPercentage","flashcard_count","completed_flashcards","primaryColor","color","secondaryColor","getSecondaryColor","borderRadius","background","boxShadow","display","flexDirection","justifyContent","alignItems","padding","onMouseEnter","onMouseLeave","Handle","Position","Top","zIndex","border","isConnectable","Right","Bottom","Left","priority","size","category","onDelete","preventDefault","deleteTimeout","onDoubleClick","viewBox","cx","cy","r","strokeDashoffset","textAnchor","fontWeight","round","tags","Tag","updated_at","nodeTypes","topic","TopicNode","case","getStatusColor","status","urgency","_data$chief_complaint","_data$diagnosis","complaint","chief_complaint","toLowerCase","diagnosis","some","keyword","includes","getUrgencyLevel","statusGradient","getStatusGradient","AlertCircle","linked_topics","age","Calendar","replace","tasks_count","CheckSquare","completed_tasks","task","minWidth","maxWidth","getPriorityAccent","due_date","Date","toLocaleDateString","literature","borderTop","borderImage","overflow","clickTimeout","onLiteratureClick","BookOpen","authors","year","sampleLiteratureData","journal","volume","pages","doi","abstract","keywords","pdf_url","sampleConnections","populateSampleLiteratureData","setMindMapData","autoSaveMindMapData","addToast","prevData","existingIds","Set","map","item","newLiterature","has","existingCaseIds","cases","existingTopicIds","topics","newCases","primary_diagnosis","secondary_diagnoses","newTopics","existingConnectionIds","connections","conn","newConnections","updatedData","loadD3Force","API","process","originalError","_len2","args","Array","_key2","Toast","success","info","saving","getIcon","CheckCircle2","Info","LoadingButton","_ref2","loading","disabled","icon","Icon","STORAGE_KEY","localStorageUtils","save","timeoutId","onSaveStart","onSaveComplete","isAnimating","storageData","version","toISOString","localStorage","setItem","JSON","stringify","name","removeItem","clearError","load","stored","getItem","parse","clear","getStorageInfo","Blob","EdgeLabelModal","_ref7","edge","onSave","setLabel","handleSave","value","onChange","onKeyPress","key","placeholder","autoFocus","Save","DashboardComponent","_caseModal$data2","_topicModal$data2","_taskModal$data2","_caseModal$data3","_topicModal$data3","_taskModal$data3","fitView","setCenter","zoomTo","getViewport","nodes","setNodes","onNodesChange","useNodesState","edges","setEdges","onEdgesChange","useEdgesState","nodeUpdateTrigger","setNodeUpdateTrigger","mindMapData","tasks","isEditing","setIsEditing","selectedNode","setSelectedNode","setLoading","loadingProgress","setLoadingProgress","loadingMessage","setLoadingMessage","isInitialLoad","setIsInitialLoad","focusedCategory","setFocusedCategory","showNodeSelector","setShowNodeSelector","caseModal","setCaseModal","topicModal","setTopicModal","taskModal","setTaskModal","caseModalStableData","topicModalStableData","taskModalStableData","isReactFlowReady","setIsReactFlowReady","hasAppliedInitialLayout","setHasAppliedInitialLayout","isExportingCSV","setIsExportingCSV","lastSaved","setLastSaved","isSaving","setIsSaving","edgeModal","setEdgeModal","toasts","setToasts","literatureModal","setLiteratureModal","setIsAnimating","modalAnimationStates","setModalAnimationStates","newToast","now","prev","removeToast","toast","_caseModal$data","_topicModal$data","_taskModal$data","anyModalOpen","anyModalAnimating","Object","values","state","anyModalTransitioning","isTabTransitioning","window","requestIdleCallback","saveToBackend","timeout","positionBackendSaveTimeout","handleDeleteNode","fullNodeId","nodeType","idParts","nodeId","join","collectionKey","updatedCollection","String","updatedConnections","newData","charAt","toUpperCase","slice","nds","eds","handleLiteratureClick","literatureData","syncNodeData","currentNodes","hasChanges","updatedNodes","newLabel","newColor","needsUpdate","_mindMapData$cases","caseData","find","c","expectedLabel","primaryDiagnosis","_mindMapData$topics","topicData","t","expectedColor","_mindMapData$tasks","taskData","_mindMapData$literatu","l","lastUpdated","_mindMapData$cases2","_mindMapData$topics2","_mindMapData$tasks2","_mindMapData$literatu2","convertDataToReactFlow","async","applyLayoutImmediately","allItems","layoutNodes","hasExistingPositions","forceSimulation","forceManyBody","forceLink","forceCenter","forceCollide","simulationNodes","index","_item$position","_item$position2","random","d3Edges","nodeIds","n","simulation","force","strength","distanceMax","innerWidth","innerHeight","radius","stop","i","tick","positionMap","Map","forEach","set","get","quickNodes","nodeData","initialPresentation","initial_presentation","currentPresentation","current_presentation","medicationHistory","medication_history","therapyProgress","therapy_progress","defensePatterns","defense_patterns","clinicalReflection","clinical_reflection","gridSize","ceil","nodeSpacing","offsetY","floor","optimizedEdges","createOptimizedEdges","nodeIdSet","updatable","cleanData","_topic$position","_topic$position2","description","Number","resources","isArray","created_at","caseItem","_caseItem$position","_caseItem$position2","case_id","encounter_date","gender","history_present_illness","medical_history","medications","mental_status_exam","assessment_plan","_task$position","_task$position2","linked_case_id","linked_topic_id","lit","_lit$position","_lit$position2","publication","pdf_path","response","axios","put","headers","err","_err$response","_err$response2","_err$response3","_err$response3$data","detail","onConnect","params","edgeId","newEdge","interactionWidth","addEdge","event","onNodeDoubleClick","parts","dataItem","onEdgeDoubleClick","onEdgeContextMenu","handleSaveEdgeLabel","onEdgeMouseEnter","onEdgeMouseLeave","forceLayout","currentEdges","validEdges","fx","fy","ticksPerFrame","totalTicks","currentTick","runSimulationChunk","remainingTicks","requestAnimationFrame","simNode","currentData","_updatedData$key","applyForceLayout","handleClearMap","confirm","empty","addNewNode","_mindMapData$topics3","_mindMapData$cases3","_mindMapData$tasks3","_mindMapData$literatu3","dataId","currentDataCount","gridPosition","newNode","dataToAdd","concat","handleNodesChange","changes","positionChanges","change","_updatedData$key2","handleNodeDragStop","dragSaveTimeout","loadMindMapData","local","backendError","nodeMatchesSearch","query","searchTerm","trim","hasMatch","handleKeyDown","_document$querySelect","tagName","ctrlKey","metaKey","document","querySelector","focus","addEventListener","removeEventListener","styleSheet","getElementById","createElement","head","appendChild","textContent","OptimizedLoadingScreen","CheckCircle","toLocaleTimeString","Cloud","Shuffle","Trash2","Eye","ReactFlowErrorBoundary","ReactFlow","onNodeDragStop","edgeTypes","floating","enhanced","connectionLineComponent","ConnectionLine","nodesDraggable","nodesConnectable","elementsSelectable","onInit","reactFlowInstance","onError","snapToGrid","snapGrid","elevateEdgesOnSelect","defaultEdgeOptions","Background","gap","Controls","MiniMap","onAnimationStart","onAnimationEnd","allNodes","CaseModal","TopicModal","forceNodeUpdate","TaskModal","React","constructor","super","this","hasError","getDerivedStateFromError","componentDidCatch","errorInfo","render","location","reload","Dashboard","ReactFlowProvider","URLSearchParams","search","ReactDOM","App","onDataChange","caseId","hoveredNode","setHoveredNode","editingCards","setEditingCards","cardTexts","setCardTexts","isDragging","setIsDragging","isAnimatingNewNode","setIsAnimatingNewNode","scrollProgress","setScrollProgress","timelineRef","nodeRefs","pathRefs","dragState","draggedNodeId","scrollContainerRef","saveTimeoutRef","NODE_SPACING","TIMELINE_WIDTH","CENTER_X","CARD_WIDTH","CARD_OFFSET","PATH_ANIMATION_EASE","scrollToNode","container","clientHeight","scrollTo","behavior","scrollToTop","scrollToBottom","scrollHeight","scrollToLatestNode","latestNode","refreshScrollContainer","scrollTop","maxScroll","totalHeight","validYPositions","maxY","spacingBasedHeight","positionBasedHeight","scrollContainer","handleScroll","passive","initialPositions","saveTimelineData","timelineData","_cardTexts$node$id","_node$patientData","_cardTexts$node$id2","_node$clinicalData","_cardTexts$node$id3","_cardTexts$node$id4","_cardTexts$node$id5","_node$patientData2","_cardTexts$node$id6","_node$clinicalData2","orderIndex","patient_narrative","patient","clinical_notes","clinical","content","symptoms","updatedCases","timeline","last_updated","standaloneData","_cardTexts$node$id7","_node$patientData3","_cardTexts$node$id8","_node$clinicalData3","triggerAutoSave","loadTimelineData","timelineNodes","entry","baseY","_entry$patientData","_entry$clinicalData","originalY","savedData","parsedData","initialNodes","_item$patientData","_item$patientData2","_item$clinicalData","_item$clinicalData2","updateConnectionPaths","draggedPosition","_initialPositions$cur","draggedIndex","connectionsToUpdate","prevNode","nextNode","connection","pathRef","pathD","attr","handleMouseDown","_timelineRef$current","currentNodeRef","getBoundingClientRect","initialPos","clientX","clientY","handleMouseMove","moveEvent","_timelineRef$current2","mouseX","mouseY","constrainedX","constrainedY","prevNodes","handleMouseUp","upEvent","_timelineRef$current3","fromTo","finalX","finalY","handleTextChange","cardType","newText","handleClickOutside","shouldShowCards","_editingCards$nodeId","_editingCards$nodeId2","editingState","handleAddNode","newNodeId","newIndex","newNodeData","newNodeElement","scrollIntoView","block","inline","handleResetLayout","resetNode","nodeElement","patientCard","clinicalCard","handleManualSave","delay","strokeLinejoin","maxHeight","isClickOnCard","closest","isClickOnNode","isClickOnButton","minHeight","stdDeviation","result","in","in2","operator","prevConnectionId","nextConnectionId","connectionKey","el","transformOrigin","pathLength","_node$patientData4","_editingCards$node$id","_editingCards$node$id2","_cardTexts$node$id9","_cardTexts$node$id0","_cardTexts$node$id1","_cardTexts$node$id10","_editingCards$node$id3","_editingCards$node$id4","_cardTexts$node$id11","_cardTexts$node$id12","_cardTexts$node$id13","_cardTexts$node$id14","onMouseDown","nodeEl","fillRule","clipRule","borderLeft","month","day","hour","minute","onBlur","backgroundImage","jsx","contentVariants","cardVariants","edit","saved","_sectionData$title","_sectionData$definiti","_sectionData$diagnost","_sectionData$psychoth","editData","setEditData","hasInitialized","setHasInitialized","activeTab","setActiveTab","setIsTabTransitioning","editingSections","setEditingSections","sectionData","setSectionData","scrollPositions","setScrollPositions","contentRefs","expandedCriteria","setExpandedCriteria","newTags","setNewTags","newResource","setNewResource","showResourceForm","setShowResourceForm","categoryColors","primary","secondary","tabs","Stethoscope","Pill","Link2","initialData","definition","diagnostic_criteria","comorbidities","differential_diagnoses","psychotherapy_modalities","prevEditData","progressPercentage","total","completed","saveScrollPosition","updatedTopics","tabId","contentRef","restoreScrollPosition","savedPosition","handleTabSwitch","newTabId","handleCategoryChange","_categoryColors$newCa","newCategory","Other","updatedEditData","startEditingSection","sectionId","cancelEditingSection","saveSectionEdit","sectionChanges","updateSectionField","field","setNewTag","tag","_sectionData$sectionI","currentTags","tagToRemove","_sectionData$sectionI2","getNewTag","clearNewTag","addItemDirectly","currentItems","updatedItems","removeItemDirectly","itemToRemove","onAnimationComplete","layoutId","overview","Edit3","h1","select","whileFocus","keys","toLocaleString","concept","rows","FileText","ChevronDown","ChevronRight","criteria","comorbidity","Plus","treatment","medication","modality","_priorityConfig$editD","priorityConfig","low","Flag","medium","high","urgent","AlertTriangle","statusConfig","pending","in_progress","Play","paused","Pause","isOverdue","updatedTasks","handleDelete","handleStatusChange","newStatus","updateField","renderField","choices","choice","Infinity","TrendingUp","bounce","layout","layoutRoot","Target","entries","_ref3","config","isActive","_prevProps$data2","_nextProps$data2","_sectionData$basic_in","_sectionData$basic_in2","_sectionData$narrativ","_sectionData$therapeu","newMedication","setNewMedication","dosage","frequency","effect","showMedicationForm","setShowMedicationForm","narrative_summary","therapeutic_highlights","toggleEditSection","updateSectionData","cancelEdit","saveSection","addMedication","updatedMedications","dateAdded","removeMedication","medicationId","med","timelineEntries","debouncedTimelineSave","debounce","func","_len","_key","apply","updatedTimeline","retryCount","validatedTimeline","connectedNodes","skipped","basic_info","narrative","therapy","related","caseNode","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","loaded","__webpack_modules__","m","deferred","O","chunkIds","fn","notFulfilled","fulfilled","j","every","splice","leafPrototypes","getProto","getPrototypeOf","obj","__esModule","then","ns","create","def","indexOf","getOwnPropertyNames","o","defineProperty","enumerable","f","chunkId","Promise","all","reduce","promises","u","miniCssF","g","globalThis","Function","prop","prototype","hasOwnProperty","call","inProgress","dataWebpackPrefix","url","done","script","needAttach","scripts","getElementsByTagName","s","getAttribute","charset","nc","setAttribute","src","onScriptComplete","onerror","onload","doneFns","parentNode","removeChild","bind","Symbol","toStringTag","nmd","paths","p","installedChunks","installedChunkData","promise","resolve","reject","Error","errorType","realSrc","request","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","chunkLoadingGlobal","self","__webpack_exports__"],"sourceRoot":""}