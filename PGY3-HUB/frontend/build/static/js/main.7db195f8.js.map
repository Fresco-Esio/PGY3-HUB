{"version":3,"file":"static/js/main.7db195f8.js","mappings":"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","sources":["components/LazyComponents.js","components/CaseModal.js","components/TopicModal.js","components/TaskModal.js","utils/floatingEdgeUtils.js","components/FloatingEdge.js","components/EnhancedEdge.js","components/ConnectionLine.js","components/OptimizedLoadingScreen.js","utils/performanceUtils.js","data/sampleLiteratureData.js","utils/sampleDataUtils.js","App.js","index.js","../webpack/bootstrap","../webpack/runtime/chunk loaded","../webpack/runtime/create fake namespace object","../webpack/runtime/define property getters","../webpack/runtime/ensure chunk","../webpack/runtime/get javascript chunk filename","../webpack/runtime/get mini-css chunk filename","../webpack/runtime/global","../webpack/runtime/hasOwnProperty shorthand","../webpack/runtime/load script","../webpack/runtime/make namespace object","../webpack/runtime/node module decorator","../webpack/runtime/publicPath","../webpack/runtime/jsonp chunk loading","../webpack/startup"],"sourcesContent":["// Lazy loading component wrapper for performance optimization\nimport React, { Suspense, lazy } from 'react';\nimport { Loader2 } from 'lucide-react';\n\n// Loading fallback component\nconst LoadingSpinner = ({ message = \"Loading...\" }) => (\n  <div className=\"flex items-center justify-center p-8\">\n    <div className=\"flex flex-col items-center gap-2\">\n      <Loader2 className=\"w-6 h-6 animate-spin text-blue-600\" />\n      <span className=\"text-sm text-gray-600\">{message}</span>\n    </div>\n  </div>\n);\n\n// Lazy load components that aren't needed immediately\nexport const LazyRichTextEditor = lazy(() => import('./RichTextEditor'));\nexport const LazyTemplateManager = lazy(() => import('./TemplateManager'));\nexport const LazyLiteratureModal = lazy(() => import('./LiteratureModal'));\n\n// HOC for wrapping lazy components with suspense\nexport const withLazyLoading = (LazyComponent, fallbackMessage) => (props) => (\n  <Suspense fallback={<LoadingSpinner message={fallbackMessage} />}>\n    <LazyComponent {...props} />\n  </Suspense>\n);\n\n// Pre-wrapped components ready to use\nexport const RichTextEditor = withLazyLoading(LazyRichTextEditor, \"Loading editor...\");\nexport const TemplateManager = withLazyLoading(LazyTemplateManager, \"Loading templates...\");\nexport const LiteratureModal = withLazyLoading(LazyLiteratureModal, \"Loading literature viewer...\");\n","// Enhanced Case Modal with tabbed interface and advanced animations\nimport React, { useState, useEffect, useMemo, useCallback, useRef } from 'react';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport { \n  X, \n  Users, \n  FileText, \n  Pill, \n  Brain, \n  Link2,\n  Edit3,\n  Trash2,\n  Save,\n  Loader2,\n  Plus,\n  Check,\n  Calendar,\n  Clock,\n  AlertCircle,\n  BookOpen,\n  Target,\n  Heart,\n  ChevronDown,\n  ChevronRight,\n  Activity\n} from 'lucide-react';\n\n// Animation variants for Framer Motion\nconst modalVariants = {\n  hidden: {\n    opacity: 0,\n    scale: 0.3,\n    y: 50,\n    rotate: -5,\n  },\n  visible: {\n    opacity: 1,\n    scale: 1,\n    y: 0,\n    rotate: 0,\n    transition: {\n      type: \"spring\",\n      damping: 25,\n      stiffness: 300,\n      duration: 0.6,\n    }\n  },\n  exit: {\n    opacity: 0,\n    scale: 0.7,\n    y: 30,\n    rotate: -3,\n    transition: {\n      type: \"easeInOut\",\n      duration: 0.4,\n    }\n  }\n};\n\nconst backdropVariants = {\n  hidden: { \n    opacity: 0,\n    backdropFilter: 'blur(0px)'\n  },\n  visible: { \n    opacity: 1,\n    backdropFilter: 'blur(8px)',\n    transition: {\n      duration: 0.4,\n      ease: \"easeOut\"\n    }\n  },\n  exit: { \n    opacity: 0,\n    backdropFilter: 'blur(0px)',\n    transition: {\n      duration: 0.3,\n      ease: \"easeIn\"\n    }\n  }\n};\n\nconst contentVariants = {\n  hidden: {\n    opacity: 0,\n    y: 20,\n    scale: 0.95,\n  },\n  visible: {\n    opacity: 1,\n    y: 0,\n    scale: 1,\n    transition: {\n      type: \"easeOut\",\n      duration: 0.3,\n      delay: 0.1,\n    }\n  },\n  exit: {\n    opacity: 0,\n    y: -10,\n    scale: 1.02,\n    transition: {\n      type: \"easeIn\",\n      duration: 0.2,\n    }\n  }\n};\n\n// Card animation variants for sections\nconst cardVariants = {\n  hidden: { opacity: 0, y: 20, scale: 0.95 },\n  visible: { \n    opacity: 1, \n    y: 0, \n    scale: 1,\n    transition: {\n      duration: 0.4,\n      ease: \"easeOut\"\n    }\n  },\n  edit: { \n    scale: 1.02,\n    boxShadow: \"0 8px 25px rgba(59, 130, 246, 0.15)\",\n    transition: {\n      duration: 0.3,\n      ease: \"easeOut\"\n    }\n  },\n  saved: {\n    scale: 1,\n    boxShadow: \"0 4px 15px rgba(34, 197, 94, 0.15)\",\n    transition: {\n      duration: 0.3,\n      ease: \"easeOut\"\n    }\n  }\n};\n\nconst CaseModal = ({ \n  isOpen, \n  data, \n  onClose,\n  onAnimationStart,\n  onAnimationEnd,\n  setMindMapData,\n  autoSaveMindMapData,\n  addToast\n}) => {\n  const [isAnimating, setIsAnimating] = useState(false);\n  const [isVisible, setIsVisible] = useState(false);\n  const [isClosing, setIsClosing] = useState(false);\n  const [editData, setEditData] = useState({});\n  const [isLoading, setIsLoading] = useState(false);\n  const [hasInitialized, setHasInitialized] = useState(false);\n  const [activeTab, setActiveTab] = useState('overview');\n  const [isTabTransitioning, setIsTabTransitioning] = useState(false);\n  \n  // Individual section edit states\n  const [editingSections, setEditingSections] = useState({});\n  const [sectionData, setSectionData] = useState({});\n  \n  // Tab-specific scroll positions\n  const [scrollPositions, setScrollPositions] = useState({});\n  const contentRefs = useRef({});\n  \n  // Form states for different tabs\n  const [newMedication, setNewMedication] = useState({ name: '', dosage: '', frequency: '', effect: '' });\n  const [showMedicationForm, setShowMedicationForm] = useState(false);\n  \n  // Timeline-specific states\n  const [newTimelineEntry, setNewTimelineEntry] = useState({ \n    type: 'Assessment', \n    timestamp: new Date().toISOString().slice(0, 16), \n    content: '', \n    author: 'Current User' \n  });\n  const [showTimelineForm, setShowTimelineForm] = useState(false);\n  const [editingTimelineEntry, setEditingTimelineEntry] = useState(null);\n  const timelineRef = useRef(null);\n\n  useEffect(() => {\n    if (isOpen && data && !hasInitialized) {\n      setIsVisible(true);\n      const initialData = { \n        ...data,\n        narrative_summary: data.narrative_summary || '',\n        medications: data.medications || [],\n        therapeutic_highlights: data.therapeutic_highlights || '',\n        timeline: data.timeline || [],\n        last_updated: data.last_updated || new Date().toISOString()\n      };\n      setEditData(initialData);\n      setHasInitialized(true);\n      setIsAnimating(true);\n      if (onAnimationStart) onAnimationStart();\n      \n      setTimeout(() => {\n        setIsAnimating(false);\n        if (onAnimationEnd) onAnimationEnd();\n      }, 600);\n    } else if (!isOpen && hasInitialized) {\n      setHasInitialized(false);\n      setScrollPositions({});\n      setEditingSections({});\n      setSectionData({});\n    }\n  }, [isOpen, data, hasInitialized, onAnimationStart, onAnimationEnd]);\n\n  // Enhanced effect for instant feedback - updates editData immediately when data changes\n  useEffect(() => {\n    if (isOpen && data && hasInitialized) {\n      // Update editData with latest data for instant feedback\n      setEditData(prevEditData => {\n        const updatedData = { \n          ...prevEditData, // Keep any local edits\n          ...data, // Override with latest data from parent\n        };\n        return updatedData;\n      });\n    }\n  }, [data, isOpen, hasInitialized]);\n\n  const handleClose = useCallback(() => {\n    if (isAnimating || isClosing) return;\n    \n    setIsAnimating(true);\n    setIsClosing(true);\n    if (onAnimationStart) onAnimationStart();\n    \n    // Set visibility to false to trigger exit animation\n    setIsVisible(false);\n  }, [onAnimationStart, isAnimating, isClosing]);\n\n  const handleSave = useCallback(async () => {\n    if (isLoading) return;\n    \n    setIsLoading(true);\n    try {\n      const updatedData = {\n        ...editData,\n        last_updated: new Date().toISOString()\n      };\n      \n      setMindMapData(prevData => {\n        const updatedCases = prevData.cases.map(caseItem =>\n          String(caseItem.id) === String(data?.id) ? { ...caseItem, ...updatedData } : caseItem\n        );\n        const newData = { ...prevData, cases: updatedCases };\n        autoSaveMindMapData(newData);\n        return newData;\n      });\n      \n      setEditData(updatedData);\n      addToast('Case updated successfully', 'success');\n    } catch (error) {\n      console.error('Error saving case:', error);\n      addToast('Failed to save case', 'error');\n    } finally {\n      setIsLoading(false);\n    }\n  }, [data?.id, editData, setMindMapData, autoSaveMindMapData, addToast, isLoading]);\n\n  // Save current tab's scroll position before switching\n  const saveScrollPosition = useCallback((tabId) => {\n    const contentRef = contentRefs.current[tabId];\n    if (contentRef) {\n      setScrollPositions(prev => ({\n        ...prev,\n        [tabId]: contentRef.scrollTop\n      }));\n    }\n  }, []);\n\n  // Restore scroll position when switching to a tab\n  const restoreScrollPosition = useCallback((tabId) => {\n    setTimeout(() => {\n      const contentRef = contentRefs.current[tabId];\n      const savedPosition = scrollPositions[tabId];\n      if (contentRef && savedPosition) {\n        contentRef.scrollTop = savedPosition;\n      }\n    }, 100); // Small delay to ensure content is rendered\n  }, [scrollPositions]);\n\n  // Handle tab switching with scroll position preservation\n  const handleTabSwitch = useCallback((newTabId) => {\n    if (newTabId === activeTab || isTabTransitioning) return;\n    \n    // Save current tab's scroll position\n    saveScrollPosition(activeTab);\n    \n    setIsTabTransitioning(true);\n    setActiveTab(newTabId);\n    \n    setTimeout(() => {\n      setIsTabTransitioning(false);\n      // Restore new tab's scroll position\n      restoreScrollPosition(newTabId);\n    }, 300);\n  }, [activeTab, isTabTransitioning, saveScrollPosition, restoreScrollPosition]);\n\n  const handleDelete = useCallback(async () => {\n    if (isLoading) return;\n    \n    if (!window.confirm('Are you sure you want to delete this case?')) return;\n    \n    setIsLoading(true);\n    try {\n      setMindMapData(prevData => {\n        const updatedCases = prevData.cases.filter(caseItem => String(caseItem.id) !== String(data?.id));\n        const newData = { ...prevData, cases: updatedCases };\n        autoSaveMindMapData(newData);\n        return newData;\n      });\n      \n      addToast('Case deleted successfully', 'success');\n      handleClose();\n    } catch (error) {\n      console.error('Error deleting case:', error);\n      addToast('Failed to delete case', 'error');\n    } finally {\n      setIsLoading(false);\n    }\n  }, [data?.id, setMindMapData, autoSaveMindMapData, addToast, handleClose, isLoading]);\n\n  // Individual section edit functions\n  const startEditingSection = useCallback((sectionId) => {\n    setEditingSections(prev => ({ ...prev, [sectionId]: true }));\n    // Initialize section data with current values\n    setSectionData(prev => ({\n      ...prev,\n      [sectionId]: { ...editData }\n    }));\n  }, [editData]);\n\n  const cancelEditingSection = useCallback((sectionId) => {\n    setEditingSections(prev => ({ ...prev, [sectionId]: false }));\n    setSectionData(prev => {\n      const newData = { ...prev };\n      delete newData[sectionId];\n      return newData;\n    });\n  }, []);\n\n  const saveSectionEdit = useCallback(async (sectionId) => {\n    if (isLoading) return;\n    \n    const sectionChanges = sectionData[sectionId];\n    if (!sectionChanges) return;\n    \n    setIsLoading(true);\n    try {\n      const updatedData = {\n        ...editData,\n        ...sectionChanges,\n        last_updated: new Date().toISOString()\n      };\n      \n      // Update editData immediately for instant feedback\n      setEditData(updatedData);\n      \n      setMindMapData(prevData => {\n        const updatedCases = prevData.cases.map(caseItem =>\n          String(caseItem.id) === String(data?.id) ? { ...caseItem, ...updatedData } : caseItem\n        );\n        const newData = { ...prevData, cases: updatedCases };\n        autoSaveMindMapData(newData);\n        return newData;\n      });\n      \n      setEditingSections(prev => ({ ...prev, [sectionId]: false }));\n      setSectionData(prev => {\n        const newData = { ...prev };\n        delete newData[sectionId];\n        return newData;\n      });\n      \n      addToast('Section updated successfully', 'success');\n    } catch (error) {\n      console.error('Error saving section:', error);\n      addToast('Failed to save section', 'error');\n    } finally {\n      setIsLoading(false);\n    }\n  }, [sectionData, editData, data?.id, setMindMapData, autoSaveMindMapData, addToast, isLoading]);\n\n  const updateSectionField = useCallback((sectionId, field, value) => {\n    setSectionData(prev => ({\n      ...prev,\n      [sectionId]: {\n        ...prev[sectionId],\n        [field]: value\n      }\n    }));\n  }, []);\n\n  // Medication management functions\n  const addMedication = useCallback(() => {\n    if (!newMedication.name.trim()) return;\n    \n    const updatedMedications = [...(editData.medications || []), { \n      id: Date.now(),\n      ...newMedication,\n      dateAdded: new Date().toISOString()\n    }];\n    \n    const updatedData = {\n      ...editData,\n      medications: updatedMedications,\n      last_updated: new Date().toISOString()\n    };\n    \n    setEditData(updatedData);\n    \n    setMindMapData(prevData => {\n      const updatedCases = prevData.cases.map(caseItem =>\n        String(caseItem.id) === String(data?.id) ? { ...caseItem, ...updatedData } : caseItem\n      );\n      const newData = { ...prevData, cases: updatedCases };\n      autoSaveMindMapData(newData);\n      return newData;\n    });\n    \n    setNewMedication({ name: '', dosage: '', frequency: '', effect: '' });\n    setShowMedicationForm(false);\n    addToast('Medication added successfully', 'success');\n  }, [newMedication, editData, data?.id, setMindMapData, autoSaveMindMapData, addToast]);\n\n  const removeMedication = useCallback((medicationId) => {\n    const updatedMedications = (editData.medications || []).filter(med => med.id !== medicationId);\n    const updatedData = {\n      ...editData,\n      medications: updatedMedications,\n      last_updated: new Date().toISOString()\n    };\n    \n    setEditData(updatedData);\n    \n    setMindMapData(prevData => {\n      const updatedCases = prevData.cases.map(caseItem =>\n        String(caseItem.id) === String(data?.id) ? { ...caseItem, ...updatedData } : caseItem\n      );\n      const newData = { ...prevData, cases: updatedCases };\n      autoSaveMindMapData(newData);\n      return newData;\n    });\n    \n    addToast('Medication removed successfully', 'success');\n  }, [editData, data?.id, setMindMapData, autoSaveMindMapData, addToast]);\n\n  // Timeline management functions\n  const getTimelineEntryColor = useCallback((type) => {\n    const colors = {\n      'Assessment': 'border-green-500',\n      'Medication': 'border-blue-500', \n      'Therapy': 'border-purple-500',\n      'Follow-up': 'border-orange-500',\n      'Note': 'border-gray-500'\n    };\n    return colors[type] || 'border-gray-500';\n  }, []);\n\n  const addTimelineEntry = useCallback(() => {\n    if (!newTimelineEntry.content.trim()) return;\n    \n    const timelineEntry = {\n      id: Date.now().toString(),\n      ...newTimelineEntry,\n      timestamp: new Date(newTimelineEntry.timestamp).toISOString(),\n      dateAdded: new Date().toISOString()\n    };\n    \n    const updatedTimeline = [...(editData.timeline || []), timelineEntry];\n    const updatedData = {\n      ...editData,\n      timeline: updatedTimeline,\n      last_updated: new Date().toISOString()\n    };\n    \n    setEditData(updatedData);\n    \n    setMindMapData(prevData => {\n      const updatedCases = prevData.cases.map(caseItem =>\n        String(caseItem.id) === String(data?.id) ? { ...caseItem, ...updatedData } : caseItem\n      );\n      const newData = { ...prevData, cases: updatedCases };\n      autoSaveMindMapData(newData);\n      return newData;\n    });\n    \n    setNewTimelineEntry({ \n      type: 'Assessment', \n      timestamp: new Date().toISOString().slice(0, 16), \n      content: '', \n      author: 'Current User' \n    });\n    setShowTimelineForm(false);\n    addToast('Timeline entry added successfully', 'success');\n    \n    // Scroll to latest entry after a delay\n    setTimeout(() => {\n      if (timelineRef.current) {\n        timelineRef.current.scrollTop = timelineRef.current.scrollHeight;\n      }\n    }, 300);\n  }, [newTimelineEntry, editData, data?.id, setMindMapData, autoSaveMindMapData, addToast]);\n\n  const updateTimelineEntry = useCallback((entryId, updatedEntry) => {\n    const updatedTimeline = (editData.timeline || []).map(entry =>\n      entry.id === entryId ? { ...entry, ...updatedEntry, last_updated: new Date().toISOString() } : entry\n    );\n    \n    const updatedData = {\n      ...editData,\n      timeline: updatedTimeline,\n      last_updated: new Date().toISOString()\n    };\n    \n    setEditData(updatedData);\n    \n    setMindMapData(prevData => {\n      const updatedCases = prevData.cases.map(caseItem =>\n        String(caseItem.id) === String(data?.id) ? { ...caseItem, ...updatedData } : caseItem\n      );\n      const newData = { ...prevData, cases: updatedCases };\n      autoSaveMindMapData(newData);\n      return newData;\n    });\n    \n    setEditingTimelineEntry(null);\n    addToast('Timeline entry updated successfully', 'success');\n  }, [editData, data?.id, setMindMapData, autoSaveMindMapData, addToast]);\n\n  const removeTimelineEntry = useCallback((entryId) => {\n    const updatedTimeline = (editData.timeline || []).filter(entry => entry.id !== entryId);\n    const updatedData = {\n      ...editData,\n      timeline: updatedTimeline,\n      last_updated: new Date().toISOString()\n    };\n    \n    setEditData(updatedData);\n    \n    setMindMapData(prevData => {\n      const updatedCases = prevData.cases.map(caseItem =>\n        String(caseItem.id) === String(data?.id) ? { ...caseItem, ...updatedData } : caseItem\n      );\n      const newData = { ...prevData, cases: updatedCases };\n      autoSaveMindMapData(newData);\n      return newData;\n    });\n    \n    addToast('Timeline entry removed successfully', 'success');\n  }, [editData, data?.id, setMindMapData, autoSaveMindMapData, addToast]);\n\n  const scrollToLatest = useCallback(() => {\n    if (timelineRef.current) {\n      timelineRef.current.scrollTo({\n        top: timelineRef.current.scrollHeight,\n        behavior: 'smooth'\n      });\n    }\n  }, []);\n\n  const scrollToShowEditingEntry = useCallback(() => {\n    setTimeout(() => {\n      if (timelineRef.current) {\n        const scrollTop = timelineRef.current.scrollTop;\n        const scrollHeight = timelineRef.current.scrollHeight;\n        const clientHeight = timelineRef.current.clientHeight;\n        \n        if (scrollHeight - scrollTop - clientHeight < 100) {\n          timelineRef.current.scrollTo({\n            top: scrollHeight,\n            behavior: 'smooth'\n          });\n        }\n      }\n    }, 300);\n  }, []);\n\n  // Get connected nodes for Related tab\n  const connectedNodes = useMemo(() => {\n    if (!data?.id) return { topics: [], literature: [], cases: [] };\n    \n    // This would typically come from your mind map connections data\n    // For now, return empty arrays - you can implement based on your data structure\n    return {\n      topics: [],\n      literature: [],\n      cases: []\n    };\n  }, [data?.id]);\n\n  // Tab configuration\n  const tabs = [\n    { id: 'overview', label: 'Overview', icon: Users },\n    { id: 'narrative', label: 'Narrative', icon: FileText },\n    { id: 'medications', label: 'Medications', icon: Pill },\n    { id: 'therapy', label: 'Therapy & Insights', icon: Brain },\n    { id: 'timeline', label: 'Timeline', icon: Clock },\n    { id: 'related', label: 'Related', icon: Link2 }\n  ];\n\n  if (!isOpen) return null;\n\n  return (\n    <AnimatePresence mode=\"wait\" onExitComplete={() => {\n      setIsAnimating(false);\n      setIsClosing(false);\n      setHasInitialized(false);\n      onClose();\n      if (onAnimationEnd) onAnimationEnd();\n    }}>\n      {isVisible && (\n        <motion.div\n          key={`case-modal-${data?.id || 'default'}`}\n          initial=\"hidden\"\n          animate=\"visible\"\n          exit=\"exit\"\n          variants={backdropVariants}\n          className=\"fixed inset-0 bg-black flex items-center justify-center z-50\"\n          style={{ \n            willChange: 'backdrop-filter, opacity',\n            backfaceVisibility: 'hidden',\n            transform: 'translate3d(0, 0, 0)'\n          }}\n          onClick={(e) => e.target === e.currentTarget && handleClose()}\n        >\n          <motion.div\n            initial=\"hidden\"\n            animate=\"visible\"\n            exit=\"exit\"\n            variants={modalVariants}\n            className=\"bg-white rounded-2xl shadow-2xl max-w-4xl w-full mx-4 max-h-[85vh] overflow-hidden\"\n            style={{ \n              willChange: 'transform, opacity, scale',\n              backfaceVisibility: 'hidden'\n            }}\n            onClick={(e) => e.stopPropagation()}\n            onAnimationStart={() => {\n              setIsAnimating(true);\n              if (onAnimationStart) onAnimationStart();\n            }}\n            onAnimationComplete={() => {\n              setIsAnimating(false);\n              if (onAnimationEnd) onAnimationEnd();\n            }}\n          >\n            <motion.div \n              initial=\"hidden\"\n              animate=\"visible\"\n              exit=\"exit\"\n              variants={contentVariants}\n              className=\"bg-gradient-to-br from-slate-900 to-slate-800 text-white px-6 py-4 flex items-center justify-between\"\n            >\n              <div className=\"flex items-center gap-3\">\n                <Users size={24} />\n                <h2 className=\"text-xl font-semibold\">Case Details</h2>\n              </div>\n              <button\n                onClick={handleClose}\n                className=\"text-slate-400 hover:text-white transition-colors\"\n              >\n                <X size={24} />\n              </button>\n            </motion.div>\n\n            {/* Tab Navigation */}\n            <div className=\"bg-gradient-to-r from-slate-900 via-slate-800 to-slate-900 border-b border-slate-600\">\n              <nav className=\"flex flex-wrap gap-2 px-6 py-4\">\n                {tabs.map(({ id, label, icon: Icon }) => (\n                  <motion.button\n                    key={id}\n                    onClick={() => handleTabSwitch(id)}\n                    className={`relative flex items-center gap-2 px-4 py-3 rounded-xl font-medium text-sm transition-all duration-300 ${\n                      activeTab === id\n                        ? 'bg-gradient-to-r from-blue-500 to-indigo-600 text-white shadow-lg shadow-blue-500/25'\n                        : 'text-slate-300 hover:text-white hover:bg-slate-700/50 hover:shadow-md'\n                    }`}\n                    whileHover={{ scale: activeTab === id ? 1 : 1.02 }}\n                    whileTap={{ scale: 0.98 }}\n                    disabled={isTabTransitioning}\n                  >\n                    <Icon size={16} className={activeTab === id ? 'drop-shadow-sm' : ''} />\n                    {label}\n                    \n                    {activeTab === id && (\n                      <motion.div\n                        layoutId=\"caseActiveTab\"\n                        className=\"absolute inset-0 bg-gradient-to-r from-blue-400/20 to-indigo-500/20 rounded-xl blur-sm\"\n                        initial={false}\n                        transition={{ duration: 0.3, ease: \"easeOut\" }}\n                      />\n                    )}\n                  </motion.button>\n                ))}\n              </nav>\n            </div>\n\n            {/* Dark Content Area */}\n            <motion.div\n              className=\"flex-1 bg-gradient-to-br from-slate-900 to-slate-800 overflow-hidden\"\n              animate={{ opacity: isTabTransitioning ? 0.7 : 1 }}\n              transition={{ duration: 0.2 }}\n            >\n              <AnimatePresence mode=\"wait\">\n                {/* Overview Tab */}\n                {activeTab === 'overview' && (\n                  <motion.div\n                    key=\"overview\"\n                    ref={el => contentRefs.current.overview = el}\n                    initial={{ opacity: 0, x: -20 }}\n                    animate={{ opacity: 1, x: 0 }}\n                    exit={{ opacity: 0, x: 20 }}\n                    transition={{ duration: 0.3 }}\n                    className=\"h-full overflow-y-auto p-6 space-y-6\"\n                  >\n                    {/* Case Title and Basic Info */}\n                    <motion.div \n                      variants={cardVariants}\n                      animate={editingSections.basic_info ? \"edit\" : \"visible\"}\n                      className=\"bg-slate-800/50 backdrop-blur-sm rounded-xl p-6 border border-slate-700\"\n                    >\n                      <div className=\"flex items-center justify-between mb-4\">\n                        <h3 className=\"text-lg font-semibold text-white\">Case Information</h3>\n                        {!editingSections.basic_info && (\n                          <motion.button\n                            whileHover={{ scale: 1.1 }}\n                            whileTap={{ scale: 0.9 }}\n                            onClick={() => startEditingSection('basic_info')}\n                            className=\"text-slate-400 hover:text-white transition-colors p-1 rounded\"\n                            title=\"Edit case information\"\n                          >\n                            <Edit3 size={16} />\n                          </motion.button>\n                        )}\n                      </div>\n                      \n                      {editingSections.basic_info ? (\n                        <motion.div \n                          className=\"space-y-4\"\n                          initial={{ opacity: 0, y: 10 }}\n                          animate={{ opacity: 1, y: 0 }}\n                          transition={{ duration: 0.3 }}\n                        >\n                          <div className=\"grid md:grid-cols-2 gap-4\">\n                            <div>\n                              <label className=\"block text-sm font-medium text-slate-300 mb-2\">Case Name</label>\n                              <input\n                                type=\"text\"\n                                value={sectionData.basic_info?.caseName || editData.caseName || editData.case_name || editData.title || ''}\n                                onChange={(e) => updateSectionField('basic_info', 'caseName', e.target.value)}\n                                className=\"w-full bg-slate-700 border border-slate-600 rounded-lg px-4 py-3 text-white placeholder-slate-400 focus:ring-2 focus:ring-green-500 focus:border-green-500\"\n                                placeholder=\"Enter case name...\"\n                              />\n                            </div>\n                            <div>\n                              <label className=\"block text-sm font-medium text-slate-300 mb-2\">Status</label>\n                              <select\n                                value={sectionData.basic_info?.status || editData.status || 'Active'}\n                                onChange={(e) => updateSectionField('basic_info', 'status', e.target.value)}\n                                className=\"w-full bg-slate-700 border border-slate-600 rounded-lg px-4 py-3 text-white focus:ring-2 focus:ring-green-500 focus:border-green-500\"\n                              >\n                                <option value=\"Active\">Active</option>\n                                <option value=\"Closed\">Closed</option>\n                                <option value=\"On Hold\">On Hold</option>\n                                <option value=\"Follow-up\">Follow-up</option>\n                              </select>\n                            </div>\n                          </div>\n                          <div className=\"flex justify-end gap-2\">\n                            <motion.button\n                              whileHover={{ scale: 1.02 }}\n                              whileTap={{ scale: 0.98 }}\n                              onClick={() => cancelEditingSection('basic_info')}\n                              className=\"px-3 py-2 text-slate-300 hover:text-white border border-slate-600 rounded-lg hover:bg-slate-700 transition-colors text-sm\"\n                            >\n                              Cancel\n                            </motion.button>\n                            <motion.button\n                              whileHover={{ scale: 1.02 }}\n                              whileTap={{ scale: 0.98 }}\n                              onClick={() => saveSectionEdit('basic_info')}\n                              disabled={isLoading}\n                              className=\"px-3 py-2 bg-green-600 text-white rounded-lg hover:bg-green-700 transition-colors text-sm flex items-center gap-2\"\n                            >\n                              {isLoading ? <Loader2 size={14} className=\"animate-spin\" /> : <Save size={14} />}\n                              Save\n                            </motion.button>\n                          </div>\n                        </motion.div>\n                      ) : (\n                        <motion.div \n                          className=\"cursor-pointer hover:bg-slate-700/20 rounded-lg p-4 transition-colors\"\n                          whileHover={{ scale: 1.01 }}\n                          transition={{ duration: 0.2 }}\n                          onClick={() => startEditingSection('basic_info')}\n                        >\n                          <div className=\"grid md:grid-cols-2 gap-4\">\n                            <div>\n                              <label className=\"block text-sm font-medium text-slate-300 mb-2\">Case Name</label>\n                              <div className=\"text-white bg-slate-700/50 rounded-lg p-3\">\n                                {editData.caseName || editData.case_name || editData.title || 'No case name specified'}\n                              </div>\n                            </div>\n                            <div>\n                              <label className=\"block text-sm font-medium text-slate-300 mb-2\">Status</label>\n                              <div className=\"text-white bg-slate-700/50 rounded-lg p-3\">\n                                {editData.status || 'Active'}\n                              </div>\n                            </div>\n                          </div>\n                        </motion.div>\n                      )}\n                    </motion.div>\n\n                    {/* Initial Presentation */}\n                    <motion.div \n                      variants={cardVariants}\n                      animate={editingSections.initial_presentation ? \"edit\" : \"visible\"}\n                      className=\"bg-slate-800/50 backdrop-blur-sm rounded-xl p-6 border border-slate-700\"\n                    >\n                      <div className=\"flex items-center justify-between mb-4\">\n                        <h4 className=\"text-lg font-semibold text-white\">Initial Presentation</h4>\n                        {!editingSections.initial_presentation && (\n                          <motion.button\n                            whileHover={{ scale: 1.1 }}\n                            whileTap={{ scale: 0.9 }}\n                            onClick={() => startEditingSection('initial_presentation')}\n                            className=\"text-slate-400 hover:text-white transition-colors p-1 rounded\"\n                            title=\"Edit initial presentation\"\n                          >\n                            <Edit3 size={16} />\n                          </motion.button>\n                        )}\n                      </div>\n                      \n                      {editingSections.initial_presentation ? (\n                        <motion.div \n                          className=\"space-y-4\"\n                          initial={{ opacity: 0, y: 10 }}\n                          animate={{ opacity: 1, y: 0 }}\n                          transition={{ duration: 0.3 }}\n                        >\n                          <textarea\n                            value={sectionData.initial_presentation?.initialPresentation || editData.initialPresentation || ''}\n                            onChange={(e) => updateSectionField('initial_presentation', 'initialPresentation', e.target.value)}\n                            rows={6}\n                            className=\"w-full bg-slate-700 border border-slate-600 rounded-lg px-4 py-3 text-white placeholder-slate-400 focus:ring-2 focus:ring-green-500 focus:border-green-500 resize-none\"\n                            placeholder=\"Describe the initial presentation, symptoms, and circumstances...\"\n                          />\n                          <div className=\"flex justify-end gap-2\">\n                            <motion.button\n                              whileHover={{ scale: 1.02 }}\n                              whileTap={{ scale: 0.98 }}\n                              onClick={() => cancelEditingSection('initial_presentation')}\n                              className=\"px-3 py-2 text-slate-300 hover:text-white border border-slate-600 rounded-lg hover:bg-slate-700 transition-colors text-sm\"\n                            >\n                              Cancel\n                            </motion.button>\n                            <motion.button\n                              whileHover={{ scale: 1.02 }}\n                              whileTap={{ scale: 0.98 }}\n                              onClick={() => saveSectionEdit('initial_presentation')}\n                              disabled={isLoading}\n                              className=\"px-3 py-2 bg-green-600 text-white rounded-lg hover:bg-green-700 transition-colors text-sm flex items-center gap-2\"\n                            >\n                              {isLoading ? <Loader2 size={14} className=\"animate-spin\" /> : <Save size={14} />}\n                              Save\n                            </motion.button>\n                          </div>\n                        </motion.div>\n                      ) : (\n                        <motion.div \n                          className=\"text-slate-300 leading-relaxed cursor-pointer hover:bg-slate-700/20 rounded-lg p-4 transition-colors\"\n                          whileHover={{ scale: 1.01 }}\n                          transition={{ duration: 0.2 }}\n                          onClick={() => startEditingSection('initial_presentation')}\n                        >\n                          {editData.initialPresentation ? (\n                            <div className=\"whitespace-pre-wrap\">{editData.initialPresentation}</div>\n                          ) : (\n                            <span className=\"text-slate-500 italic\">Click to add initial presentation details...</span>\n                          )}\n                        </motion.div>\n                      )}\n                    </motion.div>\n\n                    {/* Last Updated */}\n                    <div className=\"text-xs text-slate-500 text-right\">\n                      Last updated: {editData.last_updated ? new Date(editData.last_updated).toLocaleString() : 'Never'}\n                    </div>\n                  </motion.div>\n                )}\n\n                {/* Narrative Tab */}\n                {activeTab === 'narrative' && (\n                  <motion.div\n                    key=\"narrative\"\n                    ref={el => contentRefs.current.narrative = el}\n                    initial={{ opacity: 0, x: -20 }}\n                    animate={{ opacity: 1, x: 0 }}\n                    exit={{ opacity: 0, x: 20 }}\n                    transition={{ duration: 0.3 }}\n                    className=\"h-full overflow-y-auto p-6 space-y-6\"\n                  >\n                    {/* Narrative Summary Section */}\n                    <motion.div \n                      variants={cardVariants}\n                      animate={editingSections.narrative ? \"edit\" : \"visible\"}\n                      className=\"bg-slate-800/50 backdrop-blur-sm rounded-xl p-6 border border-slate-700\"\n                    >\n                      <div className=\"flex items-center justify-between mb-4\">\n                        <h3 className=\"text-lg font-semibold text-white flex items-center gap-2\">\n                          <FileText size={20} className=\"text-blue-400\" />\n                          Narrative Summary\n                        </h3>\n                        {!editingSections.narrative && (\n                          <motion.button\n                            whileHover={{ scale: 1.1 }}\n                            whileTap={{ scale: 0.9 }}\n                            onClick={() => startEditingSection('narrative')}\n                            className=\"text-slate-400 hover:text-white transition-colors p-1 rounded\"\n                            title=\"Edit narrative summary\"\n                          >\n                            <Edit3 size={16} />\n                          </motion.button>\n                        )}\n                      </div>\n                      \n                      {editingSections.narrative ? (\n                        <motion.div \n                          className=\"space-y-4\"\n                          initial={{ opacity: 0, y: 10 }}\n                          animate={{ opacity: 1, y: 0 }}\n                          transition={{ duration: 0.3 }}\n                        >\n                          <textarea\n                            value={sectionData.narrative?.narrative_summary || editData.narrative_summary || ''}\n                            onChange={(e) => updateSectionField('narrative', 'narrative_summary', e.target.value)}\n                            rows={8}\n                            className=\"w-full bg-slate-700 border border-slate-600 rounded-lg px-4 py-3 text-white placeholder-slate-400 focus:ring-2 focus:ring-blue-500 focus:border-blue-500 resize-none\"\n                            placeholder=\"Enter the narrative summary for this case...\"\n                          />\n                          <div className=\"flex justify-end gap-2\">\n                            <motion.button\n                              whileHover={{ scale: 1.02 }}\n                              whileTap={{ scale: 0.98 }}\n                              onClick={() => cancelEditingSection('narrative')}\n                              className=\"px-3 py-2 text-slate-300 hover:text-white border border-slate-600 rounded-lg hover:bg-slate-700 transition-colors text-sm\"\n                            >\n                              Cancel\n                            </motion.button>\n                            <motion.button\n                              whileHover={{ scale: 1.02 }}\n                              whileTap={{ scale: 0.98 }}\n                              onClick={() => saveSectionEdit('narrative')}\n                              disabled={isLoading}\n                              className=\"px-3 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors text-sm flex items-center gap-2\"\n                            >\n                              {isLoading ? <Loader2 size={14} className=\"animate-spin\" /> : <Save size={14} />}\n                              Save\n                            </motion.button>\n                          </div>\n                        </motion.div>\n                      ) : (\n                        <motion.div \n                          className=\"text-slate-300 leading-relaxed cursor-pointer hover:bg-slate-700/20 rounded-lg p-4 transition-colors\"\n                          whileHover={{ scale: 1.01 }}\n                          transition={{ duration: 0.2 }}\n                          onClick={() => startEditingSection('narrative')}\n                        >\n                          {editData.narrative_summary || (\n                            <span className=\"text-slate-500 italic\">Click to add narrative summary...</span>\n                          )}\n                        </motion.div>\n                      )}\n                    </motion.div>\n                  </motion.div>\n                )}\n\n                {/* Medications Tab */}\n                {activeTab === 'medications' && (\n                  <motion.div\n                    key=\"medications\"\n                    ref={el => contentRefs.current.medications = el}\n                    initial={{ opacity: 0, x: -20 }}\n                    animate={{ opacity: 1, x: 0 }}\n                    exit={{ opacity: 0, x: 20 }}\n                    transition={{ duration: 0.3 }}\n                    className=\"h-full overflow-y-auto p-6 space-y-6\"\n                  >\n                    {/* Medications List */}\n                    <motion.div \n                      variants={cardVariants}\n                      initial=\"hidden\"\n                      animate=\"visible\"\n                      className=\"bg-slate-800/50 backdrop-blur-sm rounded-xl p-6 border border-slate-700\"\n                    >\n                      <h3 className=\"text-lg font-semibold text-white mb-4 flex items-center gap-2\">\n                        <Pill size={20} className=\"text-green-400\" />\n                        Current Medications\n                      </h3>\n                      \n                      {/* Existing Medications */}\n                      <div className=\"space-y-4 mb-6\">\n                        <AnimatePresence>\n                          {(editData.medications || []).map((medication, index) => (\n                            <motion.div\n                              key={medication.id || index}\n                              initial={{ opacity: 0, scale: 0.8 }}\n                              animate={{ opacity: 1, scale: 1 }}\n                              exit={{ opacity: 0, scale: 0.8 }}\n                              className=\"bg-green-600/10 border border-green-600/20 rounded-lg p-4 group hover:bg-green-600/15 transition-colors\"\n                            >\n                              <div className=\"flex items-start justify-between\">\n                                <div className=\"flex-1\">\n                                  <div className=\"flex items-center gap-3 mb-2\">\n                                    <h4 className=\"font-semibold text-green-300\">{medication.name}</h4>\n                                    {medication.dosage && (\n                                      <span className=\"text-xs bg-green-600/20 text-green-300 px-2 py-1 rounded\">\n                                        {medication.dosage}\n                                      </span>\n                                    )}\n                                  </div>\n                                  <div className=\"space-y-1 text-sm text-slate-300\">\n                                    {medication.frequency && (\n                                      <div className=\"flex items-center gap-2\">\n                                        <Clock size={14} className=\"text-green-400\" />\n                                        <span>Frequency: {medication.frequency}</span>\n                                      </div>\n                                    )}\n                                    {medication.effect && (\n                                      <div className=\"flex items-center gap-2\">\n                                        <Activity size={14} className=\"text-green-400\" />\n                                        <span>Effect: {medication.effect}</span>\n                                      </div>\n                                    )}\n                                    {medication.dateAdded && (\n                                      <div className=\"flex items-center gap-2\">\n                                        <Calendar size={14} className=\"text-green-400\" />\n                                        <span>Added: {new Date(medication.dateAdded).toLocaleDateString()}</span>\n                                      </div>\n                                    )}\n                                  </div>\n                                </div>\n                                <motion.button\n                                  whileHover={{ scale: 1.1 }}\n                                  whileTap={{ scale: 0.9 }}\n                                  onClick={() => removeMedication(medication.id)}\n                                  className=\"text-green-400 hover:text-green-200 opacity-0 group-hover:opacity-100 transition-opacity p-1 rounded\"\n                                  title=\"Remove medication\"\n                                >\n                                  <Trash2 size={16} />\n                                </motion.button>\n                              </div>\n                            </motion.div>\n                          ))}\n                        </AnimatePresence>\n                      </div>\n                      \n                      {/* Add New Medication */}\n                      {!showMedicationForm ? (\n                        <motion.button\n                          whileHover={{ scale: 1.02 }}\n                          whileTap={{ scale: 0.98 }}\n                          onClick={() => setShowMedicationForm(true)}\n                          className=\"w-full flex items-center justify-center gap-2 p-4 border-2 border-dashed border-green-600/30 rounded-lg text-green-400 hover:border-green-600/50 hover:bg-green-600/5 transition-colors\"\n                        >\n                          <Plus size={16} />\n                          Add New Medication\n                        </motion.button>\n                      ) : (\n                        <motion.div\n                          initial={{ opacity: 0, y: 20 }}\n                          animate={{ opacity: 1, y: 0 }}\n                          className=\"bg-slate-700/30 rounded-lg p-4 space-y-4\"\n                        >\n                          <div className=\"grid md:grid-cols-2 gap-4\">\n                            <div>\n                              <label className=\"block text-sm font-medium text-slate-300 mb-2\">\n                                Medication Name <span className=\"text-red-400\">*</span>\n                              </label>\n                              <input\n                                type=\"text\"\n                                value={newMedication.name}\n                                onChange={(e) => setNewMedication(prev => ({ ...prev, name: e.target.value }))}\n                                className=\"w-full bg-slate-700 border border-slate-600 rounded-lg px-3 py-2 text-white placeholder-slate-400 focus:ring-2 focus:ring-green-500 focus:border-green-500\"\n                                placeholder=\"Enter medication name\"\n                              />\n                            </div>\n                            <div>\n                              <label className=\"block text-sm font-medium text-slate-300 mb-2\">Dosage</label>\n                              <input\n                                type=\"text\"\n                                value={newMedication.dosage}\n                                onChange={(e) => setNewMedication(prev => ({ ...prev, dosage: e.target.value }))}\n                                className=\"w-full bg-slate-700 border border-slate-600 rounded-lg px-3 py-2 text-white placeholder-slate-400 focus:ring-2 focus:ring-green-500 focus:border-green-500\"\n                                placeholder=\"e.g., 50mg\"\n                              />\n                            </div>\n                          </div>\n                          <div className=\"grid md:grid-cols-2 gap-4\">\n                            <div>\n                              <label className=\"block text-sm font-medium text-slate-300 mb-2\">Frequency</label>\n                              <input\n                                type=\"text\"\n                                value={newMedication.frequency}\n                                onChange={(e) => setNewMedication(prev => ({ ...prev, frequency: e.target.value }))}\n                                className=\"w-full bg-slate-700 border border-slate-600 rounded-lg px-3 py-2 text-white placeholder-slate-400 focus:ring-2 focus:ring-green-500 focus:border-green-500\"\n                                placeholder=\"e.g., Once daily\"\n                              />\n                            </div>\n                            <div>\n                              <label className=\"block text-sm font-medium text-slate-300 mb-2\">Effect/Notes</label>\n                              <input\n                                type=\"text\"\n                                value={newMedication.effect}\n                                onChange={(e) => setNewMedication(prev => ({ ...prev, effect: e.target.value }))}\n                                className=\"w-full bg-slate-700 border border-slate-600 rounded-lg px-3 py-2 text-white placeholder-slate-400 focus:ring-2 focus:ring-green-500 focus:border-green-500\"\n                                placeholder=\"e.g., Improved mood\"\n                              />\n                            </div>\n                          </div>\n                          <div className=\"flex justify-end gap-2\">\n                            <motion.button\n                              whileHover={{ scale: 1.02 }}\n                              whileTap={{ scale: 0.98 }}\n                              onClick={() => {\n                                setShowMedicationForm(false);\n                                setNewMedication({ name: '', dosage: '', frequency: '', effect: '' });\n                              }}\n                              className=\"px-4 py-2 text-slate-300 hover:text-white border border-slate-600 rounded-lg hover:bg-slate-700 transition-colors\"\n                            >\n                              Cancel\n                            </motion.button>\n                            <motion.button\n                              whileHover={{ scale: 1.02 }}\n                              whileTap={{ scale: 0.98 }}\n                              onClick={addMedication}\n                              disabled={!newMedication.name.trim()}\n                              className=\"px-4 py-2 bg-green-600 text-white rounded-lg hover:bg-green-700 transition-colors flex items-center gap-2 disabled:opacity-50 disabled:cursor-not-allowed\"\n                            >\n                              <Plus size={16} />\n                              Add Medication\n                            </motion.button>\n                          </div>\n                        </motion.div>\n                      )}\n                      \n                      {(editData.medications || []).length === 0 && !showMedicationForm && (\n                        <p className=\"text-slate-500 italic text-center py-8\">No medications documented yet</p>\n                      )}\n                    </motion.div>\n                  </motion.div>\n                )}\n\n                {/* Therapy & Insights Tab */}\n                {activeTab === 'therapy' && (\n                  <motion.div\n                    key=\"therapy\"\n                    ref={el => contentRefs.current.therapy = el}\n                    initial={{ opacity: 0, x: -20 }}\n                    animate={{ opacity: 1, x: 0 }}\n                    exit={{ opacity: 0, x: 20 }}\n                    transition={{ duration: 0.3 }}\n                    className=\"h-full overflow-y-auto p-6 space-y-6\"\n                  >\n                    {/* Therapeutic Highlights Section */}\n                    <motion.div \n                      variants={cardVariants}\n                      animate={editingSections.therapeutic_highlights ? \"edit\" : \"visible\"}\n                      className=\"bg-slate-800/50 backdrop-blur-sm rounded-xl p-6 border border-slate-700\"\n                    >\n                      <div className=\"flex items-center justify-between mb-4\">\n                        <h3 className=\"text-lg font-semibold text-white flex items-center gap-2\">\n                          <Brain size={20} className=\"text-purple-400\" />\n                          Therapeutic Highlights\n                        </h3>\n                        {!editingSections.therapeutic_highlights && (\n                          <motion.button\n                            whileHover={{ scale: 1.1 }}\n                            whileTap={{ scale: 0.9 }}\n                            onClick={() => startEditingSection('therapeutic_highlights')}\n                            className=\"text-slate-400 hover:text-white transition-colors p-1 rounded\"\n                            title=\"Edit therapeutic highlights\"\n                          >\n                            <Edit3 size={16} />\n                          </motion.button>\n                        )}\n                      </div>\n                      \n                      {editingSections.therapeutic_highlights ? (\n                        <motion.div \n                          className=\"space-y-4\"\n                          initial={{ opacity: 0, y: 10 }}\n                          animate={{ opacity: 1, y: 0 }}\n                          transition={{ duration: 0.3 }}\n                        >\n                          <textarea\n                            value={sectionData.therapeutic_highlights?.therapeutic_highlights || editData.therapeutic_highlights || ''}\n                            onChange={(e) => updateSectionField('therapeutic_highlights', 'therapeutic_highlights', e.target.value)}\n                            rows={10}\n                            className=\"w-full bg-slate-700 border border-slate-600 rounded-lg px-4 py-3 text-white placeholder-slate-400 focus:ring-2 focus:ring-purple-500 focus:border-purple-500 resize-none\"\n                            placeholder=\"Enter key therapeutic moments, insights, breakthroughs, or notes on therapy process...\"\n                          />\n                          <div className=\"flex justify-end gap-2\">\n                            <motion.button\n                              whileHover={{ scale: 1.02 }}\n                              whileTap={{ scale: 0.98 }}\n                              onClick={() => cancelEditingSection('therapeutic_highlights')}\n                              className=\"px-3 py-2 text-slate-300 hover:text-white border border-slate-600 rounded-lg hover:bg-slate-700 transition-colors text-sm\"\n                            >\n                              Cancel\n                            </motion.button>\n                            <motion.button\n                              whileHover={{ scale: 1.02 }}\n                              whileTap={{ scale: 0.98 }}\n                              onClick={() => saveSectionEdit('therapeutic_highlights')}\n                              disabled={isLoading}\n                              className=\"px-3 py-2 bg-purple-600 text-white rounded-lg hover:bg-purple-700 transition-colors text-sm flex items-center gap-2\"\n                            >\n                              {isLoading ? <Loader2 size={14} className=\"animate-spin\" /> : <Save size={14} />}\n                              Save\n                            </motion.button>\n                          </div>\n                        </motion.div>\n                      ) : (\n                        <motion.div \n                          className=\"text-slate-300 leading-relaxed cursor-pointer hover:bg-slate-700/20 rounded-lg p-4 transition-colors min-h-[200px]\"\n                          whileHover={{ scale: 1.01 }}\n                          transition={{ duration: 0.2 }}\n                          onClick={() => startEditingSection('therapeutic_highlights')}\n                        >\n                          {editData.therapeutic_highlights ? (\n                            <div className=\"whitespace-pre-wrap\">{editData.therapeutic_highlights}</div>\n                          ) : (\n                            <span className=\"text-slate-500 italic\">Click to add therapeutic highlights, key moments, insights, breakthroughs, or therapy process notes...</span>\n                          )}\n                        </motion.div>\n                      )}\n                    </motion.div>\n                  </motion.div>\n                )}\n\n                {/* Timeline Tab */}\n                {activeTab === 'timeline' && (\n                  <motion.div\n                    key=\"timeline\"\n                    ref={el => contentRefs.current.timeline = el}\n                    initial={{ opacity: 0, x: -20 }}\n                    animate={{ opacity: 1, x: 0 }}\n                    exit={{ opacity: 0, x: 20 }}\n                    transition={{ duration: 0.3 }}\n                    className=\"h-full overflow-hidden p-6\"\n                  >\n                    {/* Timeline Header */}\n                    <div className=\"flex items-center justify-between mb-6\">\n                      <h3 className=\"text-lg font-semibold text-white flex items-center gap-2\">\n                        <Clock size={20} className=\"text-cyan-400\" />\n                        Case Timeline\n                      </h3>\n                      <div className=\"flex gap-2\">\n                        <motion.button\n                          whileHover={{ scale: 1.05 }}\n                          whileTap={{ scale: 0.95 }}\n                          onClick={scrollToLatest}\n                          className=\"px-3 py-1 bg-cyan-600/20 text-cyan-300 border border-cyan-600/30 rounded-lg hover:bg-cyan-600/30 transition-colors text-sm flex items-center gap-1\"\n                        >\n                          <Activity size={14} />\n                          Scroll to Latest\n                        </motion.button>\n                        <motion.button\n                          whileHover={{ scale: 1.05 }}\n                          whileTap={{ scale: 0.95 }}\n                          onClick={() => {\n                            setShowTimelineForm(true);\n                            scrollToShowEditingEntry();\n                          }}\n                          disabled={showTimelineForm}\n                          className=\"px-3 py-1 bg-green-600 text-white rounded-lg hover:bg-green-700 transition-colors text-sm flex items-center gap-1 disabled:opacity-50 disabled:cursor-not-allowed\"\n                        >\n                          <Plus size={14} />\n                          Add Entry\n                        </motion.button>\n                      </div>\n                    </div>\n\n                    {/* Timeline Container */}\n                    <div className=\"relative h-full\">\n                      {/* Gradient overlays */}\n                      <div className=\"absolute top-0 left-0 right-0 h-6 bg-gradient-to-b from-slate-900 to-transparent z-10 pointer-events-none\" />\n                      <div className=\"absolute bottom-0 left-0 right-0 h-6 bg-gradient-to-t from-slate-900 to-transparent z-10 pointer-events-none\" />\n                      \n                      {/* Timeline Content */}\n                      <div \n                        ref={timelineRef}\n                        className=\"h-full overflow-y-auto timeline-scroll pr-2\"\n                      >\n                        <div className=\"relative\">\n                          {/* Vertical timeline line */}\n                          <div className=\"absolute left-6 top-0 bottom-0 w-0.5 bg-gradient-to-b from-cyan-500 via-purple-500 to-cyan-500 opacity-30\" />\n                          \n                          {/* Timeline entries */}\n                          <div className=\"space-y-4\">\n                            <AnimatePresence>\n                              {(editData.timeline || []).map((entry, index) => (\n                                <motion.div\n                                  key={entry.id}\n                                  initial={{ opacity: 0, x: -20 }}\n                                  animate={{ opacity: 1, x: 0 }}\n                                  exit={{ opacity: 0, x: 20 }}\n                                  transition={{ duration: 0.3, delay: index * 0.05 }}\n                                  className=\"relative\"\n                                >\n                                  {/* Timeline dot */}\n                                  <div className={`absolute left-5 w-3 h-3 rounded-full border-2 ${getTimelineEntryColor(entry.type)} bg-slate-900 z-10`} />\n                                  \n                                  {/* Entry content */}\n                                  <div className=\"ml-12 pb-4\">\n                                    {editingTimelineEntry === entry.id ? (\n                                      <TimelineEditForm \n                                        entry={entry} \n                                        onSave={(updatedEntry) => updateTimelineEntry(entry.id, updatedEntry)}\n                                        onCancel={() => setEditingTimelineEntry(null)}\n                                      />\n                                    ) : (\n                                      <motion.div\n                                        className={`bg-slate-800/50 backdrop-blur-sm rounded-xl p-4 border-l-4 ${getTimelineEntryColor(entry.type)} border border-slate-700 cursor-pointer hover:bg-slate-700/50 transition-colors group`}\n                                        whileHover={{ scale: 1.01 }}\n                                        transition={{ duration: 0.2 }}\n                                        onClick={() => setEditingTimelineEntry(entry.id)}\n                                      >\n                                        <div className=\"flex items-start justify-between mb-2\">\n                                          <div className=\"flex items-center gap-2\">\n                                            <span className={`text-xs font-medium px-2 py-1 rounded ${\n                                              entry.type === 'Assessment' ? 'bg-green-600/20 text-green-300' :\n                                              entry.type === 'Medication' ? 'bg-blue-600/20 text-blue-300' :\n                                              entry.type === 'Therapy' ? 'bg-purple-600/20 text-purple-300' :\n                                              entry.type === 'Follow-up' ? 'bg-orange-600/20 text-orange-300' :\n                                              'bg-gray-600/20 text-gray-300'\n                                            }`}>\n                                              {entry.type}\n                                            </span>\n                                            <span className=\"text-xs text-slate-400\">\n                                              {new Date(entry.timestamp).toLocaleString()}\n                                            </span>\n                                          </div>\n                                          <motion.button\n                                            whileHover={{ scale: 1.1 }}\n                                            whileTap={{ scale: 0.9 }}\n                                            onClick={(e) => {\n                                              e.stopPropagation();\n                                              removeTimelineEntry(entry.id);\n                                            }}\n                                            className=\"opacity-0 group-hover:opacity-100 text-red-400 hover:text-red-300 p-1 transition-opacity\"\n                                          >\n                                            <Trash2 size={14} />\n                                          </motion.button>\n                                        </div>\n                                        <div className=\"text-slate-300 text-sm leading-relaxed\">\n                                          {entry.content}\n                                        </div>\n                                        {entry.author && (\n                                          <div className=\"text-xs text-slate-500 mt-2\">\n                                            by {entry.author}\n                                          </div>\n                                        )}\n                                      </motion.div>\n                                    )}\n                                  </div>\n                                </motion.div>\n                              ))}\n                            </AnimatePresence>\n                            \n                            {/* New entry form */}\n                            {showTimelineForm && (\n                              <motion.div\n                                initial={{ opacity: 0, y: 20 }}\n                                animate={{ opacity: 1, y: 0 }}\n                                exit={{ opacity: 0, y: -20 }}\n                                transition={{ duration: 0.3 }}\n                                className=\"relative\"\n                              >\n                                {/* Timeline dot for new entry */}\n                                <div className=\"absolute left-5 w-3 h-3 rounded-full border-2 border-cyan-500 bg-slate-900 z-10 animate-pulse\" />\n                                \n                                {/* New entry form */}\n                                <div className=\"ml-12\">\n                                  <TimelineEntryForm \n                                    entry={newTimelineEntry}\n                                    onChange={setNewTimelineEntry}\n                                    onSave={addTimelineEntry}\n                                    onCancel={() => {\n                                      setShowTimelineForm(false);\n                                      setNewTimelineEntry({ \n                                        type: 'Assessment', \n                                        timestamp: new Date().toISOString().slice(0, 16), \n                                        content: '', \n                                        author: 'Current User' \n                                      });\n                                    }}\n                                    isNew={true}\n                                  />\n                                </div>\n                              </motion.div>\n                            )}\n                            \n                            {/* Empty state */}\n                            {(editData.timeline || []).length === 0 && !showTimelineForm && (\n                              <motion.div\n                                initial={{ opacity: 0 }}\n                                animate={{ opacity: 1 }}\n                                className=\"text-center py-12\"\n                              >\n                                <Clock size={48} className=\"mx-auto text-slate-600 mb-4\" />\n                                <p className=\"text-slate-500 mb-4\">No timeline entries yet</p>\n                                <motion.button\n                                  whileHover={{ scale: 1.05 }}\n                                  whileTap={{ scale: 0.95 }}\n                                  onClick={() => setShowTimelineForm(true)}\n                                  className=\"px-4 py-2 bg-green-600 text-white rounded-lg hover:bg-green-700 transition-colors flex items-center gap-2 mx-auto\"\n                                >\n                                  <Plus size={16} />\n                                  Add First Entry\n                                </motion.button>\n                              </motion.div>\n                            )}\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </motion.div>\n                )}\n\n                {/* Related Tab */}\n                {activeTab === 'related' && (\n                  <motion.div\n                    key=\"related\"\n                    ref={el => contentRefs.current.related = el}\n                    initial={{ opacity: 0, x: -20 }}\n                    animate={{ opacity: 1, x: 0 }}\n                    exit={{ opacity: 0, x: 20 }}\n                    transition={{ duration: 0.3 }}\n                    className=\"h-full overflow-y-auto p-6 space-y-6\"\n                  >\n                    {/* Connected Nodes */}\n                    <motion.div \n                      variants={cardVariants}\n                      initial=\"hidden\"\n                      animate=\"visible\"\n                      className=\"bg-slate-800/50 backdrop-blur-sm rounded-xl p-6 border border-slate-700\"\n                    >\n                      <h3 className=\"text-lg font-semibold text-white mb-4 flex items-center gap-2\">\n                        <Link2 size={20} className=\"text-cyan-400\" />\n                        Connected Nodes\n                      </h3>\n                      \n                      {/* Topics */}\n                      <div className=\"mb-6\">\n                        <h4 className=\"text-md font-medium text-slate-300 mb-3 flex items-center gap-2\">\n                          <Brain size={16} className=\"text-blue-400\" />\n                          Related Topics\n                        </h4>\n                        {connectedNodes.topics.length > 0 ? (\n                          <div className=\"space-y-2\">\n                            {connectedNodes.topics.map((topic, index) => (\n                              <div key={index} className=\"flex items-center gap-3 p-3 bg-blue-600/10 border border-blue-600/20 rounded-lg\">\n                                <Brain size={16} className=\"text-blue-400\" />\n                                <span className=\"text-blue-300\">{topic.title}</span>\n                              </div>\n                            ))}\n                          </div>\n                        ) : (\n                          <p className=\"text-slate-500 italic text-sm\">No connected topics</p>\n                        )}\n                      </div>\n\n                      {/* Literature */}\n                      <div className=\"mb-6\">\n                        <h4 className=\"text-md font-medium text-slate-300 mb-3 flex items-center gap-2\">\n                          <BookOpen size={16} className=\"text-purple-400\" />\n                          Related Literature\n                        </h4>\n                        {connectedNodes.literature.length > 0 ? (\n                          <div className=\"space-y-2\">\n                            {connectedNodes.literature.map((lit, index) => (\n                              <div key={index} className=\"flex items-center gap-3 p-3 bg-purple-600/10 border border-purple-600/20 rounded-lg\">\n                                <BookOpen size={16} className=\"text-purple-400\" />\n                                <span className=\"text-purple-300\">{lit.title}</span>\n                              </div>\n                            ))}\n                          </div>\n                        ) : (\n                          <p className=\"text-slate-500 italic text-sm\">No connected literature</p>\n                        )}\n                      </div>\n\n                      {/* Other Cases */}\n                      <div>\n                        <h4 className=\"text-md font-medium text-slate-300 mb-3 flex items-center gap-2\">\n                          <Users size={16} className=\"text-green-400\" />\n                          Related Cases\n                        </h4>\n                        {connectedNodes.cases.length > 0 ? (\n                          <div className=\"space-y-2\">\n                            {connectedNodes.cases.map((caseNode, index) => (\n                              <div key={index} className=\"flex items-center gap-3 p-3 bg-green-600/10 border border-green-600/20 rounded-lg\">\n                                <Users size={16} className=\"text-green-400\" />\n                                <span className=\"text-green-300\">{caseNode.title}</span>\n                              </div>\n                            ))}\n                          </div>\n                        ) : (\n                          <p className=\"text-slate-500 italic text-sm\">No connected cases</p>\n                        )}\n                      </div>\n\n                      <div className=\"mt-6 p-4 bg-slate-700/20 rounded-lg border border-slate-600\">\n                        <p className=\"text-slate-400 text-sm italic\">\n                          Connected nodes will be automatically populated based on mind map relationships and connections created in the graph view.\n                        </p>\n                      </div>\n                    </motion.div>\n                  </motion.div>\n                )}\n              </AnimatePresence>\n            </motion.div>\n          </motion.div>\n        </motion.div>\n      )}\n    </AnimatePresence>\n  );\n};\n\n// Timeline Entry Form Component\nconst TimelineEntryForm = ({ entry, onChange, onSave, onCancel, isNew = false }) => {\n  const [localEntry, setLocalEntry] = useState(entry);\n\n  useEffect(() => {\n    setLocalEntry(entry);\n  }, [entry]);\n\n  const handleSave = () => {\n    if (!localEntry.content.trim()) return;\n    if (isNew) {\n      onSave();\n    } else {\n      onSave(localEntry);\n    }\n  };\n\n  const handleFieldChange = (field, value) => {\n    const updated = { ...localEntry, [field]: value };\n    setLocalEntry(updated);\n    if (isNew) {\n      onChange(updated);\n    }\n  };\n\n  return (\n    <motion.div\n      initial={{ opacity: 0, y: 10 }}\n      animate={{ opacity: 1, y: 0 }}\n      className=\"bg-slate-800/70 backdrop-blur-sm rounded-xl p-4 border border-slate-600\"\n    >\n      <div className=\"space-y-4\">\n        <div className=\"grid md:grid-cols-2 gap-4\">\n          <div>\n            <label className=\"block text-sm font-medium text-slate-300 mb-2\">Entry Type</label>\n            <select\n              value={localEntry.type}\n              onChange={(e) => handleFieldChange('type', e.target.value)}\n              className=\"w-full bg-slate-700 border border-slate-600 rounded-lg px-3 py-2 text-white focus:ring-2 focus:ring-cyan-500 focus:border-cyan-500\"\n            >\n              <option value=\"Assessment\">Assessment</option>\n              <option value=\"Medication\">Medication</option>\n              <option value=\"Therapy\">Therapy</option>\n              <option value=\"Follow-up\">Follow-up</option>\n              <option value=\"Note\">Note</option>\n            </select>\n          </div>\n          <div>\n            <label className=\"block text-sm font-medium text-slate-300 mb-2\">Timestamp</label>\n            <input\n              type=\"datetime-local\"\n              value={localEntry.timestamp.slice(0, 16)}\n              onChange={(e) => handleFieldChange('timestamp', e.target.value)}\n              className=\"w-full bg-slate-700 border border-slate-600 rounded-lg px-3 py-2 text-white focus:ring-2 focus:ring-cyan-500 focus:border-cyan-500\"\n            />\n          </div>\n        </div>\n        <div>\n          <label className=\"block text-sm font-medium text-slate-300 mb-2\">Content</label>\n          <textarea\n            value={localEntry.content}\n            onChange={(e) => handleFieldChange('content', e.target.value)}\n            className=\"w-full bg-slate-700 border border-slate-600 rounded-lg px-3 py-2 text-white placeholder-slate-400 focus:ring-2 focus:ring-cyan-500 focus:border-cyan-500\"\n            rows={4}\n            placeholder=\"Describe what happened, observations, decisions made, or notes...\"\n          />\n        </div>\n        {!isNew && (\n          <div>\n            <label className=\"block text-sm font-medium text-slate-300 mb-2\">Author</label>\n            <input\n              type=\"text\"\n              value={localEntry.author || ''}\n              onChange={(e) => handleFieldChange('author', e.target.value)}\n              className=\"w-full bg-slate-700 border border-slate-600 rounded-lg px-3 py-2 text-white placeholder-slate-400 focus:ring-2 focus:ring-cyan-500 focus:border-cyan-500\"\n              placeholder=\"Author name\"\n            />\n          </div>\n        )}\n        <div className=\"flex justify-end gap-2 pt-2\">\n          <motion.button\n            whileHover={{ scale: 1.02 }}\n            whileTap={{ scale: 0.98 }}\n            onClick={onCancel}\n            className=\"px-4 py-2 text-slate-300 hover:text-white border border-slate-600 rounded-lg hover:bg-slate-700 transition-colors\"\n          >\n            Cancel\n          </motion.button>\n          <motion.button\n            whileHover={{ scale: 1.02 }}\n            whileTap={{ scale: 0.98 }}\n            onClick={handleSave}\n            disabled={!localEntry.content.trim()}\n            className=\"px-4 py-2 bg-cyan-600 text-white rounded-lg hover:bg-cyan-700 transition-colors flex items-center gap-2 disabled:opacity-50 disabled:cursor-not-allowed\"\n          >\n            <Save size={16} />\n            {isNew ? 'Add Entry' : 'Save Changes'}\n          </motion.button>\n        </div>\n      </div>\n    </motion.div>\n  );\n};\n\n// Timeline Edit Form Component (same as TimelineEntryForm but with different styling)\nconst TimelineEditForm = ({ entry, onSave, onCancel }) => {\n  return (\n    <TimelineEntryForm \n      entry={entry}\n      onChange={() => {}} // Not used for editing\n      onSave={onSave}\n      onCancel={onCancel}\n      isNew={false}\n    />\n  );\n};\n\nexport default CaseModal;","// Enhanced Topic Modal with tabbed interface and advanced animations\nimport React, { useState, useEffect, useMemo, useCallback, useRef } from 'react';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport { \n  X, \n  BookOpen, \n  Brain, \n  Target, \n  Award, \n  Clock, \n  Sparkles, \n  Link2,\n  Edit3,\n  Trash2,\n  Save,\n  Loader2,\n  Star,\n  Plus,\n  Check,\n  RotateCcw,\n  TrendingUp,\n  Lightbulb,\n  FileText,\n  Layers,\n  Stethoscope,\n  Pill,\n  Users,\n  Tag,\n  Calendar,\n  Activity,\n  ChevronDown,\n  ChevronRight\n} from 'lucide-react';\n\n// Animation variants for Framer Motion\nconst modalVariants = {\n  hidden: {\n    opacity: 0,\n    scale: 0.3,\n    y: 50,\n    rotate: -5,\n  },\n  visible: {\n    opacity: 1,\n    scale: 1,\n    y: 0,\n    rotate: 0,\n    transition: {\n      type: \"spring\",\n      damping: 25,\n      stiffness: 300,\n      duration: 0.6,\n    }\n  },\n  exit: {\n    opacity: 0,\n    scale: 0.7,\n    y: 30,\n    rotate: -3,\n    transition: {\n      type: \"easeInOut\",\n      duration: 0.4,\n    }\n  }\n};\n\nconst backdropVariants = {\n  hidden: { \n    opacity: 0,\n    backdropFilter: 'blur(0px)'\n  },\n  visible: { \n    opacity: 1,\n    backdropFilter: 'blur(8px)',\n    transition: {\n      duration: 0.4,\n      ease: \"easeOut\"\n    }\n  },\n  exit: { \n    opacity: 0,\n    backdropFilter: 'blur(0px)',\n    transition: {\n      duration: 0.3,\n      ease: \"easeIn\"\n    }\n  }\n};\n\nconst contentVariants = {\n  hidden: {\n    opacity: 0,\n    y: 20,\n    scale: 0.95,\n  },\n  visible: {\n    opacity: 1,\n    y: 0,\n    scale: 1,\n    transition: {\n      type: \"easeOut\",\n      duration: 0.3,\n      delay: 0.1,\n    }\n  },\n  exit: {\n    opacity: 0,\n    y: -10,\n    scale: 1.02,\n    transition: {\n      type: \"easeIn\",\n      duration: 0.2,\n    }\n  }\n};\n\n// Card animation variants for sections\nconst cardVariants = {\n  hidden: { opacity: 0, y: 20, scale: 0.95 },\n  visible: { \n    opacity: 1, \n    y: 0, \n    scale: 1,\n    transition: {\n      duration: 0.4,\n      ease: \"easeOut\"\n    }\n  },\n  edit: { \n    scale: 1.02,\n    boxShadow: \"0 8px 25px rgba(59, 130, 246, 0.15)\",\n    transition: {\n      duration: 0.3,\n      ease: \"easeOut\"\n    }\n  },\n  saved: {\n    scale: 1,\n    boxShadow: \"0 4px 15px rgba(34, 197, 94, 0.15)\",\n    transition: {\n      duration: 0.3,\n      ease: \"easeOut\"\n    }\n  }\n};\n\nconst TopicModal = ({ \n  isOpen, \n  data, \n  onClose,\n  onAnimationStart,\n  onAnimationEnd,\n  setMindMapData,\n  autoSaveMindMapData,\n  addToast,\n  syncNodeData,\n  forceNodeUpdate\n}) => {\n  const [isAnimating, setIsAnimating] = useState(false);\n  const [isVisible, setIsVisible] = useState(false);\n  const [isClosing, setIsClosing] = useState(false);\n  const [editData, setEditData] = useState({});\n  const [isLoading, setIsLoading] = useState(false);\n  const [hasInitialized, setHasInitialized] = useState(false);\n  const [activeTab, setActiveTab] = useState('overview');\n  const [isTabTransitioning, setIsTabTransitioning] = useState(false);\n  \n  // Individual section edit states\n  const [editingSections, setEditingSections] = useState({});\n  const [sectionData, setSectionData] = useState({});\n  \n  // Tab-specific scroll positions\n  const [scrollPositions, setScrollPositions] = useState({});\n  const contentRefs = useRef({});\n  \n  // Form states for different tabs\n  const [expandedCriteria, setExpandedCriteria] = useState(false);\n  const [newTags, setNewTags] = useState({}); // For managing new tag inputs\n  const [newResource, setNewResource] = useState('');\n  const [showResourceForm, setShowResourceForm] = useState(false);\n\n  // Category color mapping\n  const categoryColors = {\n    'Mood Disorders': { primary: '#ef4444', secondary: '#fca5a5' }, // red\n    'Anxiety Disorders': { primary: '#f59e0b', secondary: '#fbbf24' }, // amber\n    'Psychotic Disorders': { primary: '#8b5cf6', secondary: '#c4b5fd' }, // violet\n    'Personality Disorders': { primary: '#10b981', secondary: '#6ee7b7' }, // emerald\n    'Neurodevelopmental Disorders': { primary: '#3b82f6', secondary: '#93c5fd' }, // blue\n    'Trauma Related Disorders': { primary: '#dc2626', secondary: '#f87171' }, // red-600\n    'Substance Use Disorders': { primary: '#059669', secondary: '#34d399' }, // emerald-600\n    'Eating Disorders': { primary: '#d946ef', secondary: '#e879f9' }, // fuchsia\n    'Sleep Disorders': { primary: '#6366f1', secondary: '#a5b4fc' }, // indigo\n    'Cognitive Disorders': { primary: '#ea580c', secondary: '#fb923c' }, // orange-600\n    'Other': { primary: '#6b7280', secondary: '#9ca3af' } // gray\n  };\n\n  // Tab configuration\n  const tabs = [\n    { id: 'overview', label: 'Overview', icon: BookOpen },\n    { id: 'concept', label: 'Concept', icon: Brain },\n    { id: 'clinical', label: 'Clinical Associations', icon: Stethoscope },\n    { id: 'treatment', label: 'Treatment', icon: Pill },\n    { id: 'connections', label: 'Connections', icon: Link2 }\n  ];\n\n  useEffect(() => {\n    if (isOpen && data && !hasInitialized) {\n      setIsVisible(true);\n      const initialData = { \n        ...data,\n        category: data.category || 'Other',\n        definition: data.definition || '',\n        diagnostic_criteria: data.diagnostic_criteria || [],\n        comorbidities: data.comorbidities || [],\n        differential_diagnoses: data.differential_diagnoses || [],\n        medications: data.medications || [],\n        psychotherapy_modalities: data.psychotherapy_modalities || [],\n        flashcard_count: data.flashcard_count || 0,\n        completed_flashcards: data.completed_flashcards || 0,\n        last_updated: data.last_updated || new Date().toISOString()\n      };\n      setEditData(initialData);\n      setHasInitialized(true);\n      setIsAnimating(true);\n      if (onAnimationStart) onAnimationStart();\n      \n      setTimeout(() => {\n        setIsAnimating(false);\n        if (onAnimationEnd) onAnimationEnd();\n      }, 600);\n    } else if (!isOpen && hasInitialized) {\n      setHasInitialized(false);\n      setScrollPositions({});\n      setEditingSections({});\n      setSectionData({});\n    }\n  }, [isOpen, data, hasInitialized, onAnimationStart, onAnimationEnd]);\n\n  // Enhanced effect for instant feedback - updates editData immediately when data changes\n  useEffect(() => {\n    if (isOpen && data && hasInitialized) {\n      // Update editData with latest data for instant feedback\n      setEditData(prevEditData => {\n        const updatedData = { \n          ...prevEditData, // Keep any local edits\n          ...data, // Override with latest data from parent\n          category: data.category || prevEditData.category || 'Other',\n          definition: data.definition || prevEditData.definition || '',\n          diagnostic_criteria: data.diagnostic_criteria || prevEditData.diagnostic_criteria || [],\n          comorbidities: data.comorbidities || prevEditData.comorbidities || [],\n          differential_diagnoses: data.differential_diagnoses || prevEditData.differential_diagnoses || [],\n          medications: data.medications || prevEditData.medications || [],\n          psychotherapy_modalities: data.psychotherapy_modalities || prevEditData.psychotherapy_modalities || [],\n          flashcard_count: data.flashcard_count || prevEditData.flashcard_count || 0,\n          completed_flashcards: data.completed_flashcards || prevEditData.completed_flashcards || 0,\n          last_updated: data.last_updated || prevEditData.last_updated || new Date().toISOString()\n        };\n        return updatedData;\n      });\n    }\n  }, [data, isOpen, hasInitialized]);\n\n  const progressPercentage = useMemo(() => {\n    const total = editData.flashcard_count || 0;\n    const completed = editData.completed_flashcards || 0;\n    return total > 0 ? Math.round((completed / total) * 100) : 0;\n  }, [editData.flashcard_count, editData.completed_flashcards]);\n\n  const handleClose = useCallback(() => {\n    if (isAnimating || isClosing) return;\n    \n    setIsAnimating(true);\n    setIsClosing(true);\n    if (onAnimationStart) onAnimationStart();\n    \n    // Set visibility to false to trigger exit animation\n    setIsVisible(false);\n  }, [onAnimationStart, isAnimating, isClosing]);\n\n  const handleSave = useCallback(async () => {\n    if (isLoading) return;\n    \n    setIsLoading(true);\n    try {\n      const updatedData = {\n        ...editData,\n        last_updated: new Date().toISOString()\n      };\n      \n      setMindMapData(prevData => {\n        const updatedTopics = prevData.topics.map(topic =>\n          String(topic.id) === String(data?.id) ? { ...topic, ...updatedData } : topic\n        );\n        const newData = { ...prevData, topics: updatedTopics };\n        autoSaveMindMapData(newData);\n        return newData;\n      });\n      \n      setEditData(updatedData);\n      addToast('Topic updated successfully', 'success');\n    } catch (error) {\n      console.error('Error saving topic:', error);\n      addToast('Failed to save topic', 'error');\n    } finally {\n      setIsLoading(false);\n    }\n  }, [data?.id, editData, setMindMapData, autoSaveMindMapData, addToast, isLoading]);\n\n  // Save current tab's scroll position before switching\n  const saveScrollPosition = useCallback((tabId) => {\n    const contentRef = contentRefs.current[tabId];\n    if (contentRef) {\n      setScrollPositions(prev => ({\n        ...prev,\n        [tabId]: contentRef.scrollTop\n      }));\n    }\n  }, []);\n\n  // Restore scroll position when switching to a tab\n  const restoreScrollPosition = useCallback((tabId) => {\n    setTimeout(() => {\n      const contentRef = contentRefs.current[tabId];\n      const savedPosition = scrollPositions[tabId];\n      if (contentRef && savedPosition) {\n        contentRef.scrollTop = savedPosition;\n      }\n    }, 100); // Small delay to ensure content is rendered\n  }, [scrollPositions]);\n\n  // Handle tab switching with scroll position preservation\n  const handleTabSwitch = useCallback((newTabId) => {\n    if (newTabId === activeTab || isTabTransitioning) return;\n    \n    // Save current tab's scroll position\n    saveScrollPosition(activeTab);\n    \n    setIsTabTransitioning(true);\n    setActiveTab(newTabId);\n    \n    setTimeout(() => {\n      setIsTabTransitioning(false);\n      // Restore new tab's scroll position\n      restoreScrollPosition(newTabId);\n    }, 300);\n  }, [activeTab, isTabTransitioning, saveScrollPosition, restoreScrollPosition]);\n\n// Enhanced category change handler - fixes node color updates and category saving\n  const handleCategoryChange = useCallback(async (newCategory) => {\n    console.log('Category changing to:', newCategory);\n    \n    // Get the new color for immediate update\n    const newColor = categoryColors[newCategory]?.primary || categoryColors.Other.primary;\n    console.log('New color for category:', newColor);\n    \n    // Update local edit data for immediate UI feedback\n    const updatedEditData = { ...editData, category: newCategory, color: newColor, last_updated: new Date().toISOString() };\n    setEditData(updatedEditData);\n    \n    // Update node color in mind map immediately and save\n    setMindMapData(prevData => {\n      const updatedTopics = prevData.topics.map(topic =>\n        String(topic.id) === String(data?.id) \n          ? { ...topic, category: newCategory, color: newColor, last_updated: new Date().toISOString() }\n          : topic\n      );\n      const newData = { ...prevData, topics: updatedTopics };\n      \n      // Auto-save the changes to backend immediately\n      console.log('Saving category change to backend:', newCategory, newColor);\n      autoSaveMindMapData(newData);\n      \n      // Force immediate node update after state change\n      setTimeout(() => {\n        console.log('Triggering force node update');\n        if (forceNodeUpdate) {\n          forceNodeUpdate();\n        }\n        if (syncNodeData) {\n          syncNodeData();\n        }\n      }, 200);\n      \n      return newData;\n    });\n    \n    addToast(`Category updated to ${newCategory}`, 'success');\n  }, [data?.id, editData, setMindMapData, categoryColors, autoSaveMindMapData, addToast, syncNodeData, forceNodeUpdate]);\n\n  // Get connected nodes for Connections tab\n  const connectedNodes = useMemo(() => {\n    if (!data?.id) return { cases: [], literature: [] };\n    \n    // This would typically come from your mind map data\n    // For now, return empty arrays - you can implement based on your data structure\n    return {\n      cases: [],\n      literature: []\n    };\n  }, [data?.id]);\n\n  const handleDelete = useCallback(async () => {\n    if (isLoading) return;\n    \n    if (!window.confirm('Are you sure you want to delete this topic?')) return;\n    \n    setIsLoading(true);\n    try {\n      setMindMapData(prevData => {\n        const updatedTopics = prevData.topics.filter(topic => String(topic.id) !== String(data?.id));\n        const newData = { ...prevData, topics: updatedTopics };\n        autoSaveMindMapData(newData);\n        return newData;\n      });\n      \n      addToast('Topic deleted successfully', 'success');\n      handleClose();\n    } catch (error) {\n      console.error('Error deleting topic:', error);\n      addToast('Failed to delete topic', 'error');\n    } finally {\n      setIsLoading(false);\n    }\n  }, [data?.id, setMindMapData, autoSaveMindMapData, addToast, handleClose, isLoading]);\n\n  // Individual section edit functions\n  const startEditingSection = useCallback((sectionId) => {\n    setEditingSections(prev => ({ ...prev, [sectionId]: true }));\n    // Initialize section data with current values\n    setSectionData(prev => ({\n      ...prev,\n      [sectionId]: { ...editData }\n    }));\n  }, [editData]);\n\n  const cancelEditingSection = useCallback((sectionId) => {\n    setEditingSections(prev => ({ ...prev, [sectionId]: false }));\n    setSectionData(prev => {\n      const newData = { ...prev };\n      delete newData[sectionId];\n      return newData;\n    });\n  }, []);\n\n  const saveSectionEdit = useCallback(async (sectionId) => {\n    if (isLoading) return;\n    \n    const sectionChanges = sectionData[sectionId];\n    if (!sectionChanges) return;\n    \n    setIsLoading(true);\n    try {\n      const updatedData = {\n        ...editData,\n        ...sectionChanges,\n        last_updated: new Date().toISOString()\n      };\n      \n      // Update editData immediately for instant feedback\n      setEditData(updatedData);\n      \n      setMindMapData(prevData => {\n        const updatedTopics = prevData.topics.map(topic =>\n          String(topic.id) === String(data?.id) ? { ...topic, ...updatedData } : topic\n        );\n        const newData = { ...prevData, topics: updatedTopics };\n        autoSaveMindMapData(newData);\n        return newData;\n      });\n      \n      setEditingSections(prev => ({ ...prev, [sectionId]: false }));\n      setSectionData(prev => {\n        const newData = { ...prev };\n        delete newData[sectionId];\n        return newData;\n      });\n      \n      addToast('Section updated successfully', 'success');\n    } catch (error) {\n      console.error('Error saving section:', error);\n      addToast('Failed to save section', 'error');\n    } finally {\n      setIsLoading(false);\n    }\n  }, [sectionData, editData, data?.id, setMindMapData, autoSaveMindMapData, addToast, isLoading]);\n\n  const updateSectionField = useCallback((sectionId, field, value) => {\n    setSectionData(prev => ({\n      ...prev,\n      [sectionId]: {\n        ...prev[sectionId],\n        [field]: value\n      }\n    }));\n  }, []);\n\n  // Tag management functions for list-based sections\n  const addTagToSection = useCallback((sectionId, field, tag) => {\n    if (!tag.trim()) return;\n    \n    const currentTags = sectionData[sectionId]?.[field] || editData[field] || [];\n    if (!currentTags.includes(tag.trim())) {\n      updateSectionField(sectionId, field, [...currentTags, tag.trim()]);\n    }\n  }, [sectionData, editData, updateSectionField]);\n\n  const removeTagFromSection = useCallback((sectionId, field, tagToRemove) => {\n    const currentTags = sectionData[sectionId]?.[field] || editData[field] || [];\n    updateSectionField(sectionId, field, currentTags.filter(tag => tag !== tagToRemove));\n  }, [sectionData, editData, updateSectionField]);\n\n  // Helper functions for new tag input management\n  const setNewTag = useCallback((sectionId, value) => {\n    setNewTags(prev => ({ ...prev, [sectionId]: value }));\n  }, []);\n\n  const getNewTag = useCallback((sectionId) => {\n    return newTags[sectionId] || '';\n  }, [newTags]);\n\n  const clearNewTag = useCallback((sectionId) => {\n    setNewTags(prev => {\n      const newTags = { ...prev };\n      delete newTags[sectionId];\n      return newTags;\n    });\n  }, []);\n\n  // Enhanced direct list management functions\n  const addItemDirectly = useCallback((field, item) => {\n    if (!item.trim()) return;\n    \n    const currentItems = editData[field] || [];\n    if (!currentItems.includes(item.trim())) {\n      const updatedItems = [...currentItems, item.trim()];\n      const updatedData = { \n        ...editData, \n        [field]: updatedItems, \n        last_updated: new Date().toISOString() \n      };\n      \n      // Update local state immediately\n      setEditData(updatedData);\n      \n      // Update mind map data and save\n      setMindMapData(prevData => {\n        const updatedTopics = prevData.topics.map(topic =>\n          String(topic.id) === String(data?.id) ? { ...topic, ...updatedData } : topic\n        );\n        const newData = { ...prevData, topics: updatedTopics };\n        autoSaveMindMapData(newData);\n        return newData;\n      });\n      \n      addToast(`${field} updated successfully`, 'success');\n    }\n  }, [editData, data?.id, setMindMapData, autoSaveMindMapData, addToast]);\n\n  const removeItemDirectly = useCallback((field, itemToRemove) => {\n    const currentItems = editData[field] || [];\n    const updatedItems = currentItems.filter(item => item !== itemToRemove);\n    const updatedData = { \n      ...editData, \n      [field]: updatedItems, \n      last_updated: new Date().toISOString() \n    };\n    \n    // Update local state immediately\n    setEditData(updatedData);\n    \n    // Update mind map data and save\n    setMindMapData(prevData => {\n      const updatedTopics = prevData.topics.map(topic =>\n        String(topic.id) === String(data?.id) ? { ...topic, ...updatedData } : topic\n      );\n      const newData = { ...prevData, topics: updatedTopics };\n      autoSaveMindMapData(newData);\n      return newData;\n    });\n    \n    addToast(`${field} updated successfully`, 'success');\n  }, [editData, data?.id, setMindMapData, autoSaveMindMapData, addToast]);\n\n  if (!isOpen) return null;\n\n  return (\n    <AnimatePresence mode=\"wait\" onExitComplete={() => {\n      setIsAnimating(false);\n      setIsClosing(false);\n      setHasInitialized(false);\n      onClose();\n      if (onAnimationEnd) onAnimationEnd();\n    }}>\n      {isVisible && (\n        <motion.div\n          key={`topic-modal-${data?.id || 'default'}`}\n          initial=\"hidden\"\n          animate=\"visible\"\n          exit=\"exit\"\n          variants={backdropVariants}\n          className=\"fixed inset-0 bg-black flex items-center justify-center z-50\"\n          style={{ \n            willChange: 'backdrop-filter, opacity',\n            backfaceVisibility: 'hidden',\n            transform: 'translate3d(0, 0, 0)'\n          }}\n          onClick={(e) => e.target === e.currentTarget && handleClose()}\n        >\n          <motion.div\n            initial=\"hidden\"\n            animate=\"visible\"\n            exit=\"exit\"\n            variants={modalVariants}\n            className=\"bg-white rounded-2xl shadow-2xl max-w-4xl w-full mx-4 max-h-[85vh] overflow-hidden\"\n            style={{ \n              willChange: 'transform, opacity, scale',\n              backfaceVisibility: 'hidden'\n            }}\n            onClick={(e) => e.stopPropagation()}\n            onAnimationStart={() => {\n              setIsAnimating(true);\n              if (onAnimationStart) onAnimationStart();\n            }}\n            onAnimationComplete={() => {\n              setIsAnimating(false);\n              if (onAnimationEnd) onAnimationEnd();\n            }}\n          >\n            <motion.div \n              initial=\"hidden\"\n              animate=\"visible\"\n              exit=\"exit\"\n              variants={contentVariants}\n              className=\"bg-gradient-to-br from-slate-900 to-slate-800 text-white px-6 py-4 flex items-center justify-between\"\n            >\n              <div className=\"flex items-center gap-3\">\n                <BookOpen size={24} />\n                <h2 className=\"text-xl font-semibold\">Topic Details</h2>\n              </div>\n              <button\n                onClick={handleClose}\n                className=\"text-slate-400 hover:text-white transition-colors\"\n              >\n                <X size={24} />\n              </button>\n            </motion.div>\n\n            {/* Tab Navigation */}\n            <div className=\"bg-gradient-to-r from-slate-900 via-slate-800 to-slate-900 border-b border-slate-600\">\n              <nav className=\"flex flex-wrap gap-2 px-6 py-4\">\n                {tabs.map(({ id, label, icon: Icon }) => (\n                  <motion.button\n                    key={id}\n                    onClick={() => handleTabSwitch(id)}\n                    className={`relative flex items-center gap-2 px-4 py-3 rounded-xl font-medium text-sm transition-all duration-300 ${\n                      activeTab === id\n                        ? 'bg-gradient-to-r from-purple-500 to-indigo-600 text-white shadow-lg shadow-purple-500/25'\n                        : 'text-slate-300 hover:text-white hover:bg-slate-700/50 hover:shadow-md'\n                    }`}\n                    whileHover={{ scale: activeTab === id ? 1 : 1.02 }}\n                    whileTap={{ scale: 0.98 }}\n                    disabled={isTabTransitioning}\n                  >\n                    <Icon size={16} className={activeTab === id ? 'drop-shadow-sm' : ''} />\n                    {label}\n                    \n                    {activeTab === id && (\n                      <motion.div\n                        layoutId=\"topicActiveTab\"\n                        className=\"absolute inset-0 bg-gradient-to-r from-purple-400/20 to-indigo-500/20 rounded-xl blur-sm\"\n                        initial={false}\n                        transition={{ duration: 0.3, ease: \"easeOut\" }}\n                      />\n                    )}\n                  </motion.button>\n                ))}\n              </nav>\n            </div>\n\n            {/* Dark Content Area */}\n            <motion.div\n              className=\"flex-1 bg-gradient-to-br from-slate-900 to-slate-800 overflow-hidden\"\n              animate={{ opacity: isTabTransitioning ? 0.7 : 1 }}\n              transition={{ duration: 0.2 }}\n            >\n              <AnimatePresence mode=\"wait\">\n                {/* Overview Tab */}\n                {activeTab === 'overview' && (\n                  <motion.div\n                    key=\"overview\"\n                    ref={el => contentRefs.current.overview = el}\n                    initial={{ opacity: 0, x: -20 }}\n                    animate={{ opacity: 1, x: 0 }}\n                    exit={{ opacity: 0, x: 20 }}\n                    transition={{ duration: 0.3 }}\n                    className=\"h-full overflow-y-auto p-6 space-y-6\"\n                  >\n                    {/* Title Section */}\n                    <motion.div \n                      variants={cardVariants}\n                      animate={editingSections.title ? \"edit\" : \"visible\"}\n                      className=\"bg-slate-800/50 backdrop-blur-sm rounded-xl p-6 border border-slate-700\"\n                    >\n                      <div className=\"flex items-center justify-between mb-4\">\n                        <h3 className=\"text-lg font-semibold text-white\">Title</h3>\n                        {!editingSections.title && (\n                          <motion.button\n                            whileHover={{ scale: 1.1 }}\n                            whileTap={{ scale: 0.9 }}\n                            onClick={() => startEditingSection('title')}\n                            className=\"text-slate-400 hover:text-white transition-colors p-1 rounded\"\n                            title=\"Edit title\"\n                          >\n                            <Edit3 size={16} />\n                          </motion.button>\n                        )}\n                      </div>\n                      \n                      {editingSections.title ? (\n                        <motion.div \n                          className=\"space-y-4\"\n                          initial={{ opacity: 0, y: 10 }}\n                          animate={{ opacity: 1, y: 0 }}\n                          transition={{ duration: 0.3 }}\n                        >\n                          <input\n                            type=\"text\"\n                            value={sectionData.title?.title || editData.title || ''}\n                            onChange={(e) => updateSectionField('title', 'title', e.target.value)}\n                            className=\"w-full text-xl font-bold bg-slate-700 border border-slate-600 rounded-lg px-4 py-3 text-white placeholder-slate-400 focus:ring-2 focus:ring-purple-500 focus:border-purple-500\"\n                            placeholder=\"Topic title...\"\n                          />\n                          <div className=\"flex justify-end gap-2\">\n                            <motion.button\n                              whileHover={{ scale: 1.02 }}\n                              whileTap={{ scale: 0.98 }}\n                              onClick={() => cancelEditingSection('title')}\n                              className=\"px-3 py-2 text-slate-300 hover:text-white border border-slate-600 rounded-lg hover:bg-slate-700 transition-colors text-sm\"\n                            >\n                              Cancel\n                            </motion.button>\n                            <motion.button\n                              whileHover={{ scale: 1.02 }}\n                              whileTap={{ scale: 0.98 }}\n                              onClick={() => saveSectionEdit('title')}\n                              disabled={isLoading}\n                              className=\"px-3 py-2 bg-purple-600 text-white rounded-lg hover:bg-purple-700 transition-colors text-sm flex items-center gap-2\"\n                            >\n                              {isLoading ? <Loader2 size={14} className=\"animate-spin\" /> : <Save size={14} />}\n                              Save\n                            </motion.button>\n                          </div>\n                        </motion.div>\n                      ) : (\n                        <motion.h1 \n                          className=\"text-2xl font-bold text-white\"\n                          whileHover={{ scale: 1.01 }}\n                          transition={{ duration: 0.2 }}\n                        >\n                          {editData.title || 'Untitled Topic'}\n                        </motion.h1>\n                      )}\n                    </motion.div>\n\n                    {/* Category and Progress Row */}\n                    <div className=\"grid md:grid-cols-2 gap-6\">\n                      {/* Category Selection - Direct Access (No Edit Button) */}\n                      <motion.div \n                        variants={cardVariants}\n                        initial=\"hidden\"\n                        animate=\"visible\"\n                        className=\"bg-slate-800/50 backdrop-blur-sm rounded-xl p-6 border border-slate-700\"\n                      >\n                        <label className=\"block text-sm font-medium text-slate-300 mb-3\">Category</label>\n                        <motion.select\n                          value={editData.category || 'Other'}\n                          onChange={(e) => handleCategoryChange(e.target.value)}\n                          className=\"w-full bg-slate-700 border border-slate-600 rounded-lg px-4 py-3 text-white focus:ring-2 focus:ring-purple-500 focus:border-purple-500 hover:bg-slate-650 transition-colors cursor-pointer\"\n                          whileFocus={{ scale: 1.02 }}\n                        >\n                          {Object.keys(categoryColors).map(category => (\n                            <option key={category} value={category}>{category}</option>\n                          ))}\n                        </motion.select>\n                        <p className=\"text-xs text-slate-400 mt-2\">\n                          Changes are saved automatically and will update the node color\n                        </p>\n                      </motion.div>\n\n                      {/* Flashcard Progress */}\n                      <motion.div \n                        variants={cardVariants}\n                        initial=\"hidden\"\n                        animate=\"visible\"\n                        className=\"bg-slate-800/50 backdrop-blur-sm rounded-xl p-6 border border-slate-700\"\n                      >\n                        <div className=\"flex items-center justify-between mb-3\">\n                          <span className=\"text-sm font-medium text-slate-300\">Flashcard Progress</span>\n                          <span className=\"text-sm text-slate-400\">\n                            {editData.completed_flashcards || 0} / {editData.flashcard_count || 0}\n                          </span>\n                        </div>\n                        <div className=\"w-full bg-slate-700 rounded-full h-3 mb-2\">\n                          <motion.div\n                            className=\"h-3 rounded-full bg-gradient-to-r from-purple-500 to-indigo-600\"\n                            initial={{ width: 0 }}\n                            animate={{ width: `${progressPercentage}%` }}\n                            transition={{ duration: 1, ease: \"easeOut\" }}\n                          />\n                        </div>\n                        <div className=\"text-right\">\n                          <span className=\"text-lg font-bold text-white\">{progressPercentage}%</span>\n                          <span className=\"text-sm text-slate-400 ml-1\">complete</span>\n                        </div>\n                      </motion.div>\n                    </div>\n\n                    {/* Last Updated */}\n                    <div className=\"text-xs text-slate-500 text-right\">\n                      Last updated: {editData.last_updated ? new Date(editData.last_updated).toLocaleString() : 'Never'}\n                    </div>\n                  </motion.div>\n                )}\n\n                {/* Concept Tab */}\n                {activeTab === 'concept' && (\n                  <motion.div\n                    key=\"concept\"\n                    ref={el => contentRefs.current.concept = el}\n                    initial={{ opacity: 0, x: -20 }}\n                    animate={{ opacity: 1, x: 0 }}\n                    exit={{ opacity: 0, x: 20 }}\n                    transition={{ duration: 0.3 }}\n                    className=\"h-full overflow-y-auto p-6 space-y-6\"\n                  >\n                    {/* Definition Section */}\n                    <motion.div \n                      variants={cardVariants}\n                      animate={editingSections.definition ? \"edit\" : \"visible\"}\n                      className=\"bg-slate-800/50 backdrop-blur-sm rounded-xl p-6 border border-slate-700\"\n                    >\n                      <div className=\"flex items-center justify-between mb-4\">\n                        <h3 className=\"text-lg font-semibold text-white flex items-center gap-2\">\n                          <Brain size={20} className=\"text-purple-400\" />\n                          Definition\n                        </h3>\n                        {!editingSections.definition && (\n                          <motion.button\n                            whileHover={{ scale: 1.1 }}\n                            whileTap={{ scale: 0.9 }}\n                            onClick={() => startEditingSection('definition')}\n                            className=\"text-slate-400 hover:text-white transition-colors p-1 rounded\"\n                            title=\"Edit definition\"\n                          >\n                            <Edit3 size={16} />\n                          </motion.button>\n                        )}\n                      </div>\n                      \n                      {editingSections.definition ? (\n                        <motion.div \n                          className=\"space-y-4\"\n                          initial={{ opacity: 0, y: 10 }}\n                          animate={{ opacity: 1, y: 0 }}\n                          transition={{ duration: 0.3 }}\n                        >\n                          <textarea\n                            value={sectionData.definition?.definition || editData.definition || ''}\n                            onChange={(e) => updateSectionField('definition', 'definition', e.target.value)}\n                            rows={4}\n                            className=\"w-full bg-slate-700 border border-slate-600 rounded-lg px-4 py-3 text-white placeholder-slate-400 focus:ring-2 focus:ring-purple-500 focus:border-purple-500 resize-none\"\n                            placeholder=\"Enter the definition of this topic...\"\n                          />\n                          <div className=\"flex justify-end gap-2\">\n                            <motion.button\n                              whileHover={{ scale: 1.02 }}\n                              whileTap={{ scale: 0.98 }}\n                              onClick={() => cancelEditingSection('definition')}\n                              className=\"px-3 py-2 text-slate-300 hover:text-white border border-slate-600 rounded-lg hover:bg-slate-700 transition-colors text-sm\"\n                            >\n                              Cancel\n                            </motion.button>\n                            <motion.button\n                              whileHover={{ scale: 1.02 }}\n                              whileTap={{ scale: 0.98 }}\n                              onClick={() => saveSectionEdit('definition')}\n                              disabled={isLoading}\n                              className=\"px-3 py-2 bg-purple-600 text-white rounded-lg hover:bg-purple-700 transition-colors text-sm flex items-center gap-2\"\n                            >\n                              {isLoading ? <Loader2 size={14} className=\"animate-spin\" /> : <Save size={14} />}\n                              Save\n                            </motion.button>\n                          </div>\n                        </motion.div>\n                      ) : (\n                        <motion.div \n                          className=\"text-slate-300 leading-relaxed\"\n                          whileHover={{ scale: 1.01 }}\n                          transition={{ duration: 0.2 }}\n                        >\n                          {editData.definition || <span className=\"text-slate-500 italic\">No definition provided</span>}\n                        </motion.div>\n                      )}\n                    </motion.div>\n\n                    {/* Diagnostic Criteria Section */}\n                    <motion.div \n                      variants={cardVariants}\n                      animate={editingSections.diagnostic_criteria ? \"edit\" : \"visible\"}\n                      className=\"bg-slate-800/50 backdrop-blur-sm rounded-xl p-6 border border-slate-700\"\n                    >\n                      <div className=\"flex items-center justify-between mb-4\">\n                        <h3 className=\"text-lg font-semibold text-white flex items-center gap-2\">\n                          <FileText size={20} className=\"text-indigo-400\" />\n                          Diagnostic Criteria\n                        </h3>\n                        <div className=\"flex items-center gap-2\">\n                          {!editingSections.diagnostic_criteria && (\n                            <motion.button\n                              whileHover={{ scale: 1.1 }}\n                              whileTap={{ scale: 0.9 }}\n                              onClick={() => startEditingSection('diagnostic_criteria')}\n                              className=\"text-slate-400 hover:text-white transition-colors p-1 rounded\"\n                              title=\"Edit diagnostic criteria\"\n                            >\n                              <Edit3 size={16} />\n                            </motion.button>\n                          )}\n                          <button\n                            onClick={() => setExpandedCriteria(!expandedCriteria)}\n                            className=\"text-slate-400 hover:text-white transition-colors\"\n                          >\n                            {expandedCriteria ? <ChevronDown size={20} /> : <ChevronRight size={20} />}\n                          </button>\n                        </div>\n                      </div>\n                      \n                      <AnimatePresence>\n                        {expandedCriteria && (\n                          <motion.div\n                            initial={{ height: 0, opacity: 0 }}\n                            animate={{ height: 'auto', opacity: 1 }}\n                            exit={{ height: 0, opacity: 0 }}\n                            transition={{ duration: 0.3 }}\n                            className=\"overflow-hidden\"\n                          >\n                            {editingSections.diagnostic_criteria ? (\n                              <div className=\"space-y-4\">\n                                <textarea\n                                  value={Array.isArray(sectionData.diagnostic_criteria?.diagnostic_criteria) \n                                    ? sectionData.diagnostic_criteria.diagnostic_criteria.join('\\n') \n                                    : Array.isArray(editData.diagnostic_criteria) \n                                      ? editData.diagnostic_criteria.join('\\n') \n                                      : editData.diagnostic_criteria || ''}\n                                  onChange={(e) => updateSectionField('diagnostic_criteria', 'diagnostic_criteria', e.target.value.split('\\n').filter(item => item.trim()))}\n                                  rows={6}\n                                  className=\"w-full bg-slate-700 border border-slate-600 rounded-lg px-4 py-3 text-white placeholder-slate-400 focus:ring-2 focus:ring-purple-500 focus:border-purple-500 resize-none\"\n                                  placeholder=\"Enter diagnostic criteria (one per line)...\"\n                                />\n                                <div className=\"flex justify-end gap-2\">\n                                  <button\n                                    onClick={() => cancelEditingSection('diagnostic_criteria')}\n                                    className=\"px-3 py-2 text-slate-300 hover:text-white border border-slate-600 rounded-lg hover:bg-slate-700 transition-colors text-sm\"\n                                  >\n                                    Cancel\n                                  </button>\n                                  <motion.button\n                                    onClick={() => saveSectionEdit('diagnostic_criteria')}\n                                    disabled={isLoading}\n                                    className=\"px-3 py-2 bg-purple-600 text-white rounded-lg hover:bg-purple-700 transition-colors text-sm flex items-center gap-2\"\n                                  >\n                                    {isLoading ? <Loader2 size={14} className=\"animate-spin\" /> : <Save size={14} />}\n                                    Save\n                                  </motion.button>\n                                </div>\n                              </div>\n                            ) : (\n                              <div className=\"space-y-2\">\n                                {(editData.diagnostic_criteria || []).length > 0 ? (\n                                  editData.diagnostic_criteria.map((criteria, index) => (\n                                    <div key={index} className=\"flex items-start gap-3\">\n                                      <span className=\"text-purple-400 font-medium\">{index + 1}.</span>\n                                      <span className=\"text-slate-300\">{criteria}</span>\n                                    </div>\n                                  ))\n                                ) : (\n                                  <span className=\"text-slate-500 italic\">No diagnostic criteria provided</span>\n                                )}\n                              </div>\n                            )}\n                          </motion.div>\n                        )}\n                      </AnimatePresence>\n                    </motion.div>\n                  </motion.div>\n                )}\n\n                {/* Clinical Associations Tab */}\n                {activeTab === 'clinical' && (\n                  <motion.div\n                    key=\"clinical\"\n                    ref={el => contentRefs.current.clinical = el}\n                    initial={{ opacity: 0, x: -20 }}\n                    animate={{ opacity: 1, x: 0 }}\n                    exit={{ opacity: 0, x: 20 }}\n                    transition={{ duration: 0.3 }}\n                    className=\"h-full overflow-y-auto p-6 space-y-6\"\n                  >\n                    {/* Comorbidities Section */}\n                    <motion.div \n                      variants={cardVariants}\n                      initial=\"hidden\"\n                      animate=\"visible\"\n                      className=\"bg-slate-800/50 backdrop-blur-sm rounded-xl p-6 border border-slate-700\"\n                    >\n                      <h3 className=\"text-lg font-semibold text-white mb-4 flex items-center gap-2\">\n                        <Users size={20} className=\"text-amber-400\" />\n                        Comorbidities\n                      </h3>\n                      \n                      {/* Current comorbidities list */}\n                      <div className=\"space-y-2 mb-4\">\n                        <AnimatePresence>\n                          {(editData.comorbidities || []).map((comorbidity, index) => (\n                            <motion.div\n                              key={index}\n                              initial={{ opacity: 0, scale: 0.8 }}\n                              animate={{ opacity: 1, scale: 1 }}\n                              exit={{ opacity: 0, scale: 0.8 }}\n                              className=\"flex items-center justify-between p-3 bg-amber-600/10 rounded-lg border border-amber-600/20 group hover:bg-amber-600/15 transition-colors\"\n                            >\n                              <span className=\"text-amber-300\">{comorbidity}</span>\n                              <motion.button\n                                whileHover={{ scale: 1.1 }}\n                                whileTap={{ scale: 0.9 }}\n                                onClick={() => removeItemDirectly('comorbidities', comorbidity)}\n                                className=\"text-amber-400 hover:text-amber-200 opacity-0 group-hover:opacity-100 transition-opacity p-1 rounded\"\n                                title=\"Remove comorbidity\"\n                              >\n                                <X size={16} />\n                              </motion.button>\n                            </motion.div>\n                          ))}\n                        </AnimatePresence>\n                      </div>\n                      \n                      {/* Add new comorbidity */}\n                      <div className=\"flex gap-2\">\n                        <input\n                          type=\"text\"\n                          value={getNewTag('comorbidities')}\n                          onChange={(e) => setNewTag('comorbidities', e.target.value)}\n                          placeholder=\"Add comorbidity...\"\n                          className=\"flex-1 bg-slate-700 border border-slate-600 rounded-lg px-3 py-2 text-white placeholder-slate-400 focus:ring-2 focus:ring-amber-500 focus:border-amber-500 transition-colors\"\n                          onKeyPress={(e) => {\n                            if (e.key === 'Enter' && getNewTag('comorbidities').trim()) {\n                              addItemDirectly('comorbidities', getNewTag('comorbidities'));\n                              clearNewTag('comorbidities');\n                            }\n                          }}\n                        />\n                        <motion.button\n                          whileHover={{ scale: 1.02 }}\n                          whileTap={{ scale: 0.98 }}\n                          onClick={() => {\n                            if (getNewTag('comorbidities').trim()) {\n                              addItemDirectly('comorbidities', getNewTag('comorbidities'));\n                              clearNewTag('comorbidities');\n                            }\n                          }}\n                          className=\"px-4 py-2 bg-amber-600 text-white rounded-lg hover:bg-amber-700 transition-colors flex items-center gap-2\"\n                        >\n                          <Plus size={16} />\n                          Add\n                        </motion.button>\n                      </div>\n                      \n                      {(editData.comorbidities || []).length === 0 && (\n                        <p className=\"text-slate-500 italic text-center py-4\">No comorbidities added yet</p>\n                      )}\n                    </motion.div>\n\n                    {/* Differential Diagnoses Section */}\n                    <motion.div \n                      variants={cardVariants}\n                      initial=\"hidden\"\n                      animate=\"visible\"\n                      className=\"bg-slate-800/50 backdrop-blur-sm rounded-xl p-6 border border-slate-700\"\n                    >\n                      <h3 className=\"text-lg font-semibold text-white mb-4 flex items-center gap-2\">\n                        <Activity size={20} className=\"text-cyan-400\" />\n                        Differential Diagnoses\n                      </h3>\n                      \n                      {/* Current differential diagnoses list */}\n                      <div className=\"space-y-2 mb-4\">\n                        <AnimatePresence>\n                          {(editData.differential_diagnoses || []).map((diagnosis, index) => (\n                            <motion.div\n                              key={index}\n                              initial={{ opacity: 0, scale: 0.8 }}\n                              animate={{ opacity: 1, scale: 1 }}\n                              exit={{ opacity: 0, scale: 0.8 }}\n                              className=\"flex items-center justify-between p-3 bg-cyan-600/10 rounded-lg border border-cyan-600/20 group hover:bg-cyan-600/15 transition-colors\"\n                            >\n                              <span className=\"text-cyan-300\">{diagnosis}</span>\n                              <motion.button\n                                whileHover={{ scale: 1.1 }}\n                                whileTap={{ scale: 0.9 }}\n                                onClick={() => removeItemDirectly('differential_diagnoses', diagnosis)}\n                                className=\"text-cyan-400 hover:text-cyan-200 opacity-0 group-hover:opacity-100 transition-opacity p-1 rounded\"\n                                title=\"Remove differential diagnosis\"\n                              >\n                                <X size={16} />\n                              </motion.button>\n                            </motion.div>\n                          ))}\n                        </AnimatePresence>\n                      </div>\n                      \n                      {/* Add new differential diagnosis */}\n                      <div className=\"flex gap-2\">\n                        <input\n                          type=\"text\"\n                          value={getNewTag('differential_diagnoses')}\n                          onChange={(e) => setNewTag('differential_diagnoses', e.target.value)}\n                          placeholder=\"Add differential diagnosis...\"\n                          className=\"flex-1 bg-slate-700 border border-slate-600 rounded-lg px-3 py-2 text-white placeholder-slate-400 focus:ring-2 focus:ring-cyan-500 focus:border-cyan-500 transition-colors\"\n                          onKeyPress={(e) => {\n                            if (e.key === 'Enter' && getNewTag('differential_diagnoses').trim()) {\n                              addItemDirectly('differential_diagnoses', getNewTag('differential_diagnoses'));\n                              clearNewTag('differential_diagnoses');\n                            }\n                          }}\n                        />\n                        <motion.button\n                          whileHover={{ scale: 1.02 }}\n                          whileTap={{ scale: 0.98 }}\n                          onClick={() => {\n                            if (getNewTag('differential_diagnoses').trim()) {\n                              addItemDirectly('differential_diagnoses', getNewTag('differential_diagnoses'));\n                              clearNewTag('differential_diagnoses');\n                            }\n                          }}\n                          className=\"px-4 py-2 bg-cyan-600 text-white rounded-lg hover:bg-cyan-700 transition-colors flex items-center gap-2\"\n                        >\n                          <Plus size={16} />\n                          Add\n                        </motion.button>\n                      </div>\n                      \n                      {(editData.differential_diagnoses || []).length === 0 && (\n                        <p className=\"text-slate-500 italic text-center py-4\">No differential diagnoses added yet</p>\n                      )}\n                    </motion.div>\n                  </motion.div>\n                )}\n\n                {/* Treatment Tab */}\n                {activeTab === 'treatment' && (\n                  <motion.div\n                    key=\"treatment\"\n                    ref={el => contentRefs.current.treatment = el}\n                    initial={{ opacity: 0, x: -20 }}\n                    animate={{ opacity: 1, x: 0 }}\n                    exit={{ opacity: 0, x: 20 }}\n                    transition={{ duration: 0.3 }}\n                    className=\"h-full overflow-y-auto p-6 space-y-6\"\n                  >\n                    {/* Medications Section */}\n                    <motion.div \n                      variants={cardVariants}\n                      initial=\"hidden\"\n                      animate=\"visible\"\n                      className=\"bg-slate-800/50 backdrop-blur-sm rounded-xl p-6 border border-slate-700\"\n                    >\n                      <h3 className=\"text-lg font-semibold text-white mb-4 flex items-center gap-2\">\n                        <Pill size={20} className=\"text-green-400\" />\n                        Medications\n                      </h3>\n                      \n                      {/* Current medications list */}\n                      <div className=\"space-y-2 mb-4\">\n                        <AnimatePresence>\n                          {(editData.medications || []).map((medication, index) => (\n                            <motion.div\n                              key={index}\n                              initial={{ opacity: 0, scale: 0.8 }}\n                              animate={{ opacity: 1, scale: 1 }}\n                              exit={{ opacity: 0, scale: 0.8 }}\n                              className=\"flex items-center justify-between p-3 bg-green-600/10 rounded-lg border border-green-600/20 group hover:bg-green-600/15 transition-colors\"\n                            >\n                              <span className=\"text-green-300\">{medication}</span>\n                              <motion.button\n                                whileHover={{ scale: 1.1 }}\n                                whileTap={{ scale: 0.9 }}\n                                onClick={() => removeItemDirectly('medications', medication)}\n                                className=\"text-green-400 hover:text-green-200 opacity-0 group-hover:opacity-100 transition-opacity p-1 rounded\"\n                                title=\"Remove medication\"\n                              >\n                                <X size={16} />\n                              </motion.button>\n                            </motion.div>\n                          ))}\n                        </AnimatePresence>\n                      </div>\n                      \n                      {/* Add new medication */}\n                      <div className=\"flex gap-2\">\n                        <input\n                          type=\"text\"\n                          value={getNewTag('medications')}\n                          onChange={(e) => setNewTag('medications', e.target.value)}\n                          placeholder=\"Add medication...\"\n                          className=\"flex-1 bg-slate-700 border border-slate-600 rounded-lg px-3 py-2 text-white placeholder-slate-400 focus:ring-2 focus:ring-green-500 focus:border-green-500 transition-colors\"\n                          onKeyPress={(e) => {\n                            if (e.key === 'Enter' && getNewTag('medications').trim()) {\n                              addItemDirectly('medications', getNewTag('medications'));\n                              clearNewTag('medications');\n                            }\n                          }}\n                        />\n                        <motion.button\n                          whileHover={{ scale: 1.02 }}\n                          whileTap={{ scale: 0.98 }}\n                          onClick={() => {\n                            if (getNewTag('medications').trim()) {\n                              addItemDirectly('medications', getNewTag('medications'));\n                              clearNewTag('medications');\n                            }\n                          }}\n                          className=\"px-4 py-2 bg-green-600 text-white rounded-lg hover:bg-green-700 transition-colors flex items-center gap-2\"\n                        >\n                          <Plus size={16} />\n                          Add\n                        </motion.button>\n                      </div>\n                      \n                      {(editData.medications || []).length === 0 && (\n                        <p className=\"text-slate-500 italic text-center py-4\">No medications added yet</p>\n                      )}\n                    </motion.div>\n\n                    {/* Psychotherapy Modalities Section */}\n                    <motion.div \n                      variants={cardVariants}\n                      animate={editingSections.psychotherapy_modalities ? \"edit\" : \"visible\"}\n                      className=\"bg-slate-800/50 backdrop-blur-sm rounded-xl p-6 border border-slate-700\"\n                    >\n                      <div className=\"flex items-center justify-between mb-4\">\n                        <h3 className=\"text-lg font-semibold text-white flex items-center gap-2\">\n                          <Brain size={20} className=\"text-purple-400\" />\n                          Psychotherapy Modalities\n                        </h3>\n                        {!editingSections.psychotherapy_modalities && (\n                          <motion.button\n                            whileHover={{ scale: 1.1 }}\n                            whileTap={{ scale: 0.9 }}\n                            onClick={() => startEditingSection('psychotherapy_modalities')}\n                            className=\"text-slate-400 hover:text-white transition-colors p-1 rounded\"\n                            title=\"Edit psychotherapy modalities\"\n                          >\n                            <Edit3 size={16} />\n                          </motion.button>\n                        )}\n                      </div>\n                      \n                      {editingSections.psychotherapy_modalities ? (\n                        <div className=\"space-y-4\">\n                          <textarea\n                            value={Array.isArray(sectionData.psychotherapy_modalities?.psychotherapy_modalities) \n                              ? sectionData.psychotherapy_modalities.psychotherapy_modalities.join('\\n') \n                              : Array.isArray(editData.psychotherapy_modalities)\n                                ? editData.psychotherapy_modalities.join('\\n')\n                                : editData.psychotherapy_modalities || ''}\n                            onChange={(e) => updateSectionField('psychotherapy_modalities', 'psychotherapy_modalities', e.target.value.split('\\n').filter(item => item.trim()))}\n                            rows={4}\n                            className=\"w-full bg-slate-700 border border-slate-600 rounded-lg px-4 py-3 text-white placeholder-slate-400 focus:ring-2 focus:ring-purple-500 focus:border-purple-500 resize-none\"\n                            placeholder=\"Enter psychotherapy modalities (one per line)...\"\n                          />\n                          <div className=\"flex justify-end gap-2\">\n                            <button\n                              onClick={() => cancelEditingSection('psychotherapy_modalities')}\n                              className=\"px-3 py-2 text-slate-300 hover:text-white border border-slate-600 rounded-lg hover:bg-slate-700 transition-colors text-sm\"\n                            >\n                              Cancel\n                            </button>\n                            <motion.button\n                              onClick={() => saveSectionEdit('psychotherapy_modalities')}\n                              disabled={isLoading}\n                              className=\"px-3 py-2 bg-purple-600 text-white rounded-lg hover:bg-purple-700 transition-colors text-sm flex items-center gap-2\"\n                            >\n                              {isLoading ? <Loader2 size={14} className=\"animate-spin\" /> : <Save size={14} />}\n                              Save\n                            </motion.button>\n                          </div>\n                        </div>\n                      ) : (\n                        <div className=\"space-y-2\">\n                          {(editData.psychotherapy_modalities || []).length > 0 ? (\n                            editData.psychotherapy_modalities.map((modality, index) => (\n                              <div key={index} className=\"flex items-center gap-3\">\n                                <span className=\"text-purple-400 font-medium\">•</span>\n                                <span className=\"text-slate-300\">{modality}</span>\n                              </div>\n                            ))\n                          ) : (\n                            <span className=\"text-slate-500 italic\">No psychotherapy modalities added</span>\n                          )}\n                        </div>\n                      )}\n                    </motion.div>\n                  </motion.div>\n                )}\n\n                {/* Connections Tab */}\n                {activeTab === 'connections' && (\n                  <motion.div\n                    key=\"connections\"\n                    ref={el => contentRefs.current.connections = el}\n                    initial={{ opacity: 0, x: -20 }}\n                    animate={{ opacity: 1, x: 0 }}\n                    exit={{ opacity: 0, x: 20 }}\n                    transition={{ duration: 0.3 }}\n                    className=\"h-full overflow-y-auto p-6 space-y-6\"\n                  >\n                    <motion.div \n                      variants={cardVariants}\n                      initial=\"hidden\"\n                      animate=\"visible\"\n                      className=\"bg-slate-800/50 backdrop-blur-sm rounded-xl p-6 border border-slate-700\"\n                    >\n                      <h3 className=\"text-lg font-semibold text-white mb-4 flex items-center gap-2\">\n                        <Link2 size={20} className=\"text-blue-400\" />\n                        Connected Nodes\n                      </h3>\n                      <p className=\"text-slate-400 text-center py-8\">\n                        This section will show nodes connected to this topic in the mind map.\n                      </p>\n                    </motion.div>\n                  </motion.div>\n                )}\n              </AnimatePresence>\n            </motion.div>\n          </motion.div>\n        </motion.div>\n      )}\n    </AnimatePresence>\n  );\n};\n\nexport default TopicModal;","// Enhanced Task Modal with tabbed interface and advanced animations\nimport React, { useState, useEffect, useMemo, useCallback, useRef } from 'react';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport { \n  X, \n  CheckSquare, \n  Clock, \n  AlertTriangle, \n  Flag, \n  Calendar, \n  Link2, \n  Target,\n  Edit3,\n  Trash2,\n  Save,\n  Loader2,\n  Star,\n  Play,\n  Pause,\n  RotateCcw,\n  TrendingUp,\n  Users,\n  BookOpen,\n  FileText,\n  Tag\n} from 'lucide-react';\n\n// Animation variants for Framer Motion\nconst modalVariants = {\n  hidden: {\n    opacity: 0,\n    scale: 0.3,\n    y: 50,\n    rotate: -5,\n  },\n  visible: {\n    opacity: 1,\n    scale: 1,\n    y: 0,\n    rotate: 0,\n    transition: {\n      type: \"spring\",\n      damping: 25,\n      stiffness: 300,\n      duration: 0.6,\n    }\n  },\n  exit: {\n    opacity: 0,\n    scale: 0.7,\n    y: 30,\n    rotate: -3,\n    transition: {\n      type: \"easeInOut\",\n      duration: 0.4,\n    }\n  }\n};\n\nconst backdropVariants = {\n  hidden: { \n    opacity: 0,\n    backdropFilter: 'blur(0px)'\n  },\n  visible: { \n    opacity: 1,\n    backdropFilter: 'blur(8px)',\n    transition: {\n      duration: 0.4,\n      ease: \"easeOut\"\n    }\n  },\n  exit: { \n    opacity: 0,\n    backdropFilter: 'blur(0px)',\n    transition: {\n      duration: 0.3,\n      ease: \"easeIn\"\n    }\n  }\n};\n\nconst contentVariants = {\n  hidden: {\n    opacity: 0,\n    y: 20,\n    scale: 0.95,\n  },\n  visible: {\n    opacity: 1,\n    y: 0,\n    scale: 1,\n    transition: {\n      type: \"easeOut\",\n      duration: 0.3,\n      delay: 0.1,\n    }\n  },\n  exit: {\n    opacity: 0,\n    y: -10,\n    scale: 1.02,\n    transition: {\n      type: \"easeIn\",\n      duration: 0.2,\n    }\n  }\n};\n\nconst TaskModal = ({ \n  isOpen, \n  data, \n  onClose,\n  onAnimationStart,\n  onAnimationEnd,\n  setMindMapData,\n  autoSaveMindMapData,\n  addToast\n}) => {\n  const [isAnimating, setIsAnimating] = useState(false);\n  const [isVisible, setIsVisible] = useState(false);\n  const [isClosing, setIsClosing] = useState(false);\n  const [isEditing, setIsEditing] = useState(false);\n  const [editData, setEditData] = useState({});\n  const [isLoading, setIsLoading] = useState(false);\n  const [hasInitialized, setHasInitialized] = useState(false);\n  const [activeTab, setActiveTab] = useState('overview');\n  const [isTabTransitioning, setIsTabTransitioning] = useState(false);\n\n  useEffect(() => {\n    if (isOpen && data && !hasInitialized) {\n      setIsVisible(true);\n      setEditData({ \n        ...data,\n        status: data.status || 'pending',\n        priority: data.priority || 'medium'\n      });\n      setHasInitialized(true);\n      setIsAnimating(true);\n      if (onAnimationStart) onAnimationStart();\n      \n      setTimeout(() => {\n        setIsAnimating(false);\n        if (onAnimationEnd) onAnimationEnd();\n      }, 600);\n    } else if (!isOpen && hasInitialized) {\n      setHasInitialized(false);\n    }\n  }, [isOpen, hasInitialized, onAnimationStart, onAnimationEnd]);\n\n  // Separate effect for data updates when modal is already open\n  useEffect(() => {\n    if (isOpen && data && hasInitialized && !isEditing && !isLoading && !isTabTransitioning && !isAnimating) {\n      setEditData({ \n        ...data,\n        status: data.status || 'pending',\n        priority: data.priority || 'medium'\n      });\n    }\n  }, [data?.id, isOpen, hasInitialized, isEditing, isLoading, isTabTransitioning, isAnimating]);\n\n  const priorityConfig = useMemo(() => ({\n    low: { color: 'green', label: 'Low Priority', icon: Flag },\n    medium: { color: 'yellow', label: 'Medium Priority', icon: Flag },\n    high: { color: 'red', label: 'High Priority', icon: Flag },\n    urgent: { color: 'purple', label: 'Urgent', icon: AlertTriangle }\n  }), []);\n\n  const statusConfig = useMemo(() => ({\n    pending: { color: 'gray', label: 'Pending', icon: Clock },\n    in_progress: { color: 'blue', label: 'In Progress', icon: Play },\n    completed: { color: 'green', label: 'Completed', icon: CheckSquare },\n    paused: { color: 'orange', label: 'Paused', icon: Pause }\n  }), []);\n\n  const isOverdue = useMemo(() => {\n    if (!editData.due_date) return false;\n    const dueDate = new Date(editData.due_date);\n    const today = new Date();\n    return dueDate < today && editData.status !== 'completed';\n  }, [editData.due_date, editData.status]);\n\n  const handleClose = useCallback(() => {\n    if (isAnimating || isClosing) return;\n    \n    setIsAnimating(true);\n    setIsClosing(true);\n    if (onAnimationStart) onAnimationStart();\n    \n    // Set visibility to false to trigger exit animation\n    setIsVisible(false);\n  }, [onAnimationStart, isAnimating, isClosing]);\n\n  const handleSave = useCallback(async () => {\n    if (isLoading) return;\n    \n    setIsLoading(true);\n    try {\n      setMindMapData(prevData => {\n        const updatedTasks = prevData.tasks.map(task =>\n          String(task.id) === String(data?.id) ? { ...task, ...editData } : task\n        );\n        const newData = { ...prevData, tasks: updatedTasks };\n        autoSaveMindMapData(newData);\n        return newData;\n      });\n      \n      setIsEditing(false);\n      addToast('Task updated successfully', 'success');\n    } catch (error) {\n      console.error('Error saving task:', error);\n      addToast('Failed to save task', 'error');\n    } finally {\n      setIsLoading(false);\n    }\n  }, [data?.id, editData, setMindMapData, autoSaveMindMapData, addToast, isLoading]);\n\n  const handleDelete = useCallback(async () => {\n    if (isLoading) return;\n    \n    if (!window.confirm('Are you sure you want to delete this task?')) return;\n    \n    setIsLoading(true);\n    try {\n      setMindMapData(prevData => {\n        const updatedTasks = prevData.tasks.filter(task => String(task.id) !== String(data?.id));\n        const newData = { ...prevData, tasks: updatedTasks };\n        autoSaveMindMapData(newData);\n        return newData;\n      });\n      \n      addToast('Task deleted successfully', 'success');\n      handleClose();\n    } catch (error) {\n      console.error('Error deleting task:', error);\n      addToast('Failed to delete task', 'error');\n    } finally {\n      setIsLoading(false);\n    }\n  }, [data?.id, setMindMapData, autoSaveMindMapData, addToast, handleClose, isLoading]);\n\n  const handleStatusChange = useCallback((newStatus) => {\n    setEditData(prev => ({ ...prev, status: newStatus }));\n  }, []);\n\n  const updateField = useCallback((field, value) => {\n    setEditData(prev => ({ ...prev, [field]: value }));\n  }, []);\n\n  const renderField = (label, field, type = 'text', options = {}) => {\n    const value = editData[field] || '';\n    \n    if (!isEditing) {\n      if (type === 'textarea') {\n        return (\n          <div className=\"space-y-2\">\n            <label className=\"block text-sm font-medium text-gray-700\">{label}</label>\n            <div className=\"p-3 bg-gray-50 rounded-lg border min-h-[2.5rem] text-gray-800\">\n              {value || <span className=\"text-gray-400 italic\">Not specified</span>}\n            </div>\n          </div>\n        );\n      }\n      \n      if (type === 'select') {\n        return (\n          <div className=\"space-y-2\">\n            <label className=\"block text-sm font-medium text-gray-700\">{label}</label>\n            <div className=\"p-3 bg-gray-50 rounded-lg border text-gray-800\">\n              {value || <span className=\"text-gray-400 italic\">Not specified</span>}\n            </div>\n          </div>\n        );\n      }\n      \n      if (type === 'date') {\n        return (\n          <div className=\"space-y-2\">\n            <label className=\"block text-sm font-medium text-gray-700\">{label}</label>\n            <div className=\"p-3 bg-gray-50 rounded-lg border text-gray-800\">\n              {value ? new Date(value).toLocaleDateString() : <span className=\"text-gray-400 italic\">Not set</span>}\n            </div>\n          </div>\n        );\n      }\n      \n      return (\n        <div className=\"space-y-2\">\n          <label className=\"block text-sm font-medium text-gray-700\">{label}</label>\n          <div className=\"p-3 bg-gray-50 rounded-lg border text-gray-800\">\n            {value || <span className=\"text-gray-400 italic\">Not specified</span>}\n          </div>\n        </div>\n      );\n    }\n\n    // Editing mode\n    if (type === 'textarea') {\n      return (\n        <div className=\"space-y-2\">\n          <label className=\"block text-sm font-medium text-gray-700\">{label}</label>\n          <textarea\n            value={value}\n            onChange={(e) => updateField(field, e.target.value)}\n            className=\"w-full p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-colors\"\n            rows={options.rows || 3}\n            placeholder={`Enter ${label.toLowerCase()}...`}\n          />\n        </div>\n      );\n    }\n\n    if (type === 'select' && options.choices) {\n      return (\n        <div className=\"space-y-2\">\n          <label className=\"block text-sm font-medium text-gray-700\">{label}</label>\n          <select\n            value={value}\n            onChange={(e) => updateField(field, e.target.value)}\n            className=\"w-full p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-colors\"\n          >\n            <option value=\"\">Select {label.toLowerCase()}...</option>\n            {options.choices.map(choice => (\n              <option key={choice.value} value={choice.value}>{choice.label}</option>\n            ))}\n          </select>\n        </div>\n      );\n    }\n\n    if (type === 'date') {\n      return (\n        <div className=\"space-y-2\">\n          <label className=\"block text-sm font-medium text-gray-700\">{label}</label>\n          <input\n            type=\"date\"\n            value={value}\n            onChange={(e) => updateField(field, e.target.value)}\n            className=\"w-full p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-colors\"\n          />\n        </div>\n      );\n    }\n\n    return (\n      <div className=\"space-y-2\">\n        <label className=\"block text-sm font-medium text-gray-700\">{label}</label>\n        <input\n          type={type}\n          value={value}\n          onChange={(e) => updateField(field, type === 'number' ? Number(e.target.value) : e.target.value)}\n          className=\"w-full p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-colors\"\n          placeholder={`Enter ${label.toLowerCase()}...`}\n        />\n      </div>\n    );\n  };\n\n  if (!isOpen) return null;\n\n  return (\n    <AnimatePresence mode=\"wait\" onExitComplete={() => {\n      setIsAnimating(false);\n      setIsClosing(false);\n      setHasInitialized(false);\n      onClose();\n      if (onAnimationEnd) onAnimationEnd();\n    }}>\n      {isVisible && (\n        <motion.div\n          key={`task-modal-${data?.id || 'default'}`}\n          initial=\"hidden\"\n          animate=\"visible\"\n          exit=\"exit\"\n          variants={backdropVariants}\n          className=\"fixed inset-0 bg-black flex items-center justify-center z-50\"\n          style={{ \n            willChange: 'backdrop-filter, opacity',\n            backfaceVisibility: 'hidden',\n            transform: 'translate3d(0, 0, 0)'\n          }}\n          onClick={(e) => e.target === e.currentTarget && handleClose()}\n        >\n          <motion.div\n            initial=\"hidden\"\n            animate=\"visible\"\n            exit=\"exit\"\n            variants={modalVariants}\n            className=\"bg-white rounded-2xl shadow-2xl max-w-4xl w-full mx-4 max-h-[85vh] overflow-hidden\"\n            style={{ \n              willChange: 'transform, opacity, scale',\n              backfaceVisibility: 'hidden'\n            }}\n            onClick={(e) => e.stopPropagation()}\n            onAnimationStart={() => {\n              setIsAnimating(true);\n              if (onAnimationStart) onAnimationStart();\n            }}\n            onAnimationComplete={() => {\n              setIsAnimating(false);\n              if (onAnimationEnd) onAnimationEnd();\n            }}\n          >\n            <motion.div \n              initial=\"hidden\"\n              animate=\"visible\"\n              exit=\"exit\"\n              variants={contentVariants}\n              className=\"bg-gradient-to-br from-slate-900 to-slate-800 text-white px-6 py-4 flex items-center justify-between\"\n            >\n              <div className=\"flex items-center gap-3\">\n                <CheckSquare size={24} />\n                <h2 className=\"text-xl font-semibold\">Task Details</h2>\n                {isOverdue && (\n                  <motion.div\n                    animate={{ scale: [1, 1.1, 1] }}\n                    transition={{ duration: 1, repeat: Infinity }}\n                    className=\"flex items-center gap-1 px-2 py-1 bg-red-500 rounded-full text-xs font-medium\"\n                  >\n                    <AlertTriangle size={12} />\n                    Overdue\n                  </motion.div>\n                )}\n              </div>\n              <div className=\"flex items-center gap-2\">\n                {!isEditing && !isLoading && (\n                  <>\n                    <button\n                      onClick={() => setIsEditing(true)}\n                      className=\"text-white hover:text-gray-200 p-2 rounded-full hover:bg-white hover:bg-opacity-20 transition-all\"\n                      title=\"Edit\"\n                    >\n                      <Edit3 size={20} />\n                    </button>\n                    <button\n                      onClick={handleDelete}\n                      className=\"text-white hover:text-red-200 p-2 rounded-full hover:bg-red-500 hover:bg-opacity-30 transition-all\"\n                      title=\"Delete\"\n                    >\n                      <Trash2 size={20} />\n                    </button>\n                  </>\n                )}\n                <button onClick={handleClose} className=\"text-white hover:text-gray-200 p-2 rounded-full hover:bg-white hover:bg-opacity-20 transition-all\">\n                  <X size={20} />\n                </button>\n              </div>\n            </motion.div>\n\n            {/* Tab Navigation */}\n            <div className=\"bg-gradient-to-r from-slate-900 via-slate-800 to-slate-900 border-b border-slate-600\">\n              <nav className=\"flex flex-wrap gap-2 px-6 py-4\">\n                {[\n                  { key: 'overview', label: 'Overview', icon: CheckSquare },\n                  { key: 'progress', label: 'Progress', icon: TrendingUp },\n                  { key: 'connections', label: 'Connections', icon: Link2 },\n                  { key: 'details', label: 'Details', icon: FileText }\n                ].map(({ key, label, icon: Icon }) => (\n                  <motion.button\n                    key={key}\n                    onClick={() => {\n                      if (isTabTransitioning) return;\n                      setIsTabTransitioning(true);\n                      setActiveTab(key);\n                      setTimeout(() => setIsTabTransitioning(false), 300);\n                    }}\n                    className={`relative flex items-center gap-2 px-4 py-3 rounded-xl font-medium text-sm transition-all duration-300 ${\n                      activeTab === key\n                        ? 'bg-gradient-to-r from-emerald-500 to-teal-600 text-white shadow-lg shadow-emerald-500/25'\n                        : 'text-slate-300 hover:text-white hover:bg-slate-700/50 hover:shadow-md'\n                    }`}\n                    whileHover={{ scale: activeTab === key ? 1 : 1.02 }}\n                    whileTap={{ scale: 0.98 }}\n                    initial={false}\n                    animate={{\n                      scale: activeTab === key ? 1.05 : 1,\n                      boxShadow: activeTab === key \n                        ? '0 8px 25px rgba(16, 185, 129, 0.3), 0 0 20px rgba(20, 184, 166, 0.2)' \n                        : '0 2px 8px rgba(0, 0, 0, 0.1)'\n                    }}\n                    transition={{ duration: 0.3, ease: \"easeOut\" }}\n                  >\n                    <Icon size={16} className={activeTab === key ? 'drop-shadow-sm' : ''} />\n                    {label}\n                    \n                    {activeTab === key && (\n                      <motion.div\n                        layoutId=\"taskTabGlow\"\n                        className=\"absolute inset-0 bg-gradient-to-r from-emerald-400/20 to-teal-500/20 rounded-xl blur-sm\"\n                        initial={false}\n                        transition={{ type: \"spring\", bounce: 0.2, duration: 0.6 }}\n                      />\n                    )}\n                  </motion.button>\n                ))}\n              </nav>\n            </div>\n            \n            {/* Tab Content */}\n            <motion.div \n              className=\"relative overflow-hidden bg-gradient-to-br from-slate-50 to-slate-100\"\n              layout=\"position\"\n              layoutRoot\n              transition={{ \n                layout: { duration: 0.4, ease: \"easeInOut\" },\n                height: { duration: 0.4, ease: \"easeInOut\" }\n              }}\n            >\n              <AnimatePresence mode=\"wait\" initial={false} onExitComplete={() => setIsTabTransitioning(false)}>\n                {/* Overview Tab */}\n                {activeTab === 'overview' && (\n                  <motion.div\n                    key=\"overview\"\n                    initial={{ opacity: 0, x: -30 }}\n                    animate={{ opacity: 1, x: 0 }}\n                    exit={{ opacity: 0, x: 30 }}\n                    transition={{ duration: 0.4, ease: \"easeOut\" }}\n                    layout=\"position\"\n                    layoutId=\"tabContent\"\n                    className=\"p-6 overflow-y-auto max-h-[calc(85vh-200px)] scrollbar-thin scrollbar-thumb-slate-400 scrollbar-track-slate-200\"\n                  >\n                    <div className=\"space-y-6\">\n                      <div className=\"bg-white rounded-xl p-6 shadow-lg border border-slate-200\">\n                        <h3 className=\"text-lg font-semibold text-slate-800 mb-4 flex items-center gap-2\">\n                          <Target size={20} className=\"text-emerald-600\" />\n                          Task Information\n                        </h3>\n                        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                          {renderField('Title', 'title')}\n                          {renderField('Priority', 'priority', 'select', {\n                            choices: [\n                              { value: 'low', label: 'Low Priority' },\n                              { value: 'medium', label: 'Medium Priority' },\n                              { value: 'high', label: 'High Priority' },\n                              { value: 'urgent', label: 'Urgent' }\n                            ]\n                          })}\n                        </div>\n                        <div className=\"mt-6\">\n                          {renderField('Description', 'description', 'textarea', { rows: 4 })}\n                        </div>\n                      </div>\n                      \n                      <div className=\"bg-white rounded-xl p-6 shadow-lg border border-slate-200\">\n                        <h3 className=\"text-lg font-semibold text-slate-800 mb-4 flex items-center gap-2\">\n                          <Clock size={20} className=\"text-blue-600\" />\n                          Status & Timeline\n                        </h3>\n                        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                          {renderField('Status', 'status', 'select', {\n                            choices: [\n                              { value: 'pending', label: 'Pending' },\n                              { value: 'in_progress', label: 'In Progress' },\n                              { value: 'completed', label: 'Completed' },\n                              { value: 'paused', label: 'Paused' }\n                            ]\n                          })}\n                          {renderField('Due Date', 'due_date', 'date')}\n                        </div>\n                        \n                        {/* Status Change Buttons */}\n                        <div className=\"mt-6\">\n                          <label className=\"block text-sm font-medium text-gray-700 mb-3\">Quick Status Update</label>\n                          <div className=\"flex flex-wrap gap-3\">\n                            {Object.entries(statusConfig).map(([status, config]) => {\n                              const Icon = config.icon;\n                              const isActive = editData.status === status;\n                              return (\n                                <motion.button\n                                  key={status}\n                                  onClick={() => handleStatusChange(status)}\n                                  disabled={!isEditing}\n                                  whileHover={isEditing ? { scale: 1.05 } : {}}\n                                  whileTap={isEditing ? { scale: 0.95 } : {}}\n                                  className={`flex items-center gap-2 px-4 py-2 rounded-lg font-medium text-sm transition-all ${\n                                    isActive\n                                      ? `bg-${config.color}-100 text-${config.color}-800 border-2 border-${config.color}-300`\n                                      : `bg-gray-100 text-gray-600 border-2 border-gray-200 ${isEditing ? 'hover:bg-gray-200' : 'cursor-not-allowed opacity-50'}`\n                                  }`}\n                                >\n                                  <Icon size={16} />\n                                  {config.label}\n                                </motion.button>\n                              );\n                            })}\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </motion.div>\n                )}\n\n                {/* Progress Tab */}\n                {activeTab === 'progress' && (\n                  <motion.div\n                    key=\"progress\"\n                    initial={{ opacity: 0, x: -30 }}\n                    animate={{ opacity: 1, x: 0 }}\n                    exit={{ opacity: 0, x: 30 }}\n                    transition={{ duration: 0.4, ease: \"easeOut\" }}\n                    layout=\"position\"\n                    layoutId=\"tabContent\"\n                    className=\"p-6 overflow-y-auto max-h-[calc(85vh-200px)] scrollbar-thin scrollbar-thumb-slate-400 scrollbar-track-slate-200\"\n                  >\n                    <div className=\"bg-white rounded-xl p-6 shadow-lg border border-slate-200\">\n                      <h3 className=\"text-lg font-semibold text-slate-800 mb-6 flex items-center gap-2\">\n                        <TrendingUp size={20} className=\"text-blue-600\" />\n                        Task Progress\n                      </h3>\n                      \n                      {/* Status Overview */}\n                      <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6 mb-8\">\n                        <motion.div\n                          whileHover={{ scale: 1.02 }}\n                          className={`p-4 rounded-lg border-2 ${\n                            editData.status === 'completed' \n                              ? 'bg-green-50 border-green-200' \n                              : 'bg-gray-50 border-gray-200'\n                          }`}\n                        >\n                          <div className=\"flex items-center gap-3 mb-2\">\n                            <CheckSquare size={20} className={editData.status === 'completed' ? 'text-green-600' : 'text-gray-400'} />\n                            <span className={`font-medium ${editData.status === 'completed' ? 'text-green-800' : 'text-gray-600'}`}>\n                              Completion\n                            </span>\n                          </div>\n                          <div className={`text-2xl font-bold ${editData.status === 'completed' ? 'text-green-700' : 'text-gray-700'}`}>\n                            {editData.status === 'completed' ? '100%' : '0%'}\n                          </div>\n                        </motion.div>\n                        \n                        <motion.div\n                          whileHover={{ scale: 1.02 }}\n                          className={`p-4 rounded-lg border-2 ${\n                            isOverdue \n                              ? 'bg-red-50 border-red-200' \n                              : 'bg-blue-50 border-blue-200'\n                          }`}\n                        >\n                          <div className=\"flex items-center gap-3 mb-2\">\n                            <Calendar size={20} className={isOverdue ? 'text-red-600' : 'text-blue-600'} />\n                            <span className={`font-medium ${isOverdue ? 'text-red-800' : 'text-blue-800'}`}>\n                              Due Date\n                            </span>\n                          </div>\n                          <div className={`text-lg font-bold ${isOverdue ? 'text-red-700' : 'text-blue-700'}`}>\n                            {editData.due_date ? new Date(editData.due_date).toLocaleDateString() : 'Not set'}\n                          </div>\n                          {isOverdue && (\n                            <div className=\"text-sm text-red-600 mt-1\">Overdue</div>\n                          )}\n                        </motion.div>\n                        \n                        <motion.div\n                          whileHover={{ scale: 1.02 }}\n                          className={`p-4 rounded-lg border-2 ${\n                            editData.priority === 'urgent' || editData.priority === 'high'\n                              ? 'bg-orange-50 border-orange-200'\n                              : 'bg-gray-50 border-gray-200'\n                          }`}\n                        >\n                          <div className=\"flex items-center gap-3 mb-2\">\n                            <Flag size={20} className={\n                              editData.priority === 'urgent' || editData.priority === 'high' \n                                ? 'text-orange-600' \n                                : 'text-gray-600'\n                            } />\n                            <span className={`font-medium ${\n                              editData.priority === 'urgent' || editData.priority === 'high' \n                                ? 'text-orange-800' \n                                : 'text-gray-800'\n                            }`}>\n                              Priority\n                            </span>\n                          </div>\n                          <div className={`text-lg font-bold ${\n                            editData.priority === 'urgent' || editData.priority === 'high' \n                              ? 'text-orange-700' \n                              : 'text-gray-700'\n                          }`}>\n                            {priorityConfig[editData.priority]?.label || 'Not set'}\n                          </div>\n                        </motion.div>\n                      </div>\n                    </div>\n                  </motion.div>\n                )}\n\n                {/* Connections Tab */}\n                {activeTab === 'connections' && (\n                  <motion.div\n                    key=\"connections\"\n                    initial={{ opacity: 0, x: -30 }}\n                    animate={{ opacity: 1, x: 0 }}\n                    exit={{ opacity: 0, x: 30 }}\n                    transition={{ duration: 0.4, ease: \"easeOut\" }}\n                    layout=\"position\"\n                    layoutId=\"tabContent\"\n                    className=\"p-6 overflow-y-auto max-h-[calc(85vh-200px)] scrollbar-thin scrollbar-thumb-slate-400 scrollbar-track-slate-200\"\n                  >\n                    <div className=\"bg-white rounded-xl p-6 shadow-lg border border-slate-200\">\n                      <h3 className=\"text-lg font-semibold text-slate-800 mb-6 flex items-center gap-2\">\n                        <Link2 size={20} className=\"text-indigo-600\" />\n                        Related Content\n                      </h3>\n                      \n                      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                        {renderField('Linked Case ID', 'linked_case_id')}\n                        {renderField('Linked Topic ID', 'linked_topic_id')}\n                      </div>\n                      \n                      <div className=\"mt-8 text-center py-8 text-gray-500\">\n                        <Link2 size={48} className=\"mx-auto mb-3 text-gray-300\" />\n                        <p>No connections found</p>\n                        <p className=\"text-sm mt-1\">Link this task to cases or topics to create connections</p>\n                      </div>\n                    </div>\n                  </motion.div>\n                )}\n\n                {/* Details Tab */}\n                {activeTab === 'details' && (\n                  <motion.div\n                    key=\"details\"\n                    initial={{ opacity: 0, x: -30 }}\n                    animate={{ opacity: 1, x: 0 }}\n                    exit={{ opacity: 0, x: 30 }}\n                    transition={{ duration: 0.4, ease: \"easeOut\" }}\n                    layout=\"position\"\n                    layoutId=\"tabContent\"\n                    className=\"p-6 overflow-y-auto max-h-[calc(85vh-200px)] scrollbar-thin scrollbar-thumb-slate-400 scrollbar-track-slate-200\"\n                  >\n                    <div className=\"bg-white rounded-xl p-6 shadow-lg border border-slate-200\">\n                      <h3 className=\"text-lg font-semibold text-slate-800 mb-6 flex items-center gap-2\">\n                        <FileText size={20} className=\"text-gray-600\" />\n                        Additional Details\n                      </h3>\n                      \n                      <div className=\"space-y-6\">\n                        <div className=\"text-sm text-gray-600 bg-slate-50 p-4 rounded-lg\">\n                          <p className=\"font-medium mb-2\">Task Details</p>\n                          <div className=\"space-y-2\">\n                            <p><span className=\"font-medium\">Created:</span> {data?.created_at ? new Date(data.created_at).toLocaleString() : 'Unknown'}</p>\n                            <p><span className=\"font-medium\">Last Updated:</span> {data?.updated_at ? new Date(data.updated_at).toLocaleString() : 'Unknown'}</p>\n                            <p><span className=\"font-medium\">Task ID:</span> {data?.id || 'Unknown'}</p>\n                          </div>\n                        </div>\n                        \n                        <div className=\"p-4 bg-blue-50 rounded-lg border border-blue-200\">\n                          <h4 className=\"font-medium text-blue-800 mb-2\">Task Management Tips</h4>\n                          <ul className=\"text-blue-700 text-sm space-y-1\">\n                            <li>• Break large tasks into smaller, manageable subtasks</li>\n                            <li>• Set realistic due dates to maintain accountability</li>\n                            <li>• Link tasks to relevant cases or topics for better organization</li>\n                            <li>• Update status regularly to track progress</li>\n                          </ul>\n                        </div>\n                      </div>\n                    </div>\n                  </motion.div>\n                )}\n              </AnimatePresence>\n            </motion.div>\n\n            {isEditing && (\n              <div className=\"sticky bottom-0 bg-gray-50 border-t border-gray-200 px-6 py-4 flex items-center justify-between\">\n                <div className=\"text-sm text-gray-500\">\n                  Changes will be auto-saved\n                </div>\n                <div className=\"flex items-center gap-3\">\n                  <button\n                    onClick={() => {\n                      setIsEditing(false);\n                      setEditData({ ...data });\n                    }}\n                    disabled={isLoading}\n                    className=\"px-4 py-2 text-gray-600 hover:text-gray-800 border border-gray-300 rounded-lg hover:bg-gray-100 transition-colors\"\n                  >\n                    Cancel\n                  </button>\n                  <button\n                    onClick={handleSave}\n                    disabled={isLoading}\n                    className=\"px-4 py-2 bg-emerald-600 text-white rounded-lg hover:bg-emerald-700 transition-colors flex items-center gap-2\"\n                  >\n                    {isLoading ? <Loader2 size={16} className=\"animate-spin\" /> : <Save size={16} />}\n                    {isLoading ? 'Saving...' : 'Save Changes'}\n                  </button>\n                </div>\n              </div>\n            )}\n          </motion.div>\n        </motion.div>\n      )}\n    </AnimatePresence>\n  );\n};\n\nexport default React.memo(TaskModal, (prevProps, nextProps) => {\n  return (\n    prevProps.isOpen === nextProps.isOpen &&\n    prevProps.data?.id === nextProps.data?.id &&\n    prevProps.data?.updated_at === nextProps.data?.updated_at\n  );\n});\n","// Floating Edge Utilities for React Flow\n// Calculates intersection points between nodes for custom floating edges\n\n/**\n * Calculate the intersection point of a line with a rectangle\n * @param {Object} rect - Rectangle with x, y, width, height\n * @param {Object} center - Center point with x, y\n * @param {Object} point - External point with x, y\n * @returns {Object} Intersection point with x, y coordinates\n */\nfunction getIntersectionPoint(rect, center, point) {\n  const { x: rectX, y: rectY, width, height } = rect;\n  const { x: centerX, y: centerY } = center;\n  const { x: pointX, y: pointY } = point;\n\n  // Calculate rectangle bounds - no buffer as we want exact edges\n  const left = rectX;\n  const right = rectX + width;\n  const top = rectY;\n  const bottom = rectY + height;\n\n  // Direction vector from center to point\n  const dx = pointX - centerX;\n  const dy = pointY - centerY;\n\n  // Handle edge cases where the line is vertical or horizontal\n  if (Math.abs(dx) < 0.001) {\n    // Vertical line\n    return {\n      x: centerX,\n      y: dy > 0 ? bottom : top,\n      side: dy > 0 ? 'bottom' : 'top'\n    };\n  }\n\n  if (Math.abs(dy) < 0.001) {\n    // Horizontal line\n    return {\n      x: dx > 0 ? right : left,\n      y: centerY,\n      side: dx > 0 ? 'right' : 'left'\n    };\n  }\n\n  // Calculate slope and y-intercept\n  const slope = dy / dx;\n  const yIntercept = centerY - slope * centerX;\n\n  // Calculate intersection points with all four sides\n  const intersections = [];\n\n  // Left side (x = left)\n  const leftY = slope * left + yIntercept;\n  if (leftY >= top && leftY <= bottom) {\n    intersections.push({ x: left, y: leftY, side: 'left', distance: Math.hypot(left - centerX, leftY - centerY) });\n  }\n\n  // Right side (x = right)\n  const rightY = slope * right + yIntercept;\n  if (rightY >= top && rightY <= bottom) {\n    intersections.push({ x: right, y: rightY, side: 'right', distance: Math.hypot(right - centerX, rightY - centerY) });\n  }\n\n  // Top side (y = top)\n  const topX = (top - yIntercept) / slope;\n  if (topX >= left && topX <= right) {\n    intersections.push({ x: topX, y: top, side: 'top', distance: Math.hypot(topX - centerX, top - centerY) });\n  }\n\n  // Bottom side (y = bottom)\n  const bottomX = (bottom - yIntercept) / slope;\n  if (bottomX >= left && bottomX <= right) {\n    intersections.push({ x: bottomX, y: bottom, side: 'bottom', distance: Math.hypot(bottomX - centerX, bottom - centerY) });\n  }\n\n  // Find the intersection point that's in the correct direction\n  // and is closest to the center (to avoid picking the wrong side)\n  const validIntersections = intersections.filter(intersection => {\n    const intersectionDx = intersection.x - centerX;\n    const intersectionDy = intersection.y - centerY;\n    \n    // Check if the intersection is in the same direction as the target point\n    return (\n      (dx > 0 && intersectionDx >= 0) || (dx < 0 && intersectionDx <= 0)\n    ) && (\n      (dy > 0 && intersectionDy >= 0) || (dy < 0 && intersectionDy <= 0)\n    );\n  });\n\n  // Sort by distance and take the closest valid intersection\n  validIntersections.sort((a, b) => a.distance - b.distance);\n  return validIntersections[0] || { x: centerX, y: centerY, side: 'center' };\n}\n\n/**\n * Calculate the floating edge path between two nodes\n * @param {Object} sourceNode - Source node with position and measured dimensions\n * @param {Object} targetNode - Target node with position and measured dimensions\n * @param {Object} options - Optional configuration\n * @returns {Object} Edge path data with sourceX, sourceY, targetX, targetY\n */\nexport function getFloatingEdgePath(sourceNode, targetNode, options = {}) {\n  const {\n    sourcePosition = { x: 0, y: 0 },\n    targetPosition = { x: 0, y: 0 },\n    sourceWidth = 200,\n    sourceHeight = 100,\n    targetWidth = 200,\n    targetHeight = 100,\n    // Direct coordinates from React Flow (fallback)\n    sourceX,\n    sourceY,\n    targetX,\n    targetY,\n    offset = 0 // Default to zero offset to ensure edges connect to borders\n  } = options;\n  \n  // Use direct coordinates if provided and dimensions appear invalid\n  if (sourceX !== undefined && sourceY !== undefined && \n      targetX !== undefined && targetY !== undefined &&\n      (sourceWidth <= 10 || targetWidth <= 10)) {\n    return {\n      sourceX, \n      sourceY, \n      targetX, \n      targetY,\n      sourceSide: 'direct',\n      targetSide: 'direct'\n    };\n  }\n\n  // Calculate node centers\n  const sourceCenter = {\n    x: sourcePosition.x + sourceWidth / 2,\n    y: sourcePosition.y + sourceHeight / 2\n  };\n\n  const targetCenter = {\n    x: targetPosition.x + targetWidth / 2,\n    y: targetPosition.y + targetHeight / 2\n  };\n\n  // Create rectangle objects for intersection calculation\n  const sourceRect = {\n    x: sourcePosition.x,\n    y: sourcePosition.y,\n    width: sourceWidth,\n    height: sourceHeight\n  };\n\n  const targetRect = {\n    x: targetPosition.x,\n    y: targetPosition.y,\n    width: targetWidth,\n    height: targetHeight\n  };\n\n  // Calculate intersection points\n  const sourceIntersection = getIntersectionPoint(sourceRect, sourceCenter, targetCenter);\n  const targetIntersection = getIntersectionPoint(targetRect, targetCenter, sourceCenter);\n\n  // Calculate vector from source to target center\n  const dx = targetCenter.x - sourceCenter.x;\n  const dy = targetCenter.y - sourceCenter.y;\n  const distance = Math.sqrt(dx * dx + dy * dy);\n\n  // Add a stronger extension to ensure visual connection with the node borders\n  // This is done by extending the line in both directions\n  if (distance > 0) {\n    const unitX = dx / distance;\n    const unitY = dy / distance;\n    \n    // Extend lines by 3 pixels to ensure visual connection\n    // Using a larger value for more reliability across different node types\n    const extensionAmount = 3;\n\n    // Extend the line outward from the source node\n    sourceIntersection.x -= unitX * extensionAmount;\n    sourceIntersection.y -= unitY * extensionAmount;\n    \n    // Extend the line outward from the target node\n    targetIntersection.x += unitX * extensionAmount;\n    targetIntersection.y += unitY * extensionAmount;\n    \n    // Apply additional offset if needed\n    if (offset > 0) {\n      sourceIntersection.x += unitX * offset;\n      sourceIntersection.y += unitY * offset;\n      targetIntersection.x -= unitX * offset;\n      targetIntersection.y -= unitY * offset;\n    }\n  }\n\n  // Debug flag to help diagnose intersection issues\n  const debug = options.debug || false;\n  if (debug) {\n    console.log('Source Node:', sourceNode);\n    console.log('Target Node:', targetNode);\n    console.log('Source Intersection:', sourceIntersection);\n    console.log('Target Intersection:', targetIntersection);\n  }\n\n  return {\n    sourceX: sourceIntersection.x,\n    sourceY: sourceIntersection.y,\n    targetX: targetIntersection.x,\n    targetY: targetIntersection.y,\n    sourceSide: sourceIntersection.side,\n    targetSide: targetIntersection.side\n  };\n}\n\n/**\n * Generate SVG path string for a bezier curve between two points\n * @param {number} sourceX - Source X coordinate\n * @param {number} sourceY - Source Y coordinate\n * @param {number} targetX - Target X coordinate\n * @param {number} targetY - Target Y coordinate\n * @param {number} curvature - Curve intensity (0-1)\n * @returns {string} SVG path string\n */\nexport function getBezierPath(sourceX, sourceY, targetX, targetY, curvature = 0.25) {\n  const dx = targetX - sourceX;\n  const dy = targetY - sourceY;\n  \n  // Calculate control points for a smooth bezier curve\n  const controlOffset = Math.sqrt(dx * dx + dy * dy) * curvature;\n  \n  const controlX1 = sourceX + dx * 0.5 + dy * controlOffset * 0.5;\n  const controlY1 = sourceY + dy * 0.5 - dx * controlOffset * 0.5;\n  \n  const controlX2 = sourceX + dx * 0.5 - dy * controlOffset * 0.5;\n  const controlY2 = sourceY + dy * 0.5 + dx * controlOffset * 0.5;\n  \n  return `M ${sourceX},${sourceY} C ${controlX1},${controlY1} ${controlX2},${controlY2} ${targetX},${targetY}`;\n}\n\n/**\n * Calculate the center point of an edge path\n * @param {number} sourceX - Source X coordinate\n * @param {number} sourceY - Source Y coordinate\n * @param {number} targetX - Target X coordinate\n * @param {number} targetY - Target Y coordinate\n * @returns {Object} Center point with x, y coordinates\n */\nexport function getEdgeCenter(sourceX, sourceY, targetX, targetY) {\n  return {\n    x: (sourceX + targetX) / 2,\n    y: (sourceY + targetY) / 2\n  };\n}\n\n/**\n * Calculate marker end position for arrow heads\n * @param {number} sourceX - Source X coordinate\n * @param {number} sourceY - Source Y coordinate\n * @param {number} targetX - Target X coordinate\n * @param {number} targetY - Target Y coordinate\n * @returns {string} Transform string for marker positioning\n */\nexport function getMarkerEnd(sourceX, sourceY, targetX, targetY) {\n  const dx = targetX - sourceX;\n  const dy = targetY - sourceY;\n  const angle = Math.atan2(dy, dx) * (180 / Math.PI);\n  \n  return `url(#arrowhead) rotate(${angle} ${targetX} ${targetY})`;\n}\n","import React, { memo, useMemo, useEffect } from 'react';\nimport { BaseEdge, useReactFlow } from '@xyflow/react';\nimport { getFloatingEdgePath } from '../utils/floatingEdgeUtils';\n\n/**\n * High-Performance Floating Edge Component\n * \n * This is an optimized edge component that calculates intersection points\n * between nodes and renders a direct straight line between them. It's \n * specifically designed for immediate visual feedback during node dragging.\n * \n * Features:\n * - Direct path calculation using geometry\n * - Memoized path computation for performance\n * - No transition delays or animations\n * - Minimal re-rendering\n */\nconst FloatingEdge = memo(({\n  id,\n  source,\n  target,\n  sourceX,\n  sourceY,\n  targetX,\n  targetY,\n  sourcePosition,\n  targetPosition,\n  style = {},\n  markerEnd,\n  markerStart,\n  data,\n  ...props\n}) => {\n  const { getNode } = useReactFlow();\n  \n  // Safely get nodes outside of useMemo to avoid scope issues\n  let sourceNode, targetNode;\n  try {\n    sourceNode = getNode(source);\n    targetNode = getNode(target);\n  } catch (error) {\n    // Nodes not available, will use fallback\n    sourceNode = null;\n    targetNode = null;\n  }\n  \n  // Memoize the edge path calculation for better performance\n  const { edgePath, labelX, labelY } = useMemo(() => {\n    // During animations or rapid updates, use simple direct paths\n    if (data?.__isAnimating || data?.__forceUpdate) {\n      return {\n        edgePath: `M${sourceX},${sourceY} L${targetX},${targetY}`,\n        labelX: (sourceX + targetX) / 2,\n        labelY: (sourceY + targetY) / 2\n      };\n    }\n\n    // Default fallback if nodes aren't available\n    if (!sourceNode || !targetNode) {\n      return {\n        edgePath: `M${sourceX},${sourceY} L${targetX},${targetY}`,\n        labelX: (sourceX + targetX) / 2,\n        labelY: (sourceY + targetY) / 2\n      };\n    }\n\n    try {\n      // Safely check if we have enough information to calculate an accurate path\n      const sourceHasDimensions = Boolean(\n        sourceNode.width || \n        sourceNode.dimensions?.width || \n        sourceNode.data?.width || \n        sourceNode.style?.width\n      );\n      \n      const targetHasDimensions = Boolean(\n        targetNode.width || \n        targetNode.dimensions?.width || \n        targetNode.data?.width || \n        targetNode.style?.width\n      );\n      \n      // If we don't have dimensions, use the provided coordinates directly\n      if (!sourceHasDimensions || !targetHasDimensions) {\n        return {\n          edgePath: `M${sourceX},${sourceY} L${targetX},${targetY}`,\n          labelX: (sourceX + targetX) / 2,\n          labelY: (sourceY + targetY) / 2\n        };\n      }\n\n      // Safe dimension extraction with fallbacks\n      const getNodeDimensions = (node) => {\n        const defaultWidth = node.type === 'topic' ? 180 : 200;\n        const defaultHeight = node.type === 'topic' ? 50 : 100;\n        \n        return {\n          width: node.width || \n                 node.dimensions?.width || \n                 node.data?.width || \n                 defaultWidth,\n          height: node.height || \n                  node.dimensions?.height || \n                  node.data?.height || \n                  defaultHeight\n        };\n      };\n      \n      const sourceDims = getNodeDimensions(sourceNode);\n      const targetDims = getNodeDimensions(targetNode);\n\n      // Calculate floating edge with proper intersections\n      const floatingEdgeData = getFloatingEdgePath(\n        sourceNode,\n        targetNode,\n        {\n          // Use React Flow's sourceX/Y and targetX/Y if available\n          sourcePosition: {\n            x: sourceNode.positionAbsolute?.x || sourceNode.position.x,\n            y: sourceNode.positionAbsolute?.y || sourceNode.position.y\n          },\n          targetPosition: {\n            x: targetNode.positionAbsolute?.x || targetNode.position.x,\n            y: targetNode.positionAbsolute?.y || targetNode.position.y\n          },\n          // Fallback coordinates - use the direct ones provided by React Flow\n          sourceX: sourceX,\n          sourceY: sourceY,\n          targetX: targetX,\n          targetY: targetY,\n          sourceWidth: sourceDims.width,\n          sourceHeight: sourceDims.height,\n          targetWidth: targetDims.width,\n          targetHeight: targetDims.height,\n          debug: false // Set to true to debug connection issues\n        }\n      );\n\n      const { \n        sourceX: sx, \n        sourceY: sy, \n        targetX: tx, \n        targetY: ty \n      } = floatingEdgeData;\n      \n      // Return direct line path\n      return {\n        edgePath: `M ${sx},${sy} L ${tx},${ty}`,\n        labelX: (sx + tx) / 2,\n        labelY: (sy + ty) / 2\n      };\n    } catch (error) {\n      console.warn('FloatingEdge calculation error:', error);\n      return {\n        edgePath: `M${sourceX},${sourceY} L${targetX},${targetY}`,\n        labelX: (sourceX + targetX) / 2,\n        labelY: (sourceY + targetY) / 2\n      };\n    }\n  }, [\n    source,\n    target,\n    sourceX, \n    sourceY, \n    targetX, \n    targetY,\n    data?.__forceUpdate,\n    data?.__isAnimating,\n    // Safe node dimension tracking\n    sourceNode?.id,\n    targetNode?.id,\n    sourceNode?.width,\n    sourceNode?.height,\n    targetNode?.width,\n    targetNode?.height\n  ]);\n\n  return (\n    <BaseEdge\n      id={id}\n      path={edgePath}\n      labelX={labelX}\n      labelY={labelY}\n      style={{\n        stroke: '#64748b',\n        strokeWidth: 3, // Thicker line for better visibility\n        strokeLinecap: 'round', // Round ends for smoother appearance\n        strokeOpacity: 0.95, // Slightly more opaque\n        transition: 'none', // Critical: disable all CSS transitions\n        ...style\n      }}\n      markerEnd={markerEnd}\n      markerStart={markerStart}\n      // Remove {...props} to prevent React Flow-specific props from reaching DOM\n    />\n  );\n}, (prevProps, nextProps) => {\n  // Optimize re-rendering with precise dependency checking\n  return (\n    prevProps.sourceX === nextProps.sourceX &&\n    prevProps.sourceY === nextProps.sourceY &&\n    prevProps.targetX === nextProps.targetX &&\n    prevProps.targetY === nextProps.targetY &&\n    prevProps.source === nextProps.source &&\n    prevProps.target === nextProps.target &&\n    prevProps.data?.__forceUpdate === nextProps.data?.__forceUpdate\n  );\n});\n\nexport default FloatingEdge;\n\n\n","import React, { memo } from 'react';\nimport { BaseEdge, getBezierPath, EdgeLabelRenderer } from '@xyflow/react';\n\n/**\n * Enhanced Edge Component with Label Support\n * \n * This edge component supports labels and uses proper prop destructuring\n * to prevent React Flow-specific props from reaching DOM elements.\n */\nconst EnhancedEdge = memo(({\n  id,\n  source,\n  target,\n  sourceX,\n  sourceY,\n  targetX,\n  targetY,\n  sourcePosition,\n  targetPosition,\n  style = {},\n  markerEnd,\n  markerStart,\n  label,\n  // Destructure React Flow-specific props to prevent them from reaching DOM\n  sourceHandleId,\n  targetHandleId,\n  data,\n  selected,\n  animated,\n  // Don't pass any other props to BaseEdge\n}) => {\n  const [edgePath, labelX, labelY] = getBezierPath({\n    sourceX,\n    sourceY,\n    sourcePosition,\n    targetX,\n    targetY,\n    targetPosition,\n  });\n\n  return (\n    <>\n      <BaseEdge\n        id={id}\n        path={edgePath}\n        style={style}\n        markerEnd={markerEnd}\n        markerStart={markerStart}\n        // Only pass valid BaseEdge props, no React Flow-specific props\n      />\n      {label && (\n        <EdgeLabelRenderer>\n          <div\n            style={{\n              position: 'absolute',\n              transform: `translate(-50%, -50%) translate(${labelX}px,${labelY}px)`,\n              fontSize: 12,\n              pointerEvents: 'all',\n            }}\n            className=\"nodrag nopan bg-white px-2 py-1 rounded shadow border text-xs\"\n          >\n            {label}\n          </div>\n        </EdgeLabelRenderer>\n      )}\n    </>\n  );\n});\n\nEnhancedEdge.displayName = 'EnhancedEdge';\n\nexport default EnhancedEdge;\n","import React from 'react';\n\n/**\n * Custom connection line component for React Flow.\n * Shows a preview of the connection as the user drags to create a new edge.\n * Styled to match our floating edge appearance but with enhanced visual feedback.\n */\nconst ConnectionLine = ({\n  fromX,\n  fromY,\n  toX,\n  toY,\n  connectionLineStyle,\n}) => {\n  // Create a straight path from source to target\n  const path = `M ${fromX},${fromY} L ${toX},${toY}`;\n  \n  // Apply our custom styling combined with any passed styling\n  const defaultStyle = {\n    stroke: '#3b82f6', // Bright blue for visibility\n    strokeWidth: 3.5,\n    strokeLinecap: 'round',\n    strokeDasharray: '5,3', \n    filter: 'drop-shadow(0 0 6px rgba(59, 130, 246, 0.6))',\n    animation: 'flowingDash 1s linear infinite',\n  };\n\n  // Merge the default style with any props passed in\n  const style = { ...defaultStyle, ...connectionLineStyle };\n\n  return (\n    <g>\n      {/* Main visible connection line */}\n      <path\n        d={path}\n        fill=\"none\"\n        style={style}\n      />\n      \n      {/* Larger invisible path for easier interaction */}\n      <path\n        d={path}\n        fill=\"none\"\n        stroke=\"transparent\"\n        strokeWidth={15}\n        style={{ pointerEvents: 'stroke' }}\n      />\n    </g>\n  );\n};\n\nexport default ConnectionLine;\n","// Optimized loading screen component\nimport React from 'react';\nimport { Loader2, Brain, Sparkles } from 'lucide-react';\n\nconst OptimizedLoadingScreen = ({ message = \"Loading your mind map...\", progress = null }) => {\n  return (\n    <div className=\"fixed inset-0 bg-gradient-to-br from-blue-50 to-purple-50 flex items-center justify-center z-50\">\n      <div className=\"text-center\">\n        {/* Animated brain icon */}\n        <div className=\"relative mb-6\">\n          <Brain className=\"w-16 h-16 text-blue-600 mx-auto animate-pulse\" />\n          <Sparkles className=\"w-6 h-6 text-purple-500 absolute -top-2 -right-2 animate-bounce\" />\n        </div>\n        \n        {/* Loading spinner */}\n        <div className=\"flex items-center justify-center gap-3 mb-4\">\n          <Loader2 className=\"w-6 h-6 animate-spin text-blue-600\" />\n          <span className=\"text-lg font-medium text-gray-700\">{message}</span>\n        </div>\n        \n        {/* Progress bar if provided */}\n        {progress !== null && (\n          <div className=\"w-64 bg-gray-200 rounded-full h-2 mx-auto mb-2\">\n            <div \n              className=\"bg-blue-600 h-2 rounded-full transition-all duration-300 ease-out\" \n              style={{ width: `${Math.max(0, Math.min(100, progress))}%` }}\n            />\n          </div>\n        )}\n        \n        {/* Helpful tips during loading */}\n        <div className=\"text-sm text-gray-500 max-w-md mx-auto mt-4\">\n          <p>💡 Tip: Use the force layout button to auto-arrange your nodes</p>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default OptimizedLoadingScreen;\n","// Performance optimizations for mind map rendering\nimport { useMemo, useCallback } from 'react';\n\n// Memoized node data to prevent unnecessary re-renders\nexport const useMemoizedNodeData = (data, dependencies = []) => {\n  return useMemo(() => data, dependencies);\n};\n\n// Throttled layout calculation to prevent excessive computations\nexport const useThrottledLayout = (layoutFunction, delay = 100) => {\n  return useCallback(\n    throttle(layoutFunction, delay),\n    [layoutFunction, delay]\n  );\n};\n\n// Throttle function implementation\nfunction throttle(func, delay) {\n  let timeoutId;\n  let lastExecTime = 0;\n  \n  return function (...args) {\n    const currentTime = Date.now();\n    \n    if (currentTime - lastExecTime > delay) {\n      func.apply(this, args);\n      lastExecTime = currentTime;\n    } else {\n      clearTimeout(timeoutId);\n      timeoutId = setTimeout(() => {\n        func.apply(this, args);\n        lastExecTime = Date.now();\n      }, delay - (currentTime - lastExecTime));\n    }\n  };\n}\n\n// Optimized data conversion with chunking for large datasets\nexport const convertDataInChunks = (data, chunkSize = 50) => {\n  return new Promise((resolve) => {\n    const chunks = [];\n    const allItems = [\n      ...data.topics.map(item => ({ ...item, type: 'topic' })),\n      ...data.cases.map(item => ({ ...item, type: 'case' })),\n      ...data.tasks.map(item => ({ ...item, type: 'task' })),\n      ...data.literature.map(item => ({ ...item, type: 'literature' }))\n    ];\n    \n    for (let i = 0; i < allItems.length; i += chunkSize) {\n      chunks.push(allItems.slice(i, i + chunkSize));\n    }\n    \n    resolve(chunks);\n  });\n};\n\n// Fast initial layout without force simulation\nexport const getQuickLayout = (nodes) => {\n  const gridSize = Math.ceil(Math.sqrt(nodes.length));\n  const nodeSpacing = 200;\n  \n  return nodes.map((node, index) => ({\n    ...node,\n    position: {\n      x: (index % gridSize) * nodeSpacing,\n      y: Math.floor(index / gridSize) * nodeSpacing\n    }\n  }));\n};\n\n// Memory-efficient edge creation\nexport const createOptimizedEdges = (connections, nodeIds) => {\n  const nodeIdSet = new Set(nodeIds);\n  \n  return connections\n    .filter(conn => nodeIdSet.has(conn.source) && nodeIdSet.has(conn.target))\n    .map(conn => ({\n      id: conn.id,\n      source: conn.source,\n      target: conn.target,\n      label: conn.label,\n      type: 'floating',\n      style: {\n        strokeWidth: 2,\n        stroke: '#64748b',\n        opacity: 0.85\n      },\n      animated: false,\n      updatable: true\n    }));\n};\n","// Sample literature data for testing the enhanced Literature modal\nexport const sampleLiteratureData = [\n  {\n    id: 1,\n    title: \"Efficacy of Cognitive Behavioral Therapy for Depression: A Meta-Analysis\",\n    authors: \"Smith, J.A., Johnson, B.K., Williams, C.D.\",\n    year: \"2023\",\n    type: \"meta-analysis\",\n    journal: \"Journal of Clinical Psychology\",\n    volume: \"79\",\n    pages: \"234-251\",\n    doi: \"10.1002/jclp.23456\",\n    abstract: \"This meta-analysis examines the efficacy of cognitive behavioral therapy (CBT) for treating major depressive disorder across 45 randomized controlled trials involving 3,242 participants. Results indicate that CBT shows significant effectiveness with a large effect size (d = 0.85) compared to control conditions. The analysis also reveals that individual CBT may be more effective than group CBT for severe depression cases.\",\n    keywords: \"cognitive behavioral therapy, depression, meta-analysis, psychotherapy, mental health\",\n    notes: \"\",\n    pdf_url: \"https://example.com/sample-cbt-meta-analysis.pdf\",\n    position: { x: 300, y: 100 }\n  },\n  {\n    id: 2,\n    title: \"DSM-5-TR Clinical Cases\",\n    authors: \"American Psychiatric Association\",\n    year: \"2022\",\n    type: \"guideline\",\n    journal: \"American Psychiatric Publishing\",\n    abstract: \"A comprehensive collection of clinical cases that illustrate the diagnostic criteria and clinical features of mental disorders as defined in the DSM-5-TR. Each case includes detailed patient presentations, differential diagnoses, and treatment considerations.\",\n    keywords: \"DSM-5, diagnosis, clinical cases, psychiatric disorders, differential diagnosis\",\n    notes: \"Essential reference for diagnostic clarity\",\n    position: { x: 500, y: 200 }\n  },\n  {\n    id: 3,\n    title: \"Pharmacological Treatment of Bipolar Disorder: Current Evidence\",\n    authors: \"Rodriguez, M.L., Chen, K.H., Anderson, P.R.\",\n    year: \"2023\",\n    type: \"review\",\n    journal: \"Bipolar Disorders\",\n    volume: \"25\",\n    pages: \"123-145\",\n    doi: \"10.1111/bdi.13289\",\n    abstract: \"This comprehensive review examines current evidence for pharmacological treatments of bipolar disorder, including mood stabilizers, antipsychotics, and adjunctive therapies. The review covers efficacy, safety profiles, and treatment-resistant cases.\",\n    keywords: \"bipolar disorder, pharmacotherapy, mood stabilizers, lithium, antipsychotics\",\n    notes: \"Important for medication management decisions\",\n    position: { x: 700, y: 150 }\n  },\n  {\n    id: 4,\n    title: \"Mindfulness-Based Interventions for Anxiety Disorders: A Systematic Review\",\n    authors: \"Taylor, S.M., Brown, A.J., Davis, L.K.\",\n    year: \"2023\",\n    type: \"review\",\n    journal: \"Clinical Psychology Review\",\n    volume: \"88\",\n    pages: \"102-118\",\n    abstract: \"Systematic review of mindfulness-based interventions for treating various anxiety disorders. Analysis of 28 studies shows moderate to large effect sizes for reducing anxiety symptoms, with particular effectiveness for generalized anxiety disorder.\",\n    keywords: \"mindfulness, anxiety disorders, meditation, systematic review, GAD\",\n    notes: \"Good evidence for mindfulness approaches\",\n    position: { x: 400, y: 300 }\n  },\n  {\n    id: 5,\n    title: \"Case Study: Treatment-Resistant Schizophrenia with Clozapine\",\n    authors: \"Wilson, K.R., Martinez, E.S.\",\n    year: \"2022\",\n    type: \"case-study\",\n    journal: \"Schizophrenia Bulletin\",\n    volume: \"48\",\n    pages: \"567-572\",\n    abstract: \"Detailed case study of a 28-year-old male with treatment-resistant schizophrenia who showed significant improvement after clozapine initiation. The case discusses monitoring protocols, side effect management, and long-term outcomes.\",\n    keywords: \"schizophrenia, clozapine, treatment-resistant, case study, antipsychotics\",\n    notes: \"Useful for understanding clozapine protocols\",\n    position: { x: 600, y: 400 }\n  }\n];\n\n// Sample connections between literature and other nodes\nexport const sampleConnections = [\n  {\n    id: \"conn-1\",\n    source: \"literature-1\",\n    target: \"case-101\", // Depression case\n    label: \"Treatment approach\"\n  },\n  {\n    id: \"conn-2\", \n    source: \"literature-2\",\n    target: \"topic-201\", // Diagnostic criteria topic\n    label: \"Reference guide\"\n  },\n  {\n    id: \"conn-3\",\n    source: \"literature-3\",\n    target: \"case-102\", // Bipolar case\n    label: \"Medication guidance\"\n  },\n  {\n    id: \"conn-4\",\n    source: \"literature-4\",\n    target: \"case-103\", // Anxiety case\n    label: \"Treatment option\"\n  },\n  {\n    id: \"conn-5\",\n    source: \"literature-5\",\n    target: \"case-104\", // Schizophrenia case\n    label: \"Treatment protocol\"\n  }\n];\n\n// Enhanced literature node factory\nexport const createLiteratureNode = (data) => ({\n  ...data,\n  label: data.title || 'Literature Item',\n  created_at: new Date().toISOString(),\n  updated_at: new Date().toISOString()\n});\n","// Utility to populate sample literature data for testing\nimport { sampleLiteratureData, sampleConnections } from '../data/sampleLiteratureData';\n\nexport const populateSampleLiteratureData = (setMindMapData, autoSaveMindMapData, addToast) => {\n  setMindMapData(prevData => {\n    // Add sample literature items if they don't already exist\n    const existingIds = new Set(prevData.literature.map(item => item.id));\n    const newLiterature = sampleLiteratureData.filter(item => !existingIds.has(item.id));\n    \n    if (newLiterature.length === 0) {\n      addToast('Sample literature data already exists', 'info');\n      return prevData;\n    }\n\n    // Create sample case and topic nodes to connect with literature\n    const sampleCases = [\n      {\n        id: 101,\n        label: 'Major Depression Case',\n        primary_diagnosis: 'Major Depressive Disorder',\n        chief_complaint: 'Persistent sadness and loss of interest',\n        secondary_diagnoses: ['Anxiety', 'Insomnia'],\n        position: { x: 100, y: 100 }\n      },\n      {\n        id: 102,\n        label: 'Bipolar Disorder Case', \n        primary_diagnosis: 'Bipolar I Disorder',\n        chief_complaint: 'Mood swings and impulsivity',\n        position: { x: 200, y: 200 }\n      },\n      {\n        id: 103,\n        label: 'Generalized Anxiety Case',\n        primary_diagnosis: 'Generalized Anxiety Disorder',\n        chief_complaint: 'Excessive worry and restlessness',\n        position: { x: 300, y: 300 }\n      },\n      {\n        id: 104,\n        label: 'Schizophrenia Case',\n        primary_diagnosis: 'Schizophrenia',\n        chief_complaint: 'Auditory hallucinations and delusions',\n        position: { x: 400, y: 400 }\n      }\n    ];\n\n    const sampleTopics = [\n      {\n        id: 201,\n        title: 'Diagnostic Criteria',\n        category: 'Assessment',\n        tags: ['DSM-5', 'diagnosis', 'criteria'],\n        position: { x: 150, y: 50 }\n      }\n    ];\n\n    // Filter out existing cases and topics\n    const existingCaseIds = new Set(prevData.cases.map(item => item.id));\n    const existingTopicIds = new Set(prevData.topics.map(item => item.id));\n    \n    const newCases = sampleCases.filter(item => !existingCaseIds.has(item.id));\n    const newTopics = sampleTopics.filter(item => !existingTopicIds.has(item.id));\n\n    // Add sample connections\n    const existingConnectionIds = new Set(prevData.connections.map(conn => conn.id));\n    const newConnections = sampleConnections.filter(conn => !existingConnectionIds.has(conn.id));\n\n    const updatedData = {\n      ...prevData,\n      literature: [...prevData.literature, ...newLiterature],\n      cases: [...prevData.cases, ...newCases],\n      topics: [...prevData.topics, ...newTopics],\n      connections: [...prevData.connections, ...newConnections]\n    };\n\n    // Save the updated data\n    autoSaveMindMapData(updatedData);\n    addToast(`Added ${newLiterature.length} literature items, ${newCases.length} cases, and ${newTopics.length} topics`, 'success');\n    \n    return updatedData;\n  });\n};\n\nexport const clearSampleData = (setMindMapData, autoSaveMindMapData, addToast) => {\n  setMindMapData(prevData => {\n    // Remove sample data based on IDs\n    const sampleLiteratureIds = new Set(sampleLiteratureData.map(item => item.id));\n    const sampleConnectionIds = new Set(sampleConnections.map(conn => conn.id));\n    const sampleCaseIds = new Set([101, 102, 103, 104]);\n    const sampleTopicIds = new Set([201]);\n\n    const updatedData = {\n      ...prevData,\n      literature: prevData.literature.filter(item => !sampleLiteratureIds.has(item.id)),\n      cases: prevData.cases.filter(item => !sampleCaseIds.has(item.id)),\n      topics: prevData.topics.filter(item => !sampleTopicIds.has(item.id)),\n      connections: prevData.connections.filter(conn => !sampleConnectionIds.has(conn.id))\n    };\n\n    autoSaveMindMapData(updatedData);\n    addToast('Sample literature data cleared', 'success');\n    \n    return updatedData;\n  });\n};\n","import React, { useState, useEffect, useCallback, useRef, useMemo, Suspense, lazy } from 'react';\nimport '@xyflow/react/dist/style.css';\nimport './App.css';\nimport axios from 'axios';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport {\n  ReactFlow,\n  addEdge,\n  Background,\n  Controls,\n  MiniMap,\n  useNodesState,\n  useEdgesState,\n  ReactFlowProvider,\n  Panel,\n  Handle,\n  Position,\n  useReactFlow,\n} from '@xyflow/react';\n\n// Lazy load heavy D3 dependencies\nconst loadD3Force = () => import('d3-force');\nconst loadDagre = () => import('dagre');\n\nimport {\n  Plus,\n  Brain,\n  Users,\n  CheckSquare,\n  Edit3,\n  Save,\n  ArrowLeft,\n  FileText,\n  Calendar,\n  Target,\n  BookOpen,\n  Trash2,\n  X,\n  Shuffle,\n  Download,\n  Cloud,\n  CheckCircle,\n  Tag,\n  Clock,\n  AlertCircle,\n  Info,\n  Star,\n  Zap,\n  Settings,\n  Eye,\n  Upload,\n  Bell,\n  CheckCircle2,\n  Loader2,\n  Sparkles,\n  Search, // Added for global search functionality\n  Heart,\n  Bookmark,\n  User,\n  Clipboard,\n  StickyNote,\n  Paperclip,\n  ChevronDown,\n  ChevronUp,\n  ArrowDown\n} from 'lucide-react';\n\n// Lazy load components for better initial load time\nimport { RichTextEditor, TemplateManager, LiteratureModal } from './components/LazyComponents';\nimport CaseModal from './components/CaseModal';\nimport TopicModal from './components/TopicModal';\nimport TaskModal from './components/TaskModal';\nimport FloatingEdge from './components/FloatingEdge'; // Import the custom FloatingEdge component\nimport EnhancedEdge from './components/EnhancedEdge'; // Import the enhanced edge component\nimport ConnectionLine from './components/ConnectionLine'; // Import the custom connection line for previews\nimport OptimizedLoadingScreen from './components/OptimizedLoadingScreen';\n\n// Import performance utilities\nimport { \n  useMemoizedNodeData, \n  convertDataInChunks, \n  getQuickLayout, \n  createOptimizedEdges \n} from './utils/performanceUtils';\nimport { populateSampleLiteratureData, clearSampleData } from './utils/sampleDataUtils';\n\n// Use the environment variable for the backend URL, but provide a fallback\n// to the local server for development. This is a more robust pattern.\n// The .replace() call removes any trailing slashes to prevent \"404 Not Found\"\n// errors caused by double slashes in the request path (e.g., \"//api/\").\nconst BACKEND_URL = (process.env.REACT_APP_BACKEND_URL || 'http://localhost:8000').replace(/\\/$/, '');\nconst API = `${BACKEND_URL}/api`;\n\n// Fix ResizeObserver error that prevents React Flow from working\nconst debounce = (func, wait) => {\n  let timeout;\n  return function executedFunction(...args) {\n    const later = () => {\n      clearTimeout(timeout);\n      func(...args);\n    };\n    clearTimeout(timeout);\n    timeout = setTimeout(later, wait);\n  };\n};\n\n// Suppress ResizeObserver errors that don't affect functionality\nconst originalError = console.error;\nconsole.error = (...args) => {\n  if (args[0] && args[0].includes && args[0].includes('ResizeObserver loop')) {\n    return;\n  }\n  originalError(...args);\n};\n\n// Toast Notification System\nconst Toast = ({ message, type = 'success', onClose, duration = 3000 }) => {\n  useEffect(() => {\n    const timer = setTimeout(onClose, duration);\n    return () => clearTimeout(timer);\n  }, [onClose, duration]);\n\n  const getToastStyles = () => {\n    const baseStyles = \"fixed top-4 right-4 z-50 px-6 py-3 rounded-lg shadow-lg transition-all duration-500 transform\";\n    const typeStyles = {\n      success: \"bg-green-600 text-white border-l-4 border-green-400\",\n      error: \"bg-red-600 text-white border-l-4 border-red-400\",\n      info: \"bg-blue-600 text-white border-l-4 border-blue-400\",\n      saving: \"bg-purple-600 text-white border-l-4 border-purple-400\"\n    };\n    return `${baseStyles} ${typeStyles[type]}`;\n  };\n\n  const getIcon = () => {\n    switch (type) {\n      case 'success': return <CheckCircle2 size={16} className=\"mr-2\" />;\n      case 'error': return <AlertCircle size={16} className=\"mr-2\" />;\n      case 'info': return <Info size={16} className=\"mr-2\" />;\n      case 'saving': return <Loader2 size={16} className=\"mr-2 animate-spin\" />;\n      default: return <CheckCircle2 size={16} className=\"mr-2\" />;\n    }\n  };\n\n  return (\n    <div className={getToastStyles()}>\n      <div className=\"flex items-center\">\n        {getIcon()}\n        <span className=\"text-sm font-medium\">{message}</span>\n        <button\n          onClick={onClose}\n          className=\"ml-4 text-white hover:text-gray-200 transition-colors\"\n        >\n          <X size={14} />\n        </button>\n      </div>\n    </div>\n  );\n};\n\n// Enhanced Loading Button Component\nconst LoadingButton = ({ onClick, loading, disabled, children, className, icon: Icon, ...props }) => {\n  return (\n    <button\n      onClick={onClick}\n      disabled={disabled || loading}\n      className={`${className} transform transition-all duration-200 hover:scale-105 active:scale-95 ${disabled || loading ? 'cursor-not-allowed opacity-50' : 'hover:shadow-lg'\n        }`}\n      {...props}\n    >\n      <div className=\"flex items-center gap-2\">\n        {loading ? (\n          <Loader2 size={16} className=\"animate-spin\" />\n        ) : Icon ? (\n          <Icon size={16} />\n        ) : null}\n        {children}\n      </div>\n    </button>\n  );\n};\n\n// localStorage utilities with enhanced feedback\nconst STORAGE_KEY = 'pgy3_mindmap_data';\nconst STORAGE_VERSION = '1.1';\n\nconst localStorageUtils = {\n  // Save data to localStorage with debouncing and callback for UI feedback\n  save: (() => {\n    let timeoutId;\n    return (data, onSaveStart, onSaveComplete, isAnimating = false) => {\n      clearTimeout(timeoutId);\n\n      if (onSaveStart) onSaveStart();\n\n      // Increase debounce delay during animations\n      const debounceDelay = isAnimating ? 1200 : 800;\n\n      timeoutId = setTimeout(() => {\n        try {\n          const storageData = {\n            version: STORAGE_VERSION,\n            timestamp: new Date().toISOString(),\n            data: data\n          };\n          localStorage.setItem(STORAGE_KEY, JSON.stringify(storageData));\n          console.log('Mind map data auto-saved to localStorage');\n          if (onSaveComplete) onSaveComplete(true);\n        } catch (error) {\n          console.error('Error saving to localStorage:', error);\n          if (onSaveComplete) onSaveComplete(false, error);\n\n          if (error.name === 'QuotaExceededError') {\n            console.warn('localStorage quota exceeded, clearing old data...');\n            try {\n              localStorage.removeItem(STORAGE_KEY);\n            } catch (clearError) {\n              console.error('Error clearing localStorage:', clearError);\n            }\n          }\n        }\n      }, debounceDelay); // Variable debounce delay\n    };\n  })(),\n\n  // Load data from localStorage\n  load: () => {\n    try {\n      const stored = localStorage.getItem(STORAGE_KEY);\n      if (!stored) {\n        console.log('No localStorage data found');\n        return null;\n      }\n\n      const storageData = JSON.parse(stored);\n\n      // Version check\n      if (storageData.version !== STORAGE_VERSION) {\n        console.log('localStorage version mismatch, clearing old data');\n        localStorage.removeItem(STORAGE_KEY);\n        return null;\n      }\n\n      console.log('Mind map data loaded from localStorage', storageData.timestamp);\n      return storageData.data;\n    } catch (error) {\n      console.error('Error loading from localStorage:', error);\n      // Clear corrupted data\n      try {\n        localStorage.removeItem(STORAGE_KEY);\n      } catch (clearError) {\n        console.error('Error clearing corrupted localStorage:', clearError);\n      }\n      return null;\n    }\n  },\n\n  // Clear stored data\n  clear: () => {\n    try {\n      localStorage.removeItem(STORAGE_KEY);\n      console.log('localStorage data cleared');\n    } catch (error) {\n      console.error('Error clearing localStorage:', error);\n    }\n  },\n\n  // Get storage info\n  getStorageInfo: () => {\n    try {\n      const stored = localStorage.getItem(STORAGE_KEY);\n      if (!stored) return null;\n\n      const data = JSON.parse(stored);\n      return {\n        version: data.version,\n        timestamp: data.timestamp,\n        size: new Blob([stored]).size\n      };\n    } catch (error) {\n      return null;\n    }\n  }\n};\n\n// Enhanced CSV export utilities\nconst csvUtils = {\n  generatePatientCasesCSV: (cases, onProgress) => {\n    if (!cases || cases.length === 0) {\n      return '';\n    }\n\n    if (onProgress) onProgress(10, 'Preparing headers...');\n\n    // Enhanced CSV headers with more detailed information\n    const headers = [\n      'Case ID',\n      'Encounter Date',\n      'Primary Diagnosis',\n      'Secondary Diagnoses',\n      'Age',\n      'Gender',\n      'Chief Complaint',\n      'History of Present Illness',\n      'Medical History',\n      'Medications',\n      'Mental Status Exam',\n      'Assessment & Plan',\n      'Status',\n      'Notes',\n      'Created Date',\n      'Updated Date',\n      'Linked Topics Count',\n      'Last Modified By'\n    ];\n\n    if (onProgress) onProgress(30, 'Processing case data...');\n\n    // Convert cases to CSV rows with enhanced data\n    const rows = cases.map((caseItem, index) => {\n      if (onProgress) onProgress(30 + (index / cases.length) * 50, `Processing case ${index + 1}/${cases.length}...`);\n\n      return [\n        caseItem.case_id || '',\n        caseItem.encounter_date ? new Date(caseItem.encounter_date).toLocaleDateString() : '',\n        caseItem.primary_diagnosis || '',\n        Array.isArray(caseItem.secondary_diagnoses) ? caseItem.secondary_diagnoses.join('; ') : '',\n        caseItem.age || '',\n        caseItem.gender || '',\n        caseItem.chief_complaint || '',\n        caseItem.history_present_illness || '',\n        caseItem.medical_history || '',\n        Array.isArray(caseItem.medications) ? caseItem.medications.join('; ') : '',\n        caseItem.mental_status_exam || '',\n        caseItem.assessment_plan || '',\n        caseItem.status || '',\n        caseItem.notes || '',\n        caseItem.created_at ? new Date(caseItem.created_at).toLocaleDateString() : '',\n        caseItem.updated_at ? new Date(caseItem.updated_at).toLocaleDateString() : '',\n        Array.isArray(caseItem.linked_topics) ? caseItem.linked_topics.length : '0',\n        'PGY-3 System'\n      ];\n    });\n\n    if (onProgress) onProgress(85, 'Formatting CSV content...');\n\n    // Escape CSV values and join\n    const escapeCsvValue = (value) => {\n      const stringValue = String(value);\n      if (stringValue.includes(',') || stringValue.includes('\"') || stringValue.includes('\\n')) {\n        return `\"${stringValue.replace(/\"/g, '\"\"')}\"`;\n      }\n      return stringValue;\n    };\n\n    const csvContent = [\n      headers.map(escapeCsvValue).join(','),\n      ...rows.map(row => row.map(escapeCsvValue).join(','))\n    ].join('\\n');\n\n    if (onProgress) onProgress(100, 'CSV generation complete!');\n\n    return csvContent;\n  },\n\n  downloadCSV: (csvContent, filename = 'patient_cases.csv') => {\n    const blob = new Blob([csvContent], { type: 'text/csv;charset=utf-8;' });\n    const link = document.createElement('a');\n    const url = URL.createObjectURL(blob);\n\n    link.setAttribute('href', url);\n    link.setAttribute('download', filename);\n    link.style.visibility = 'hidden';\n\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n\n    URL.revokeObjectURL(url);\n  },\n\n  // Generate summary statistics\n  generateCasesSummary: (cases) => {\n    if (!cases || cases.length === 0) return null;\n\n    const diagnoses = {};\n    const statuses = {};\n    const ageGroups = { '18-30': 0, '31-50': 0, '51-70': 0, '70+': 0, 'Unknown': 0 };\n    const genders = {};\n\n    cases.forEach(caseItem => {\n      // Diagnoses\n      if (caseItem.primary_diagnosis) {\n        diagnoses[caseItem.primary_diagnosis] = (diagnoses[caseItem.primary_diagnosis] || 0) + 1;\n      }\n\n      // Status\n      if (caseItem.status) {\n        statuses[caseItem.status] = (statuses[caseItem.status] || 0) + 1;\n      }\n\n      // Age groups\n      if (caseItem.age) {\n        if (caseItem.age <= 30) ageGroups['18-30']++;\n        else if (caseItem.age <= 50) ageGroups['31-50']++;\n        else if (caseItem.age <= 70) ageGroups['51-70']++;\n        else ageGroups['70+']++;\n      } else {\n        ageGroups['Unknown']++;\n      }\n\n      // Gender\n      if (caseItem.gender) {\n        genders[caseItem.gender] = (genders[caseItem.gender] || 0) + 1;\n      }\n    });\n\n    return {\n      totalCases: cases.length,\n      diagnoses,\n      statuses,\n      ageGroups,\n      genders\n    };\n  }\n};\n\n// Enhanced Custom Node Components with better visual effects and data\nconst TopicNode = ({ data, selected }) => {\n  const [isVisible, setIsVisible] = useState(data.skipAnimation || false);\n  \n  // Entry animation - only if not skipping animations\n  useEffect(() => {\n    if (!data.skipAnimation) {\n      const timer = setTimeout(() => setIsVisible(true), 100);\n      return () => clearTimeout(timer);\n    }\n  }, [data.skipAnimation]);\n\n  const completionPercentage = data.flashcard_count > 0\n    ? ((data.completed_flashcards || 0) / data.flashcard_count) * 100\n    : 0;\n\n  return (\n    <div\n      className={`group px-4 py-3 shadow-lg border-2 transition-all duration-700 min-w-[220px] relative hover:shadow-2xl transform hover:scale-105 backdrop-blur-sm ${selected\n          ? 'border-teal-400 shadow-xl scale-105 ring-4 ring-teal-200 animate-pulse'\n          : 'border-transparent hover:border-teal-300 hover:ring-2 hover:ring-teal-100'\n        } ${isVisible ? 'opacity-100 scale-100 translate-y-0' : 'opacity-0 scale-75 translate-y-8'}`}\n      style={{\n        backgroundColor: data.color || '#3B82F6',\n        color: 'white',\n        borderRadius: '12px !important', // Force border radius with !important\n        WebkitBorderRadius: '12px', // Safari compatibility\n        MozBorderRadius: '12px', // Firefox compatibility\n        overflow: 'hidden', // Ensure child elements respect border radius\n        boxShadow: selected\n          ? `0 0 20px ${data.color || '#3B82F6'}40`\n          : `0 4px 20px ${data.color || '#3B82F6'}20`,\n        transition: 'all 0.7s cubic-bezier(0.34, 1.56, 0.64, 1), transform 0.3s ease'\n      }}\n    >\n      {/* Connection Hotspots - Stacked source and target handles for all four sides */}\n      {/* Top handles */}\n      <Handle\n        id=\"top\"\n        type=\"source\"\n        position={Position.Top}\n        className=\"w-3 h-3 !bg-blue-500 transition-all duration-300 hover:scale-150 cursor-pointer opacity-0 group-hover:opacity-100\"\n        style={{\n          left: '50%',\n          transform: 'translateX(-50%)',\n          zIndex: 2\n        }}\n        isConnectable={true}\n      />\n      <Handle\n        id=\"top\"\n        type=\"target\"\n        position={Position.Top}\n        className=\"w-3 h-3 !bg-blue-500 transition-all duration-300 hover:scale-150 cursor-pointer opacity-0 group-hover:opacity-100\"\n        style={{\n          left: '50%',\n          transform: 'translateX(-50%)',\n          zIndex: 1\n        }}\n        isConnectable={true}\n      />\n\n      {/* Right handles */}\n      <Handle\n        id=\"right\"\n        type=\"source\"\n        position={Position.Right}\n        className=\"w-3 h-3 !bg-blue-500 transition-all duration-300 hover:scale-150 cursor-pointer opacity-0 group-hover:opacity-100\"\n        style={{\n          top: '50%',\n          transform: 'translateY(-50%)',\n          zIndex: 2\n        }}\n        isConnectable={true}\n      />\n      <Handle\n        id=\"right\"\n        type=\"target\"\n        position={Position.Right}\n        className=\"w-3 h-3 !bg-blue-500 transition-all duration-300 hover:scale-150 cursor-pointer opacity-0 group-hover:opacity-100\"\n        style={{\n          top: '50%',\n          transform: 'translateY(-50%)',\n          zIndex: 1\n        }}\n        isConnectable={true}\n      />\n\n      {/* Bottom handles */}\n      <Handle\n        id=\"bottom\"\n        type=\"source\"\n        position={Position.Bottom}\n        className=\"w-3 h-3 !bg-blue-500 transition-all duration-300 hover:scale-150 cursor-pointer opacity-0 group-hover:opacity-100\"\n        style={{\n          left: '50%',\n          transform: 'translateX(-50%)',\n          zIndex: 2\n        }}\n        isConnectable={true}\n      />\n      <Handle\n        id=\"bottom\"\n        type=\"target\"\n        position={Position.Bottom}\n        className=\"w-3 h-3 !bg-blue-500 transition-all duration-300 hover:scale-150 cursor-pointer opacity-0 group-hover:opacity-100\"\n        style={{\n          left: '50%',\n          transform: 'translateX(-50%)',\n          zIndex: 1\n        }}\n        isConnectable={true}\n      />\n\n      {/* Left handles */}\n      <Handle\n        id=\"left\"\n        type=\"source\"\n        position={Position.Left}\n        className=\"w-3 h-3 !bg-blue-500 transition-all duration-300 hover:scale-150 cursor-pointer opacity-0 group-hover:opacity-100\"\n        style={{\n          top: '50%',\n          transform: 'translateY(-50%)',\n          zIndex: 2\n        }}\n        isConnectable={true}\n      />\n      <Handle\n        id=\"left\"\n        type=\"target\"\n        position={Position.Left}\n        className=\"w-3 h-3 !bg-blue-500 transition-all duration-300 hover:scale-150 cursor-pointer opacity-0 group-hover:opacity-100\"\n        style={{\n          top: '50%',\n          transform: 'translateY(-50%)',\n          zIndex: 1\n        }}\n        isConnectable={true}\n      />\n\n      {/* Priority indicator */}\n      {data.priority && (\n        <div className=\"absolute -top-2 -right-2\">\n          <div className={`w-6 h-6 rounded-full flex items-center justify-center text-xs font-bold border-2 border-white ${data.priority === 'high' ? 'bg-red-500' :\n              data.priority === 'medium' ? 'bg-yellow-500' : 'bg-green-500'\n            }`}>\n            {data.priority === 'high' ? '!' : data.priority === 'medium' ? '•' : '✓'}\n          </div>\n        </div>\n      )}\n\n      <div className=\"flex items-center gap-2 mb-2\">\n        <div className=\"flex items-center gap-1\">\n          <Brain size={16} className=\"drop-shadow-sm\" />\n          {data.tags && data.tags.length > 0 && (\n            <Tag size={12} className=\"opacity-75\" />\n          )}\n        </div>\n        <div className=\"font-semibold text-sm truncate flex-1\">{data.label}</div>\n        {data.onDelete && (\n          <button\n            onClick={(e) => {\n              // Don't stop propagation immediately - delay the action to allow double-clicks\n              e.preventDefault(); // Prevent any default behavior but allow bubbling\n              \n              // Use a longer timeout to distinguish between single click and double-click\n              const deleteTimeout = setTimeout(() => {\n                // Only execute delete if this wasn't part of a double-click sequence\n                e.stopPropagation(); // Stop propagation only when actually deleting\n                data.onDelete();\n              }, 300); // Increased timeout\n              \n              // Store timeout ID on the button to cancel it if double-click occurs\n              e.currentTarget.deleteTimeout = deleteTimeout;\n            }}\n            onDoubleClick={(e) => {\n              // Cancel the pending delete action\n              if (e.currentTarget.deleteTimeout) {\n                clearTimeout(e.currentTarget.deleteTimeout);\n                e.currentTarget.deleteTimeout = null;\n              }\n              \n              // Don't prevent default - allow the double-click to bubble up for modal opening\n              // The parent node will handle the double-click to open the modal\n            }}\n            className=\"ml-auto p-1 hover:bg-white hover:bg-opacity-20 rounded transition-all duration-200 hover:scale-110 opacity-70 hover:opacity-100\"\n          >\n            <X size={12} />\n          </button>\n        )}\n      </div>\n\n      <div className=\"text-xs opacity-90 mb-2\">{data.category}</div>\n\n      {/* Enhanced progress display */}\n      {data.flashcard_count > 0 && (\n        <div className=\"text-xs mt-2 space-y-1\">\n          <div className=\"flex justify-between items-center\">\n            <span className=\"opacity-90\">{data.completed_flashcards}/{data.flashcard_count} flashcards</span>\n            <span className=\"font-semibold\">{Math.round(completionPercentage)}%</span>\n          </div>\n          <div className=\"w-full bg-white bg-opacity-20 rounded-full h-2 overflow-hidden\">\n            <div\n              className=\"h-full bg-white rounded-full transition-all duration-1000 ease-out\"\n              style={{ width: `${completionPercentage}%` }}\n            />\n          </div>\n        </div>\n      )}\n\n      {/* Tags display */}\n      {data.tags && data.tags.length > 0 && (\n        <div className=\"flex flex-wrap gap-1 mt-2\">\n          {data.tags.slice(0, 3).map((tag, index) => (\n            <span\n              key={index}\n              className=\"px-2 py-1 bg-white bg-opacity-20 rounded-full text-xs\"\n            >\n              {tag}\n            </span>\n          ))}\n          {data.tags.length > 3 && (\n            <span className=\"px-2 py-1 bg-white bg-opacity-20 rounded-full text-xs\">\n              +{data.tags.length - 3}\n            </span>\n          )}\n        </div>\n      )}\n\n      {/* Last updated indicator */}\n      {data.updated_at && (\n        <div className=\"absolute bottom-1 right-1 opacity-50\">\n          <Clock size={10} />\n        </div>\n      )}\n    </div>\n  );\n};\n\nconst CaseNode = ({ data, selected }) => {\n  const [isVisible, setIsVisible] = useState(data.skipAnimation || false);\n  \n  // Entry animation with slight delay for staggered effect - only if not skipping animations\n  useEffect(() => {\n    if (!data.skipAnimation) {\n      const timer = setTimeout(() => setIsVisible(true), 150);\n      return () => clearTimeout(timer);\n    }\n  }, [data.skipAnimation]);\n\n  const getStatusColor = (status) => {\n    switch (status) {\n      case 'active': return 'bg-green-100 text-green-800 border-green-200';\n      case 'archived': return 'bg-gray-100 text-gray-800 border-gray-200';\n      case 'follow_up': return 'bg-yellow-100 text-yellow-800 border-yellow-200';\n      default: return 'bg-blue-100 text-blue-800 border-blue-200';\n    }\n  };\n\n  const getUrgencyLevel = (data) => {\n    // Simple urgency calculation based on keywords\n    const urgentKeywords = ['emergency', 'urgent', 'crisis', 'acute', 'severe'];\n    const complaint = data.chief_complaint?.toLowerCase() || '';\n    const diagnosis = data.diagnosis?.toLowerCase() || '';\n\n    if (urgentKeywords.some(keyword => complaint.includes(keyword) || diagnosis.includes(keyword))) {\n      return 'high';\n    }\n    return 'normal';\n  };\n\n  const urgency = getUrgencyLevel(data);\n\n  return (\n    <div\n      className={`group px-4 py-3 rounded-xl shadow-lg border-2 transition-all duration-600 min-w-[220px] bg-white relative hover:shadow-2xl transform hover:scale-105 ${selected\n          ? 'border-blue-400 shadow-xl scale-105 ring-4 ring-blue-200'\n          : 'border-gray-200 hover:border-blue-300 hover:ring-2 hover:ring-blue-100'\n        } ${urgency === 'high' ? 'ring-2 ring-red-300' : ''} ${isVisible ? 'opacity-100 scale-100 translate-y-0 rotate-0' : 'opacity-0 scale-90 translate-y-6 rotate-1'}`}\n      style={{\n        transition: 'all 0.6s cubic-bezier(0.25, 0.46, 0.45, 0.94), transform 0.3s ease'\n      }}\n    >\n      {/* Connection Hotspots - Stacked source and target handles for all four sides */}\n      {/* Top handles */}\n      <Handle\n        id=\"top\"\n        type=\"source\"\n        position={Position.Top}\n        className=\"w-3 h-3 !bg-blue-500 transition-all duration-300 hover:scale-150 cursor-pointer opacity-0 group-hover:opacity-100\"\n        style={{\n          left: '50%',\n          transform: 'translateX(-50%)',\n          zIndex: 2\n        }}\n        isConnectable={true}\n      />\n      <Handle\n        id=\"top\"\n        type=\"target\"\n        position={Position.Top}\n        className=\"w-3 h-3 !bg-blue-500 transition-all duration-300 hover:scale-150 cursor-pointer opacity-0 group-hover:opacity-100\"\n        style={{\n          left: '50%',\n          transform: 'translateX(-50%)',\n          zIndex: 1\n        }}\n        isConnectable={true}\n      />\n\n      {/* Right handles */}\n      <Handle\n        id=\"right\"\n        type=\"source\"\n        position={Position.Right}\n        className=\"w-3 h-3 !bg-blue-500 transition-all duration-300 hover:scale-150 cursor-pointer opacity-0 group-hover:opacity-100\"\n        style={{\n          top: '50%',\n          transform: 'translateY(-50%)',\n          zIndex: 2\n        }}\n        isConnectable={true}\n      />\n      <Handle\n        id=\"right\"\n        type=\"target\"\n        position={Position.Right}\n        className=\"w-3 h-3 !bg-blue-500 transition-all duration-300 hover:scale-150 cursor-pointer opacity-0 group-hover:opacity-100\"\n        style={{\n          top: '50%',\n          transform: 'translateY(-50%)',\n          zIndex: 1\n        }}\n        isConnectable={true}\n      />\n\n      {/* Bottom handles */}\n      <Handle\n        id=\"bottom\"\n        type=\"source\"\n        position={Position.Bottom}\n        className=\"w-3 h-3 !bg-blue-500 transition-all duration-300 hover:scale-150 cursor-pointer opacity-0 group-hover:opacity-100\"\n        style={{\n          left: '50%',\n          transform: 'translateX(-50%)',\n          zIndex: 2\n        }}\n        isConnectable={true}\n      />\n      <Handle\n        id=\"bottom\"\n        type=\"target\"\n        position={Position.Bottom}\n        className=\"w-3 h-3 !bg-blue-500 transition-all duration-300 hover:scale-150 cursor-pointer opacity-0 group-hover:opacity-100\"\n        style={{\n          left: '50%',\n          transform: 'translateX(-50%)',\n          zIndex: 1\n        }}\n        isConnectable={true}\n      />\n\n      {/* Left handles */}\n      <Handle\n        id=\"left\"\n        type=\"source\"\n        position={Position.Left}\n        className=\"w-3 h-3 !bg-blue-500 transition-all duration-300 hover:scale-150 cursor-pointer opacity-0 group-hover:opacity-100\"\n        style={{\n          top: '50%',\n          transform: 'translateY(-50%)',\n          zIndex: 2\n        }}\n        isConnectable={true}\n      />\n      <Handle\n        id=\"left\"\n        type=\"target\"\n        position={Position.Left}\n        className=\"w-3 h-3 !bg-blue-500 transition-all duration-300 hover:scale-150 cursor-pointer opacity-0 group-hover:opacity-100\"\n        style={{\n          top: '50%',\n          transform: 'translateY(-50%)',\n          zIndex: 1\n        }}\n        isConnectable={true}\n      />\n\n      {/* Urgency indicator */}\n      {urgency === 'high' && (\n        <div className=\"absolute -top-2 -right-2\">\n          <div className=\"w-6 h-6 bg-red-500 rounded-full flex items-center justify-center border-2 border-white animate-pulse\">\n            <AlertCircle size={14} className=\"text-white\" />\n          </div>\n        </div>\n      )}\n\n      <div className=\"flex items-center gap-2 mb-2\">\n        <div className=\"flex items-center gap-1\">\n          <Users size={16} className=\"text-blue-600\" />\n          {data.linked_topics && data.linked_topics.length > 0 && (\n            <div className=\"text-xs bg-blue-100 text-blue-600 px-1 rounded\">\n              {data.linked_topics.length}\n            </div>\n          )}\n        </div>\n        <div className=\"font-semibold text-sm text-gray-800 truncate flex-1\">{data.label}</div>\n        {data.onDelete && (\n          <button\n            onClick={(e) => {\n              // Don't stop propagation immediately - delay the action to allow double-clicks\n              e.preventDefault(); // Prevent any default behavior but allow bubbling\n              \n              // Use a longer timeout to distinguish between single click and double-click\n              const deleteTimeout = setTimeout(() => {\n                // Only execute delete if this wasn't part of a double-click sequence\n                e.stopPropagation(); // Stop propagation only when actually deleting\n                data.onDelete();\n              }, 300); // Increased timeout\n              \n              // Store timeout ID on the button to cancel it if double-click occurs\n              e.currentTarget.deleteTimeout = deleteTimeout;\n            }}\n            onDoubleClick={(e) => {\n              // Cancel the pending delete action\n              if (e.currentTarget.deleteTimeout) {\n                clearTimeout(e.currentTarget.deleteTimeout);\n                e.currentTarget.deleteTimeout = null;\n              }\n              \n              // Don't prevent default - allow the double-click to bubble up for modal opening\n              // The parent node will handle the double-click to open the modal\n            }}\n            className=\"ml-auto p-1 hover:bg-gray-200 rounded transition-all duration-200 hover:scale-110 opacity-70 hover:opacity-100\"\n          >\n            <X size={12} />\n          </button>\n        )}\n      </div>\n\n      <div className=\"text-xs text-gray-600 mb-2 truncate\">{data.case_name || data.label}</div>\n\n      {/* Enhanced patient info */}\n      <div className=\"space-y-1\">\n        {data.age && (\n          <div className=\"text-xs text-blue-600 flex items-center gap-1\">\n            <Calendar size={10} />\n            Age: {data.age}\n          </div>\n        )}\n\n        {/* Status badge */}\n        {data.status && (\n          <span className={`inline-block px-2 py-1 rounded-full text-xs border ${getStatusColor(data.status)}`}>\n            {data.status}\n          </span>\n        )}\n      </div>\n\n      {/* Progress indicators */}\n      {data.tasks_count && data.tasks_count > 0 && (\n        <div className=\"mt-2 text-xs text-gray-500 flex items-center gap-1\">\n          <CheckSquare size={10} />\n          {data.completed_tasks || 0}/{data.tasks_count} tasks\n        </div>\n      )}\n\n      {/* Last updated indicator */}\n      {data.updated_at && (\n        <div className=\"absolute bottom-1 right-1 opacity-30\">\n          <Clock size={10} />\n        </div>\n      )}\n    </div>\n  );\n};\n\nconst TaskNode = ({ data, selected }) => {\n  const [isVisible, setIsVisible] = useState(data.skipAnimation || false);\n  \n  // Entry animation with different timing for variety - only if not skipping animations\n  useEffect(() => {\n    if (!data.skipAnimation) {\n      const timer = setTimeout(() => setIsVisible(true), 200);\n      return () => clearTimeout(timer);\n    }\n  }, [data.skipAnimation]);\n\n  const statusClasses = {\n    pending: 'bg-yellow-500',\n    in_progress: 'bg-blue-600',\n    completed: 'bg-green-700 opacity-60'\n  };\n\n  return (\n    <div\n      className={`group px-4 py-3 rounded-xl shadow-lg border-2 transition-all duration-500 min-w-[200px] text-white relative hover:shadow-2xl transform hover:scale-105 ${selected\n          ? 'border-yellow-400 shadow-xl scale-105 ring-4 ring-yellow-200'\n          : 'border-transparent hover:border-yellow-300 hover:ring-2 hover:ring-yellow-100'\n        } ${statusClasses[data.status] || 'bg-gray-500'} ${isVisible ? 'opacity-100 scale-100 translate-x-0' : 'opacity-0 scale-85 -translate-x-4'}`}\n      style={{\n        transition: 'all 0.5s cubic-bezier(0.68, -0.55, 0.265, 1.55), transform 0.3s ease'\n      }}\n    >\n      {/* Connection Hotspots - Stacked source and target handles for all four sides */}\n      {/* Top handles */}\n      <Handle\n        id=\"top\"\n        type=\"source\"\n        position={Position.Top}\n        className=\"w-3 h-3 !bg-blue-500 transition-all duration-300 hover:scale-150 cursor-pointer opacity-0 group-hover:opacity-100\"\n        style={{\n          left: '50%',\n          transform: 'translateX(-50%)',\n          zIndex: 2\n        }}\n        isConnectable={true}\n      />\n      <Handle\n        id=\"top\"\n        type=\"target\"\n        position={Position.Top}\n        className=\"w-3 h-3 !bg-blue-500 transition-all duration-300 hover:scale-150 cursor-pointer opacity-0 group-hover:opacity-100\"\n        style={{\n          left: '50%',\n          transform: 'translateX(-50%)',\n          zIndex: 1\n        }}\n        isConnectable={true}\n      />\n\n      {/* Right handles */}\n      <Handle\n        id=\"right\"\n        type=\"source\"\n        position={Position.Right}\n        className=\"w-3 h-3 !bg-blue-500 transition-all duration-300 hover:scale-150 cursor-pointer opacity-0 group-hover:opacity-100\"\n        style={{\n          top: '50%',\n          transform: 'translateY(-50%)',\n          zIndex: 2\n        }}\n        isConnectable={true}\n      />\n      <Handle\n        id=\"right\"\n        type=\"target\"\n        position={Position.Right}\n        className=\"w-3 h-3 !bg-blue-500 transition-all duration-300 hover:scale-150 cursor-pointer opacity-0 group-hover:opacity-100\"\n        style={{\n          top: '50%',\n          transform: 'translateY(-50%)',\n          zIndex: 1\n        }}\n        isConnectable={true}\n      />\n\n      {/* Bottom handles */}\n      <Handle\n        id=\"bottom\"\n        type=\"source\"\n        position={Position.Bottom}\n        className=\"w-3 h-3 !bg-blue-500 transition-all duration-300 hover:scale-150 cursor-pointer opacity-0 group-hover:opacity-100\"\n        style={{\n          left: '50%',\n          transform: 'translateX(-50%)',\n          zIndex: 2\n        }}\n        isConnectable={true}\n      />\n      <Handle\n        id=\"bottom\"\n        type=\"target\"\n        position={Position.Bottom}\n        className=\"w-3 h-3 !bg-blue-500 transition-all duration-300 hover:scale-150 cursor-pointer opacity-0 group-hover:opacity-100\"\n        style={{\n          left: '50%',\n          transform: 'translateX(-50%)',\n          zIndex: 1\n        }}\n        isConnectable={true}\n      />\n\n      {/* Left handles */}\n      <Handle\n        id=\"left\"\n        type=\"source\"\n        position={Position.Left}\n        className=\"w-3 h-3 !bg-blue-500 transition-all duration-300 hover:scale-150 cursor-pointer opacity-0 group-hover:opacity-100\"\n        style={{\n          top: '50%',\n          transform: 'translateY(-50%)',\n          zIndex: 2\n        }}\n        isConnectable={true}\n      />\n      <Handle\n        id=\"left\"\n        type=\"target\"\n        position={Position.Left}\n        className=\"w-3 h-3 !bg-blue-500 transition-all duration-300 hover:scale-150 cursor-pointer opacity-0 group-hover:opacity-100\"\n        style={{\n          top: '50%',\n          transform: 'translateY(-50%)',\n          zIndex: 1\n        }}\n        isConnectable={true}\n      />\n\n      <div className=\"flex items-center gap-2 mb-1\">\n        <CheckSquare size={16} />\n        <div className=\"font-semibold text-sm\">{data.label}</div>\n        {data.onDelete && (\n          <button\n            onClick={(e) => {\n              // Don't stop propagation immediately - delay the action to allow double-clicks\n              e.preventDefault(); // Prevent any default behavior but allow bubbling\n              \n              // Use a longer timeout to distinguish between single click and double-click\n              const deleteTimeout = setTimeout(() => {\n                // Only execute delete if this wasn't part of a double-click sequence\n                e.stopPropagation(); // Stop propagation only when actually deleting\n                data.onDelete();\n              }, 300); // Increased timeout\n              \n              // Store timeout ID on the button to cancel it if double-click occurs\n              e.currentTarget.deleteTimeout = deleteTimeout;\n            }}\n            onDoubleClick={(e) => {\n              // Cancel the pending delete action\n              if (e.currentTarget.deleteTimeout) {\n                clearTimeout(e.currentTarget.deleteTimeout);\n                e.currentTarget.deleteTimeout = null;\n              }\n              \n              // Don't prevent default - allow the double-click to bubble up for modal opening\n              // The parent node will handle the double-click to open the modal\n            }}\n            className=\"ml-auto p-1 hover:bg-white hover:bg-opacity-20 rounded transition-all duration-200 hover:scale-110 opacity-70 hover:opacity-100\"\n          >\n            <X size={12} />\n          </button>\n        )}\n      </div>\n      <div className=\"text-xs opacity-90\">Priority: {data.priority}</div>\n      {data.due_date && (\n        <div className=\"text-xs mt-1 opacity-90\">Due: {new Date(data.due_date).toLocaleDateString()}</div>\n      )}\n    </div>\n  );\n};\n\nconst LiteratureNode = ({ data, selected }) => {\n  const [isVisible, setIsVisible] = useState(data.skipAnimation || false);\n  \n  // Entry animation with the longest delay for final polish - only if not skipping animations\n  useEffect(() => {\n    if (!data.skipAnimation) {\n      const timer = setTimeout(() => setIsVisible(true), 250);\n      return () => clearTimeout(timer);\n    }\n  }, [data.skipAnimation]);\n\n  return (\n    <div\n      className={`group px-4 py-3 rounded-xl shadow-lg border-2 transition-all duration-650 min-w-[200px] bg-purple-50 relative hover:shadow-2xl transform hover:scale-105 ${selected\n          ? 'border-purple-400 shadow-xl scale-105 ring-4 ring-purple-200'\n          : 'border-purple-200 hover:border-purple-300 hover:ring-2 hover:ring-purple-100'\n        } ${isVisible ? 'opacity-100 scale-100 translate-x-0 rotate-0' : 'opacity-0 scale-95 translate-x-4 -rotate-1'}`}\n      style={{\n        transition: 'all 0.65s cubic-bezier(0.175, 0.885, 0.32, 1.275), transform 0.3s ease'\n      }}\n    >\n      {/* Connection Hotspots - Stacked source and target handles for all four sides */}\n      {/* Top handles */}\n      <Handle\n        id=\"top\"\n        type=\"source\"\n        position={Position.Top}\n        className=\"w-3 h-3 !bg-purple-500 transition-all duration-300 hover:scale-150 cursor-pointer opacity-0 group-hover:opacity-100\"\n        style={{\n          left: '50%',\n          transform: 'translateX(-50%)',\n          zIndex: 2\n        }}\n        isConnectable={true}\n      />\n      <Handle\n        id=\"top\"\n        type=\"target\"\n        position={Position.Top}\n        className=\"w-3 h-3 !bg-purple-500 transition-all duration-300 hover:scale-150 cursor-pointer opacity-0 group-hover:opacity-100\"\n        style={{\n          left: '50%',\n          transform: 'translateX(-50%)',\n          zIndex: 1\n        }}\n        isConnectable={true}\n      />\n\n      {/* Right handles */}\n      <Handle\n        id=\"right\"\n        type=\"source\"\n        position={Position.Right}\n        className=\"w-3 h-3 !bg-purple-500 transition-all duration-300 hover:scale-150 cursor-pointer opacity-0 group-hover:opacity-100\"\n        style={{\n          top: '50%',\n          transform: 'translateY(-50%)',\n          zIndex: 2\n        }}\n        isConnectable={true}\n      />\n      <Handle\n        id=\"right\"\n        type=\"target\"\n        position={Position.Right}\n        className=\"w-3 h-3 !bg-purple-500 transition-all duration-300 hover:scale-150 cursor-pointer opacity-0 group-hover:opacity-100\"\n        style={{\n          top: '50%',\n          transform: 'translateY(-50%)',\n          zIndex: 1\n        }}\n        isConnectable={true}\n      />\n\n      {/* Bottom handles */}\n      <Handle\n        id=\"bottom\"\n        type=\"source\"\n        position={Position.Bottom}\n        className=\"w-3 h-3 !bg-purple-500 transition-all duration-300 hover:scale-150 cursor-pointer opacity-0 group-hover:opacity-100\"\n        style={{\n          left: '50%',\n          transform: 'translateX(-50%)',\n          zIndex: 2\n        }}\n        isConnectable={true}\n      />\n      <Handle\n        id=\"bottom\"\n        type=\"target\"\n        position={Position.Bottom}\n        className=\"w-3 h-3 !bg-purple-500 transition-all duration-300 hover:scale-150 cursor-pointer opacity-0 group-hover:opacity-100\"\n        style={{\n          left: '50%',\n          transform: 'translateX(-50%)',\n          zIndex: 1\n        }}\n        isConnectable={true}\n      />\n\n      {/* Left handles */}\n      <Handle\n        id=\"left\"\n        type=\"source\"\n        position={Position.Left}\n        className=\"w-3 h-3 !bg-purple-500 transition-all duration-300 hover:scale-150 cursor-pointer opacity-0 group-hover:opacity-100\"\n        style={{\n          top: '50%',\n          transform: 'translateY(-50%)',\n          zIndex: 2\n        }}\n        isConnectable={true}\n      />\n      <Handle\n        id=\"left\"\n        type=\"target\"\n        position={Position.Left}\n        className=\"w-3 h-3 !bg-purple-500 transition-all duration-300 hover:scale-150 cursor-pointer opacity-0 group-hover:opacity-100\"\n        style={{\n          top: '50%',\n          transform: 'translateY(-50%)',\n          zIndex: 1\n        }}\n        isConnectable={true}\n      />\n\n      <div \n        className=\"flex items-center gap-2 mb-1 cursor-pointer\"\n        onClick={(e) => {\n          // Don't stop propagation immediately - delay the action to allow double-clicks\n          e.preventDefault(); // Prevent any default behavior but allow bubbling\n          \n          // Use a longer timeout to distinguish between single click and double-click\n          const clickTimeout = setTimeout(() => {\n            // Only execute click if this wasn't part of a double-click sequence\n            e.stopPropagation(); // Stop propagation only when actually handling the click\n            if (data.onLiteratureClick) {\n              data.onLiteratureClick(data);\n            }\n          }, 300); // Increased timeout\n          \n          // Store timeout ID on the element to cancel it if double-click occurs\n          e.currentTarget.clickTimeout = clickTimeout;\n        }}\n        onDoubleClick={(e) => {\n          // Cancel the pending click action\n          if (e.currentTarget.clickTimeout) {\n            clearTimeout(e.currentTarget.clickTimeout);\n            e.currentTarget.clickTimeout = null;\n          }\n          \n          // Don't prevent default - allow the double-click to bubble up for modal opening\n          // The parent node will handle the double-click to open the modal\n        }}\n      >\n        <BookOpen size={16} className=\"text-purple-600\" />\n        <div className=\"font-semibold text-sm text-gray-800\">{data.label}</div>\n        {data.onDelete && (\n          <button\n            onClick={(e) => {\n              // Don't stop propagation immediately - delay the action to allow double-clicks\n              e.preventDefault(); // Prevent any default behavior but allow bubbling\n              \n              // Use a longer timeout to distinguish between single click and double-click\n              const deleteTimeout = setTimeout(() => {\n                // Only execute delete if this wasn't part of a double-click sequence\n                e.stopPropagation(); // Stop propagation only when actually deleting\n                data.onDelete();\n              }, 300); // Increased timeout\n              \n              // Store timeout ID on the button to cancel it if double-click occurs\n              e.currentTarget.deleteTimeout = deleteTimeout;\n            }}\n            onDoubleClick={(e) => {\n              // Cancel the pending delete action\n              if (e.currentTarget.deleteTimeout) {\n                clearTimeout(e.currentTarget.deleteTimeout);\n                e.currentTarget.deleteTimeout = null;\n              }\n              \n              // Don't prevent default - allow the double-click to bubble up for modal opening\n              // The parent node will handle the double-click to open the modal\n            }}\n            className=\"ml-auto p-1 hover:bg-purple-200 rounded transition-all duration-200 hover:scale-110 opacity-70 hover:opacity-100\"\n          >\n            <X size={12} />\n          </button>\n        )}\n      </div>\n      <div className=\"text-xs text-gray-600\">{data.authors}</div>\n      <div className=\"text-xs text-purple-600 mt-1\">{data.year}</div>\n    </div>\n  );\n};\n\nconst nodeTypes = {\n  topic: TopicNode,\n  case: CaseNode,\n  task: TaskNode,\n  literature: LiteratureNode,\n};\n\n\n\n// Enhanced Dedicated Editing Form Component\nconst EnhancedEditingForm = ({ type, data, onClose, onSave, onDelete }) => {\n  // Initialize formData with proper field structure based on node type\n  const getInitialFormData = (type, data) => {\n    const baseData = data || {};\n    \n    switch (type) {\n      case 'case':\n        return {\n          case_id: '',\n          age: '',\n          primary_diagnosis: '',\n          gender: '',\n          chiefComplaint: '',\n          initialPresentation: '',\n          currentPresentation: '',\n          medicationHistory: '',\n          therapyProgress: '',\n          defensePatterns: '',\n          clinicalReflection: '',\n          ...baseData // Existing data takes precedence\n        };\n      case 'topic':\n        return {\n          title: '',\n          category: '',\n          color: '#3B82F6',\n          description: '',\n          notes: '',\n          tags: [],\n          ...baseData\n        };\n      case 'task':\n        return {\n          title: '',\n          description: '',\n          status: 'pending',\n          priority: 'medium',\n          due_date: '',\n          ...baseData\n        };\n      case 'literature':\n        return {\n          title: '',\n          authors: '',\n          year: '',\n          doi: '',\n          abstract: '',\n          notes: '',\n          tags: [],\n          ...baseData\n        };\n      default:\n        return baseData;\n    }\n  };\n\n  const [formData, setFormData] = useState(() => getInitialFormData(type, data));\n  const [activeTab, setActiveTab] = useState('basic');\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [errors, setErrors] = useState({});\n\n  // Update formData when data prop changes\n  useEffect(() => {\n    setFormData(getInitialFormData(type, data));\n  }, [type, data]);\n\n  const tabs = {\n    basic: 'Basic Info',\n    details: 'Details',\n    notes: 'Notes & Tags',\n    history: 'History'\n  };\n\n  const validateForm = () => {\n    const newErrors = {};\n\n    switch (type) {\n      case 'topic':\n        if (!formData.title?.trim()) newErrors.title = 'Title is required';\n        if (!formData.category?.trim()) newErrors.category = 'Category is required';\n        break;\n      case 'case':\n        if (!formData.case_id?.trim()) newErrors.case_id = 'Case ID is required';\n        if (!formData.primary_diagnosis?.trim()) newErrors.primary_diagnosis = 'Primary diagnosis is required';\n        break;\n      case 'task':\n        if (!formData.title?.trim()) newErrors.title = 'Title is required';\n        break;\n      case 'literature':\n        if (!formData.title?.trim()) newErrors.title = 'Title is required';\n        if (!formData.authors?.trim()) newErrors.authors = 'Authors are required';\n        break;\n    }\n\n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  };\n\n  const handleSubmit = async () => {\n    if (!validateForm()) return;\n\n    setIsSubmitting(true);\n    try {\n      await onSave(formData);\n    } catch (error) {\n      console.error('Error saving:', error);\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n\n  const updateFormData = (field, value) => {\n    setFormData(prev => ({ ...prev, [field]: value }));\n    if (errors[field]) {\n      setErrors(prev => ({ ...prev, [field]: null }));\n    }\n  };\n\n  const renderBasicTab = () => {\n    switch (type) {\n      case 'topic':\n        return (\n          <div className=\"space-y-4\">\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-1\">Title *</label>\n              <input\n                type=\"text\"\n                value={formData.title || ''}\n                onChange={(e) => updateFormData('title', e.target.value)}\n                className={`w-full p-3 border rounded-lg focus:ring-2 focus:ring-blue-500 ${errors.title ? 'border-red-500' : 'border-gray-300'\n                  }`}\n                placeholder=\"Enter topic title\"\n              />\n              {errors.title && <p className=\"text-red-500 text-xs mt-1\">{errors.title}</p>}\n            </div>\n\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-1\">Category *</label>\n              <select\n                value={formData.category || ''}\n                onChange={(e) => updateFormData('category', e.target.value)}\n                className={`w-full p-3 border rounded-lg focus:ring-2 focus:ring-blue-500 ${errors.category ? 'border-red-500' : 'border-gray-300'\n                  }`}\n              >\n                <option value=\"\">Select category</option>\n                <option value=\"Mood Disorders\">Mood Disorders</option>\n                <option value=\"Anxiety Disorders\">Anxiety Disorders</option>\n                <option value=\"Psychotic Disorders\">Psychotic Disorders</option>\n                <option value=\"Personality Disorders\">Personality Disorders</option>\n                <option value=\"Substance Use Disorders\">Substance Use Disorders</option>\n                <option value=\"Other\">Other</option>\n              </select>\n              {errors.category && <p className=\"text-red-500 text-xs mt-1\">{errors.category}</p>}\n            </div>\n\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-1\">Color Theme</label>\n              <div className=\"flex gap-2\">\n                {['#3B82F6', '#EF4444', '#10B981', '#F59E0B', '#8B5CF6', '#EC4899'].map(color => (\n                  <button\n                    key={color}\n                    onClick={() => updateFormData('color', color)}\n                    className={`w-8 h-8 rounded-full border-2 ${formData.color === color ? 'border-gray-800' : 'border-gray-300'\n                      }`}\n                    style={{ backgroundColor: color }}\n                  />\n                ))}\n              </div>\n            </div>\n          </div>\n        );\n\n      case 'case':\n        return (\n          <div className=\"space-y-4\">\n            <div className=\"grid grid-cols-2 gap-4\">\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-1\">Case ID *</label>\n                <input\n                  type=\"text\"\n                  value={formData.case_id || ''}\n                  onChange={(e) => updateFormData('case_id', e.target.value)}\n                  className={`w-full p-3 border rounded-lg focus:ring-2 focus:ring-blue-500 ${errors.case_id ? 'border-red-500' : 'border-gray-300'\n                    }`}\n                  placeholder=\"CASE-001\"\n                />\n                {errors.case_id && <p className=\"text-red-500 text-xs mt-1\">{errors.case_id}</p>}\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-1\">Age</label>\n                <input\n                  type=\"number\"\n                  value={formData.age || ''}\n                  onChange={(e) => updateFormData('age', e.target.value)}\n                  className=\"w-full p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500\"\n                  min=\"0\"\n                  max=\"120\"\n                />\n              </div>\n            </div>\n\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-1\">Primary Diagnosis *</label>\n              <input\n                type=\"text\"\n                value={formData.primary_diagnosis || ''}\n                onChange={(e) => updateFormData('primary_diagnosis', e.target.value)}\n                className={`w-full p-3 border rounded-lg focus:ring-2 focus:ring-blue-500 ${errors.primary_diagnosis ? 'border-red-500' : 'border-gray-300'\n                  }`}\n                placeholder=\"Enter primary diagnosis\"\n              />\n              {errors.primary_diagnosis && <p className=\"text-red-500 text-xs mt-1\">{errors.primary_diagnosis}</p>}\n            </div>\n\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-1\">Gender</label>\n              <select\n                value={formData.gender || ''}\n                onChange={(e) => updateFormData('gender', e.target.value)}\n                className=\"w-full p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500\"\n              >\n                <option value=\"\">Select gender</option>\n                <option value=\"Male\">Male</option>\n                <option value=\"Female\">Female</option>\n                <option value=\"Non-binary\">Non-binary</option>\n                <option value=\"Other\">Other</option>\n              </select>\n            </div>\n\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-1\">Chief Complaint</label>\n              <textarea\n                value={formData.chiefComplaint || ''}\n                onChange={(e) => updateFormData('chiefComplaint', e.target.value)}\n                className=\"w-full p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500\"\n                rows={2}\n                placeholder=\"Describe the primary concern\"\n              />\n            </div>\n\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-1\">Initial Presentation</label>\n              <textarea\n                value={formData.initialPresentation || ''}\n                onChange={(e) => updateFormData('initialPresentation', e.target.value)}\n                className=\"w-full p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500\"\n                rows={3}\n                placeholder=\"Symptoms and context at first visit\"\n              />\n            </div>\n\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-1\">Current Presentation</label>\n              <textarea\n                value={formData.currentPresentation || ''}\n                onChange={(e) => updateFormData('currentPresentation', e.target.value)}\n                className=\"w-full p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500\"\n                rows={3}\n                placeholder=\"Describe how the case looks now\"\n              />\n            </div>\n\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-1\">Medication History</label>\n              <textarea\n                value={formData.medicationHistory || ''}\n                onChange={(e) => updateFormData('medicationHistory', e.target.value)}\n                className=\"w-full p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500\"\n                rows={2}\n                placeholder=\"e.g. SSRI trials, mood stabilizers, etc.\"\n              />\n            </div>\n\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-1\">Therapy Progress</label>\n              <textarea\n                value={formData.therapyProgress || ''}\n                onChange={(e) => updateFormData('therapyProgress', e.target.value)}\n                className=\"w-full p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500\"\n                rows={2}\n                placeholder=\"How the patient has responded to therapy\"\n              />\n            </div>\n\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-1\">Defense Patterns</label>\n              <textarea\n                value={formData.defensePatterns || ''}\n                onChange={(e) => updateFormData('defensePatterns', e.target.value)}\n                className=\"w-full p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500\"\n                rows={2}\n                placeholder=\"e.g. projection, denial, rationalization\"\n              />\n            </div>\n\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-1\">Clinical Reflection</label>\n              <textarea\n                value={formData.clinicalReflection || ''}\n                onChange={(e) => updateFormData('clinicalReflection', e.target.value)}\n                className=\"w-full p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500\"\n                rows={3}\n                placeholder=\"Your thoughts or questions about the case\"\n              />\n            </div>\n          </div>\n        );\n\n      default:\n        return <div>Basic form for {type}</div>;\n    }\n  };\n\n  return (\n    <div className=\"fixed inset-0 bg-black bg-opacity-60 flex items-center justify-center z-50 backdrop-blur-sm\">\n      <div className=\"bg-white rounded-xl shadow-2xl max-w-4xl w-full mx-4 max-h-[90vh] overflow-hidden\">\n        {/* Header */}\n        <div className=\"bg-gradient-to-r from-blue-600 to-purple-600 text-white p-6\">\n          <div className=\"flex items-center justify-between\">\n            <h2 className=\"text-xl font-semibold capitalize flex items-center gap-2\">\n              <Sparkles size={20} />\n              Enhanced {type} Editor\n            </h2>\n            <button\n              onClick={onClose}\n              className=\"text-white hover:text-gray-200 transition-colors\"\n            >\n              <X size={24} />\n            </button>\n          </div>\n        </div>\n\n        {/* Tabs */}\n        <div className=\"border-b border-gray-200\">\n          <div className=\"flex\">\n            {Object.entries(tabs).map(([key, label]) => (\n              <button\n                key={key}\n                onClick={() => setActiveTab(key)}\n                className={`px-6 py-3 text-sm font-medium transition-colors ${activeTab === key\n                    ? 'border-b-2 border-blue-500 text-blue-600 bg-blue-50'\n                    : 'text-gray-500 hover:text-gray-700'\n                  }`}\n              >\n                {label}\n              </button>\n            ))}\n          </div>\n        </div>\n\n        {/* Content */}\n        <div className=\"p-6 overflow-y-auto max-h-[calc(90vh-200px)]\">\n          {activeTab === 'basic' && renderBasicTab()}\n          {activeTab === 'details' && <div>Details content for {type}</div>}\n          {activeTab === 'notes' && <div>Notes and tags content</div>}\n          {activeTab === 'history' && <div>History content</div>}\n        </div>\n\n        {/* Footer */}\n        <div className=\"bg-gray-50 px-6 py-4 flex items-center justify-between border-t\">\n          <div className=\"flex gap-2\">\n            {onDelete && (\n              <LoadingButton\n                onClick={onDelete}\n                icon={Trash2}\n                className=\"bg-red-600 hover:bg-red-700 text-white px-4 py-2 rounded-lg\"\n              >\n                Delete\n              </LoadingButton>\n            )}\n          </div>\n\n          <div className=\"flex gap-2\">\n            <button\n              onClick={onClose}\n              className=\"px-4 py-2 text-gray-600 hover:text-gray-800 border border-gray-300 rounded-lg hover:bg-gray-100 transition-colors\"\n            >\n              Cancel\n            </button>\n            <LoadingButton\n              onClick={handleSubmit}\n              loading={isSubmitting}\n              icon={isSubmitting ? Loader2 : Save}\n              className=\"bg-blue-600 hover:bg-blue-700 text-white px-4 py-2 rounded-lg\"\n            >\n              {isSubmitting ? 'Saving...' : 'Save Changes'}\n            </LoadingButton>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\nconst NodeSelector = ({ isOpen, onClose, onSelect, templates }) => {\n  const [selectedNodeType, setSelectedNodeType] = useState(null);\n\n  // When the modal is closed, reset the internal state\n  useEffect(() => {\n    if (!isOpen) {\n      // Add a small delay to allow the closing animation to finish before state reset\n      const timer = setTimeout(() => setSelectedNodeType(null), 300);\n      return () => clearTimeout(timer);\n    }\n  }, [isOpen]);\n\n  if (!isOpen) return null;\n\n  const nodeTypes = [\n    { type: 'topic', label: 'Psychiatric Topic', icon: Brain, color: 'bg-blue-600', description: 'Add a new psychiatric topic or disorder' },\n    { type: 'literature', label: 'Literature', icon: BookOpen, color: 'bg-purple-600', description: 'Add research papers, articles, or references' },\n    { type: 'case', label: 'Patient Case', icon: Users, color: 'bg-indigo-600', description: 'Add a new patient case study' },\n    { type: 'task', label: 'Task', icon: CheckSquare, color: 'bg-amber-600', description: 'Add a task or to-do item' }\n  ];\n\n  const handleNodeTypeSelect = (nodeType) => {\n    setSelectedNodeType(nodeType);\n  };\n\n  const handleFinalSelect = (templateId = null) => {\n    onSelect(selectedNodeType, templateId);\n    onClose();\n  };\n\n  const filteredTemplates = selectedNodeType ? (templates || []).filter(t => t.nodeType === selectedNodeType) : [];\n\n  return (\n    <div className=\"fixed inset-0 bg-black bg-opacity-60 flex items-center justify-center z-50 backdrop-blur-sm animate-in fade-in-25 duration-300\">\n      <div className=\"bg-white rounded-xl shadow-2xl p-6 max-w-md w-full mx-4 transform transition-all duration-300 ease-out\">\n        {/* Header */}\n        <div className=\"flex items-center justify-between mb-6\">\n          <div className=\"flex items-center gap-3\">\n            {selectedNodeType && (\n              <button\n                onClick={() => setSelectedNodeType(null)}\n                className=\"text-gray-400 hover:text-gray-600 p-1 rounded-full hover:bg-gray-100 transition-colors\"\n              >\n                <ArrowLeft size={20} />\n              </button>\n            )}\n            <h3 className=\"text-xl font-semibold text-gray-800\">\n              {selectedNodeType ? `Select a ${selectedNodeType} template` : 'Add New Node'}\n            </h3>\n          </div>\n          <button\n            onClick={onClose}\n            className=\"text-gray-400 hover:text-gray-600 p-1\"\n          >\n            <X size={20} />\n          </button>\n        </div>\n\n        <div className=\"relative overflow-hidden\" style={{ minHeight: '200px' }}>\n          {/* View 1: Node Type Selection */}\n          <div className={`transition-transform duration-300 ease-in-out ${selectedNodeType ? '-translate-x-full opacity-0' : 'translate-x-0 opacity-100'}`}>\n            <div className=\"space-y-3\">\n              {nodeTypes.map(({ type, label, icon: Icon, color, description }) => (\n                <button\n                  key={type}\n                  onClick={() => handleNodeTypeSelect(type)}\n                  className=\"w-full flex items-center gap-4 p-4 rounded-lg border-2 border-gray-200 hover:border-blue-400 hover:bg-blue-50 transition-all text-left\"\n                >\n                  <div className={`${color} p-2 rounded-lg text-white`}>\n                    <Icon size={20} />\n                  </div>\n                  <div>\n                    <div className=\"font-medium text-gray-800\">{label}</div>\n                    <div className=\"text-sm text-gray-500\">{description}</div>\n                  </div>\n                </button>\n              ))}\n            </div>\n          </div>\n\n          {/* View 2: Template Selection */}\n          <div className={`absolute top-0 left-0 w-full transition-transform duration-300 ease-in-out ${selectedNodeType ? 'translate-x-0 opacity-100' : 'translate-x-full opacity-0'}`}>\n            {selectedNodeType && (\n              <div className=\"space-y-3\">\n                {/* Create Blank Option */}\n                <button\n                  onClick={() => handleFinalSelect(null)}\n                  className=\"w-full flex items-center gap-4 p-4 rounded-lg border-2 border-dashed border-gray-300 hover:border-blue-400 hover:bg-blue-50 transition-all text-left\"\n                >\n                  <div className=\"bg-gray-200 p-2 rounded-lg text-gray-600\">\n                    <Plus size={20} />\n                  </div>\n                  <div>\n                    <div className=\"font-medium text-gray-800\">Create Blank {selectedNodeType}</div>\n                    <div className=\"text-sm text-gray-500\">Start with an empty node.</div>\n                  </div>\n                </button>\n\n                {/* Filtered Templates */}\n                {filteredTemplates.map((template) => (\n                  <button\n                    key={template.id}\n                    onClick={() => handleFinalSelect(template.id)}\n                    className=\"w-full flex items-center gap-4 p-4 rounded-lg border-2 border-gray-200 hover:border-blue-400 hover:bg-blue-50 transition-all text-left\"\n                  >\n                    <div className=\"bg-indigo-100 p-2 rounded-lg text-indigo-600\">\n                      <FileText size={20} />\n                    </div>\n                    <div>\n                      <div className=\"font-medium text-gray-800\">{template.name}</div>\n                      <div className=\"text-sm text-gray-500 truncate\">{template.data?.description || template.data?.abstract || template.data?.assessment_plan || 'No description'}</div>\n\n                    </div>\n                  </button>\n                ))}\n\n                {filteredTemplates.length === 0 && (\n                  <div className=\"text-center text-sm text-gray-500 py-4\">\n                    No templates found for this node type.\n                  </div>\n                )}\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\n// Edge Label Modal Component\nconst EdgeLabelModal = ({ edge, isOpen, onClose, onSave }) => {\n  const [label, setLabel] = useState(edge?.label || '');\n\n  // Update label when edge changes\n  useEffect(() => {\n    setLabel(edge?.label || '');\n  }, [edge]);\n\n  const handleSave = () => {\n    onSave(edge.id, label);\n    onClose();\n  };\n\n  const handleKeyPress = (e) => {\n    if (e.key === 'Enter') {\n      handleSave();\n    } else if (e.key === 'Escape') {\n      onClose();\n    }\n  };\n\n  if (!isOpen || !edge) return null;\n\n  return (\n    <div className=\"fixed inset-0 bg-black bg-opacity-60 flex items-center justify-center z-50 backdrop-blur-sm\">\n      <div className=\"bg-white rounded-xl shadow-2xl p-6 max-w-md w-full mx-4 transform transition-all\">\n        <div className=\"flex items-center justify-between mb-6\">\n          <h3 className=\"text-xl font-semibold text-gray-800\">Edit Connection Label</h3>\n          <button\n            onClick={onClose}\n            className=\"text-gray-400 hover:text-gray-600 p-1 transition-colors\"\n          >\n            <X size={20} />\n          </button>\n        </div>\n\n        <div className=\"mb-6\">\n          <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n            Connection Label\n          </label>\n          <input\n            type=\"text\"\n            value={label}\n            onChange={(e) => setLabel(e.target.value)}\n            onKeyPress={handleKeyPress}\n            placeholder=\"Enter a label for this connection...\"\n            className=\"w-full p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all\"\n            autoFocus\n          />\n          <p className=\"text-xs text-gray-500 mt-1\">\n            Press Enter to save, Escape to cancel\n          </p>\n        </div>\n\n        <div className=\"flex items-center justify-end gap-3\">\n          <button\n            onClick={onClose}\n            className=\"px-4 py-2 text-gray-600 hover:text-gray-800 border border-gray-300 rounded-lg hover:bg-gray-100 transition-colors\"\n          >\n            Cancel\n          </button>\n          <button\n            onClick={handleSave}\n            className=\"px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors flex items-center gap-2\"\n          >\n            <Save size={16} />\n            Save Label\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\n// Enhanced Main Dashboard Component with improved visual effects\nconst DashboardComponent = () => {\n  const { fitView, setCenter, zoomTo, getViewport } = useReactFlow();\n\n  const [nodes, setNodes, onNodesChange] = useNodesState([]);\n  const [edges, setEdges, onEdgesChange] = useEdgesState([]);\n\n  // State for forcing node updates\n  const [nodeUpdateTrigger, setNodeUpdateTrigger] = useState(0);\n\n  const [mindMapData, setMindMapData] = useState({\n    topics: [],\n    cases: [],\n    tasks: [],\n    literature: [],\n    connections: []\n  });\n\n  const [isEditing, setIsEditing] = useState(false);\n  const [selectedNode, setSelectedNode] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [loadingProgress, setLoadingProgress] = useState(0);\n  const [loadingMessage, setLoadingMessage] = useState('Initializing...');\n  const [isInitialLoad, setIsInitialLoad] = useState(true);\n  const [focusedCategory, setFocusedCategory] = useState(null);\n  const [showNodeSelector, setShowNodeSelector] = useState(false);\n  // Specialized modal state for each node type with stable data references\n  const [caseModal, setCaseModal] = useState({ isOpen: false, data: null });\n  const [topicModal, setTopicModal] = useState({ isOpen: false, data: null });\n  const [taskModal, setTaskModal] = useState({ isOpen: false, data: null });\n  const caseModalStableData = useRef(null);\n  const topicModalStableData = useRef(null);\n  const taskModalStableData = useRef(null);\n  const [isReactFlowReady, setIsReactFlowReady] = useState(false);\n  const [hasAppliedInitialLayout, setHasAppliedInitialLayout] = useState(false);\n  const [isExportingCSV, setIsExportingCSV] = useState(false);\n  const [lastSaved, setLastSaved] = useState(null);\n  const [isSaving, setIsSaving] = useState(false);\n  const [edgeModal, setEdgeModal] = useState({ isOpen: false, edge: null });\n  const [templates, setTemplates] = useState([]);\n  const [exportProgress, setExportProgress] = useState({ show: false, progress: 0, message: '' });\n\n  const [toasts, setToasts] = useState([]);\n  const [isTemplateManagerOpen, setIsTemplateManagerOpen] = useState(false);\n  const [literatureModal, setLiteratureModal] = useState({ isOpen: false, data: null });\n  const [isAnimating, setIsAnimating] = useState(false); // Track animation state\n  const [modalAnimationStates, setModalAnimationStates] = useState({\n    case: false,\n    topic: false,\n    task: false,\n    literature: false\n  });\n  const addToast = useCallback((message, type = 'success', duration = 3000) => {\n    const id = Date.now();\n    const newToast = { id, message, type, duration };\n    setToasts(prev => [...prev, newToast]);\n  }, []);\n\n  const removeToast = useCallback((id) => {\n    setToasts(prev => prev.filter(toast => toast.id !== id));\n  }, []);\n\n  const autoSaveMindMapData = useCallback((data) => {\n    // Enhanced animation and modal state checking\n    const anyModalOpen = caseModal.isOpen || topicModal.isOpen || taskModal.isOpen || literatureModal.isOpen;\n    const anyModalAnimating = Object.values(modalAnimationStates).some(state => state);\n    const anyModalTransitioning = (caseModal.isOpen && caseModal.data?.isTabTransitioning) || \n                                  (topicModal.isOpen && topicModal.data?.isTabTransitioning) ||\n                                  (taskModal.isOpen && taskModal.data?.isTabTransitioning);\n    \n    if (isAnimating || anyModalOpen || anyModalTransitioning || anyModalAnimating) {\n      console.log('Deferring auto-save during animation, modal interaction, or tab transition');\n      // Use a longer delay and exponential backoff for persistent animation states\n      const delay = anyModalTransitioning || anyModalAnimating ? 2000 : 1000;\n      setTimeout(() => autoSaveMindMapData(data), delay);\n      return;\n    }\n\n    const onSaveStart = () => setIsSaving(true);\n    const onSaveComplete = (success, error) => {\n      setIsSaving(false);\n      if (success) {\n        setLastSaved(new Date());\n        // Reduce toast frequency during auto-save to prevent UI distractions\n        // addToast('Data auto-saved', 'saving', 1000);\n      } else {\n        addToast('Auto-save failed', 'error', 4000);\n        console.error('Auto-save error:', error);\n      }\n    };\n\n    localStorageUtils.save(data, onSaveStart, onSaveComplete, isAnimating);\n    // Use requestIdleCallback for backend saves to avoid blocking animations\n    if (window.requestIdleCallback) {\n      window.requestIdleCallback(() => {\n        // Double-check animation state before backend save\n        const stillAnimating = isAnimating || Object.values(modalAnimationStates).some(state => state);\n        if (!stillAnimating) {\n          saveToBackend(data);\n        }\n      }, { timeout: 5000 });\n    } else {\n      setTimeout(() => {\n        const stillAnimating = isAnimating || Object.values(modalAnimationStates).some(state => state);\n        if (!stillAnimating) {\n          saveToBackend(data);\n        }\n      }, 100); // Longer delay fallback\n    }\n  }, [addToast, isAnimating, modalAnimationStates, caseModal.isOpen, topicModal.isOpen, taskModal.isOpen, literatureModal.isOpen]);\n\n  // Separate function for position-only updates (more frequent, less critical)\n  const autoSavePositionData = useCallback((data) => {\n    // Enhanced checks for animation states\n    const anyModalOpen = caseModal.isOpen || topicModal.isOpen || taskModal.isOpen || literatureModal.isOpen;\n    const anyModalAnimating = Object.values(modalAnimationStates).some(state => state);\n    if (isAnimating || anyModalOpen || anyModalAnimating) return;\n    \n    // Save to localStorage immediately\n    localStorageUtils.save(data, null, null, isAnimating);\n    \n    // Also save to backend with a small delay to batch updates\n    clearTimeout(window.positionBackendSaveTimeout);\n    window.positionBackendSaveTimeout = setTimeout(() => {\n      // Call saveToBackend indirectly to avoid initialization issues\n      autoSaveMindMapData(data);\n    }, 800); // 800ms delay to batch multiple position changes\n  }, [isAnimating, modalAnimationStates, caseModal.isOpen, topicModal.isOpen, taskModal.isOpen, literatureModal.isOpen, autoSaveMindMapData]);\n\n  // Stable data effects to prevent modal re-renders during auto-save\n  useEffect(() => {\n    if (caseModal.isOpen && caseModal.data) {\n      // Store stable reference when modal opens\n      caseModalStableData.current = { ...caseModal.data };\n    } else if (!caseModal.isOpen) {\n      // Clear reference when modal closes\n      caseModalStableData.current = null;\n    }\n  }, [caseModal.isOpen, caseModal.data?.id]);\n\n  useEffect(() => {\n    if (topicModal.isOpen && topicModal.data) {\n      topicModalStableData.current = { ...topicModal.data };\n    } else if (!topicModal.isOpen) {\n      topicModalStableData.current = null;\n    }\n  }, [topicModal.isOpen, topicModal.data?.id]);\n\n  useEffect(() => {\n    if (taskModal.isOpen && taskModal.data) {\n      taskModalStableData.current = { ...taskModal.data };\n    } else if (!taskModal.isOpen) {\n      taskModalStableData.current = null;\n    }\n  }, [taskModal.isOpen, taskModal.data?.id]);\n\nconst handleDeleteNode = useCallback((fullNodeId) => {\n  // fullNodeId is always in the format `${nodeType}-${id}`\n  console.log(`Deleting node with full ID:`, fullNodeId);\n\n  // Extract nodeType and id from fullNodeId\n  const [nodeType, ...idParts] = fullNodeId.split('-');\n  const nodeId = idParts.join('-');\n  const collectionKey = nodeType === 'literature' ? 'literature' : `${nodeType}s`;\n\n  setMindMapData(prevData => {\n    // Remove the node from its collection\n    const updatedCollection = (prevData[collectionKey] || []).filter(item => String(item.id) !== nodeId);\n    // Remove any connections that are attached to the deleted node\n    const updatedConnections = (prevData.connections || []).filter(\n      conn => conn.source !== fullNodeId && conn.target !== fullNodeId\n    );\n    const newData = {\n      ...prevData,\n      [collectionKey]: updatedCollection,\n      connections: updatedConnections,\n    };\n    autoSaveMindMapData(newData);\n    addToast(`${nodeType.charAt(0).toUpperCase() + nodeType.slice(1)} deleted.`, 'success');\n    return newData;\n  });\n  // Remove the node from the visual state\n  setNodes((nds) => nds.filter((node) => node.id !== fullNodeId));\n  // Remove edges referencing this node\n  setEdges((eds) => eds.filter((edge) => edge.source !== fullNodeId && edge.target !== fullNodeId));\n}, [setMindMapData, autoSaveMindMapData, addToast, setNodes, setEdges]);\n\n// Handle literature node click to open modal\nconst handleLiteratureClick = useCallback((literatureData) => {\n  setIsAnimating(true); // Set animation state\n  setLiteratureModal({ isOpen: true, data: literatureData });\n  // Clear animation state after modal animation completes\n  setTimeout(() => setIsAnimating(false), 700); // 600ms modal animation + 100ms buffer\n}, []);\n\n// Enhanced node sync function that forces React Flow re-renders\nconst syncNodeData = useCallback(() => {\n  console.log('syncNodeData called - syncing node colors and labels');\n  \n  setNodes(currentNodes => {\n    let hasChanges = false;\n    const updatedNodes = currentNodes.map(node => {\n      const nodeType = node.id.split('-')[0];\n      const nodeId = node.id.split('-')[1];\n      \n      let newLabel = node.data.label;\n      let newColor = node.data.color;\n      let needsUpdate = false;\n      \n      // Find the corresponding data item and sync properties\n      if (nodeType === 'case') {\n        const caseData = mindMapData.cases?.find(c => String(c.id) === nodeId);\n        if (caseData) {\n          const expectedLabel = caseData.primaryDiagnosis || caseData.primary_diagnosis || caseData.title || 'Untitled Case';\n          if (expectedLabel !== node.data.label) {\n            newLabel = expectedLabel;\n            needsUpdate = true;\n          }\n        }\n      } else if (nodeType === 'topic') {\n        const topicData = mindMapData.topics?.find(t => String(t.id) === nodeId);\n        if (topicData) {\n          const expectedLabel = topicData.title || 'Untitled Topic';\n          const expectedColor = topicData.color || '#3B82F6';\n          \n          if (expectedLabel !== node.data.label) {\n            newLabel = expectedLabel;\n            needsUpdate = true;\n          }\n          \n          if (expectedColor !== node.data.color) {\n            newColor = expectedColor;\n            needsUpdate = true;\n            console.log(`Topic ${nodeId}: Color changing from ${node.data.color} to ${expectedColor}`);\n          }\n        }\n      } else if (nodeType === 'task') {\n        const taskData = mindMapData.tasks?.find(t => String(t.id) === nodeId);\n        if (taskData) {\n          const expectedLabel = taskData.title || 'Untitled Task';\n          if (expectedLabel !== node.data.label) {\n            newLabel = expectedLabel;\n            needsUpdate = true;\n          }\n        }\n      } else if (nodeType === 'literature') {\n        const literatureData = mindMapData.literature?.find(l => String(l.id) === nodeId);\n        if (literatureData) {\n          const expectedLabel = literatureData.title || 'Untitled Literature';\n          if (expectedLabel !== node.data.label) {\n            newLabel = expectedLabel;\n            needsUpdate = true;\n          }\n        }\n      }\n      \n      // Create entirely new node object if something changed (forces React Flow re-render)\n      if (needsUpdate) {\n        hasChanges = true;\n        // Force React to treat this as a completely new object\n        const timestamp = Date.now();\n        const newNode = {\n          id: node.id,\n          type: node.type,\n          position: { ...node.position },\n          data: {\n            ...node.data,\n            label: newLabel,\n            color: newColor,\n            // Add timestamp to force re-render\n            lastUpdated: timestamp\n          },\n          // Force new style object for topic nodes\n          style: nodeType === 'topic' ? {\n            backgroundColor: newColor,\n            color: 'white',\n            boxShadow: `0 4px 20px ${newColor}20`,\n            transition: 'all 0.7s cubic-bezier(0.34, 1.56, 0.64, 1), transform 0.3s ease',\n            // Force React to detect change\n            zIndex: timestamp % 1000\n          } : node.style,\n          // Add a rendering key to force React Flow update\n          key: `${node.id}-${timestamp}`\n        };\n        \n        return newNode;\n      }\n      \n      return node;\n    });\n    \n    if (hasChanges) {\n      console.log('syncNodeData: Changes detected, updating nodes with forced re-render');\n      // Return completely new array to force React Flow update\n      return [...updatedNodes];\n    } else {\n      console.log('syncNodeData: No changes needed');\n      return currentNodes;\n    }\n  });\n}, [mindMapData, setNodes]);\n\n// Trigger auto-sync when mindMapData changes with enhanced detection\nuseEffect(() => {\n  const hasData = mindMapData && (mindMapData.cases?.length > 0 || mindMapData.topics?.length > 0 || \n                                 mindMapData.tasks?.length > 0 || mindMapData.literature?.length > 0);\n  \n  if (hasData) {\n    // Add small delay to ensure state has settled\n    const timeoutId = setTimeout(() => {\n      console.log('useEffect triggered syncNodeData due to mindMapData change');\n      syncNodeData();\n    }, 50);\n    \n    // If we don't have nodes but we have data, convert data to React Flow\n    if (nodes.length === 0) {\n      console.log('Converting data to React Flow nodes due to data change');\n      // Use a timeout to avoid dependency issues and ensure state is stable\n      setTimeout(() => {\n        convertDataToReactFlow(mindMapData, false); // CHANGED: Don't apply force layout automatically\n      }, 100);\n    }\n    \n    return () => clearTimeout(timeoutId);\n  }\n}, [mindMapData, syncNodeData, nodes.length]); // Updated to use syncNodeData\n\n// Force node update when trigger changes\nuseEffect(() => {\n  if (nodeUpdateTrigger > 0) {\n    console.log('Force update triggered by nodeUpdateTrigger:', nodeUpdateTrigger);\n    setTimeout(() => {\n      syncNodeData();\n    }, 100);\n  }\n}, [nodeUpdateTrigger, syncNodeData]);\n\n  const convertDataToReactFlow = useCallback(async (data, applyLayoutImmediately = false) => {\n    // Use optimized quick layout for initial load\n    const allItems = [\n      ...data.topics.map(item => ({ ...item, type: 'topic' })),\n      ...data.cases.map(item => ({ ...item, type: 'case' })),\n      ...data.tasks.map(item => ({ ...item, type: 'task' })),\n      ...data.literature.map(item => ({ ...item, type: 'literature' }))\n    ];\n\n    // If we have data and need immediate layout, apply force layout to positions\n    let layoutNodes;\n    \n    // Check if nodes already have positions - if they do, don't override with force layout\n    const hasExistingPositions = allItems.some(item => \n      item.position && typeof item.position.x === 'number' && typeof item.position.y === 'number'\n    );\n    \n    if (allItems.length > 0 && applyLayoutImmediately && !hasExistingPositions) {\n      try {\n        // Lazy load D3 force simulation for initial positioning\n        const { \n          forceSimulation, \n          forceManyBody, \n          forceLink, \n          forceCenter, \n          forceCollide \n        } = await loadD3Force();\n\n        // Create nodes for simulation\n        const simulationNodes = allItems.map((item, index) => ({\n          id: `${item.type}-${item.id}`,\n          x: item.position?.x || (Math.random() - 0.5) * 200,\n          y: item.position?.y || (Math.random() - 0.5) * 200,\n          type: item.type\n        }));\n\n        // Create D3-compatible edge objects\n        const d3Edges = (data.connections || []).map(edge => ({\n          source: edge.source,\n          target: edge.target,\n          id: edge.id\n        })).filter(edge => {\n          const nodeIds = new Set(simulationNodes.map(n => n.id));\n          return nodeIds.has(edge.source) && nodeIds.has(edge.target);\n        });\n\n        // Run simulation synchronously for initial layout\n        const simulation = forceSimulation(simulationNodes)\n          .force('link', forceLink(d3Edges).id(d => d.id).distance(200).strength(0.5))\n          .force('charge', forceManyBody().strength(-800).distanceMax(400))\n          .force('center', forceCenter(window.innerWidth / 3, window.innerHeight / 2))\n          .force('collision', forceCollide().radius(80))\n          .stop();\n\n        // Run enough ticks to get a good layout\n        for (let i = 0; i < 300; i++) {\n          simulation.tick();\n        }\n\n        // Create a map of positioned nodes\n        const positionMap = new Map();\n        simulationNodes.forEach(node => {\n          positionMap.set(node.id, { x: node.x, y: node.y });\n        });\n\n        layoutNodes = allItems.map(item => {\n          const nodeId = `${item.type}-${item.id}`;\n          const position = positionMap.get(nodeId) || { x: 0, y: 0 };\n          return { ...item, position };\n        });\n      } catch (error) {\n        console.warn('Failed to apply initial layout, using fallback positioning:', error);\n        layoutNodes = allItems;\n      }\n    } else {\n      layoutNodes = allItems;\n    }\n\n    // Quick layout without expensive calculations - ensure all nodes get proper positions\n    const quickNodes = (layoutNodes || allItems).map((item, index) => {\n      const nodeId = `${item.type}-${item.id}`;\n      \n      // Convert case fields efficiently\n      const nodeData = item.type === 'case' ? {\n        ...item,\n        chiefComplaint: item.chiefComplaint || item.chief_complaint || '',\n        initialPresentation: item.initialPresentation || item.initial_presentation || '',\n        currentPresentation: item.currentPresentation || item.current_presentation || '',\n        medicationHistory: item.medicationHistory || item.medication_history || '',\n        therapyProgress: item.therapyProgress || item.therapy_progress || '',\n        defensePatterns: item.defensePatterns || item.defense_patterns || '',\n        clinicalReflection: item.clinicalReflection || item.clinical_reflection || ''\n      } : item;\n\n      // Ensure proper positioning: use existing position, or create grid-based position\n      let position;\n      if (item.position && typeof item.position.x === 'number' && typeof item.position.y === 'number') {\n        position = item.position;\n      } else {\n        // Create grid-based layout for nodes without positions\n        const gridSize = Math.ceil(Math.sqrt(allItems.length));\n        const nodeSpacing = 250;\n        const offsetX = 300; // Offset from left sidebar\n        const offsetY = 150; // Offset from top\n        \n        position = {\n          x: (index % gridSize) * nodeSpacing + offsetX,\n          y: Math.floor(index / gridSize) * nodeSpacing + offsetY\n        };\n      }\n\n      return {\n        id: nodeId,\n        type: item.type,\n        position: position,\n        data: { \n          ...nodeData, \n          label: item.title || item.label || `Untitled ${item.type}`, // Ensure label matches title\n          color: item.color || '#3B82F6', // Include color in data\n          onDelete: () => handleDeleteNode(nodeId),\n          onLiteratureClick: item.type === 'literature' ? handleLiteratureClick : undefined,\n          skipAnimation: isInitialLoad // Use the isInitialLoad state\n        },\n        style: item.type === 'topic' ? {\n          backgroundColor: item.color || '#3B82F6' // Set style for topic nodes\n        } : undefined\n      };\n    });\n\n    // Create optimized edges\n    const optimizedEdges = createOptimizedEdges(\n      data.connections || [], \n      quickNodes.map(n => n.id)\n    );\n\n    // Set nodes and edges immediately for fast UI response\n    setNodes(quickNodes);\n    setEdges(optimizedEdges);\n  }, [setNodes, setEdges, handleDeleteNode, handleLiteratureClick, isInitialLoad]);\n\n  const saveToBackend = useCallback(async (data) => {\n    // Deep clone the data to avoid modifying the original\n    const cleanData = {\n      topics: JSON.parse(JSON.stringify(data.topics || [])),\n      cases: JSON.parse(JSON.stringify(data.cases || [])),\n      tasks: JSON.parse(JSON.stringify(data.tasks || [])),\n      literature: JSON.parse(JSON.stringify(data.literature || [])),\n      connections: JSON.parse(JSON.stringify(data.connections || []))\n    };\n    \n    try {\n      \n      // Current timestamp for created_at/updated_at fields\n      const now = new Date().toISOString();\n      \n      // Clean and validate topics\n      cleanData.topics = cleanData.topics.map((topic, index) => {\n        // Ensure all required fields exist\n        return {\n          id: String(topic.id || `${Date.now()}-${index}-topic`),\n          title: topic.title || \"Untitled Topic\",\n          description: topic.description || \"\",\n          category: topic.category || \"Uncategorized\",\n          color: topic.color || \"#3B82F6\",\n          position: {\n            x: Number(topic.position?.x) || 0,\n            y: Number(topic.position?.y) || 0\n          },\n          flashcard_count: Number(topic.flashcard_count) || 0,\n          completed_flashcards: Number(topic.completed_flashcards) || 0,\n          resources: Array.isArray(topic.resources) ? topic.resources : [],\n          created_at: topic.created_at || now,\n          updated_at: now\n        };\n      });\n      \n      // Clean and validate cases\n      cleanData.cases = cleanData.cases.map((caseItem, index) => {\n        // Ensure all required fields exist, handle both camelCase and snake_case\n        return {\n          id: String(caseItem.id || `${Date.now()}-${index}-case`),\n          case_id: caseItem.case_id || `CASE-${Date.now()}-${index}`,\n          encounter_date: caseItem.encounter_date || now,\n          primary_diagnosis: caseItem.primary_diagnosis || \"Unspecified\",\n          secondary_diagnoses: Array.isArray(caseItem.secondary_diagnoses) ? caseItem.secondary_diagnoses : [],\n          age: caseItem.age !== undefined ? Number(caseItem.age) : null,\n          gender: caseItem.gender || null,\n          // Handle both camelCase (frontend) and snake_case (backend) field names\n          chief_complaint: caseItem.chiefComplaint || caseItem.chief_complaint || \"\",\n          initial_presentation: caseItem.initialPresentation || caseItem.initial_presentation || \"\",\n          current_presentation: caseItem.currentPresentation || caseItem.current_presentation || \"\",\n          medication_history: caseItem.medicationHistory || caseItem.medication_history || \"\",\n          therapy_progress: caseItem.therapyProgress || caseItem.therapy_progress || \"\",\n          defense_patterns: caseItem.defensePatterns || caseItem.defense_patterns || \"\",\n          clinical_reflection: caseItem.clinicalReflection || caseItem.clinical_reflection || \"\",\n          history_present_illness: caseItem.history_present_illness || null,\n          medical_history: caseItem.medical_history || null,\n          medications: Array.isArray(caseItem.medications) ? caseItem.medications : [],\n          mental_status_exam: caseItem.mental_status_exam || null,\n          assessment_plan: caseItem.assessment_plan || null,\n          notes: caseItem.notes || null,\n          status: caseItem.status || \"active\",\n          linked_topics: Array.isArray(caseItem.linked_topics) ? caseItem.linked_topics : [],\n          position: {\n            x: Number(caseItem.position?.x) || 0,\n            y: Number(caseItem.position?.y) || 0\n          },\n          created_at: caseItem.created_at || now,\n          updated_at: now\n        };\n      });\n      \n      // Clean and validate tasks\n      cleanData.tasks = cleanData.tasks.map((task, index) => {\n        // Ensure all required fields exist\n        return {\n          id: String(task.id || `${Date.now()}-${index}-task`),\n          title: task.title || \"Untitled Task\",\n          description: task.description || null,\n          status: task.status || \"pending\",\n          priority: task.priority || \"medium\",\n          due_date: task.due_date || null,\n          linked_case_id: task.linked_case_id || null,\n          linked_topic_id: task.linked_topic_id || null,\n          position: {\n            x: Number(task.position?.x) || 0,\n            y: Number(task.position?.y) || 0\n          },\n          created_at: task.created_at || now,\n          updated_at: now\n        };\n      });\n      \n      // Clean and validate literature\n      cleanData.literature = cleanData.literature.map((lit, index) => {\n        // Ensure all required fields exist\n        return {\n          id: String(lit.id || `${Date.now()}-${index}-lit`),\n          title: lit.title || \"Untitled Literature\",\n          authors: lit.authors || null,\n          publication: lit.publication || null,\n          year: lit.year !== undefined ? Number(lit.year) : null,\n          doi: lit.doi || null,\n          abstract: lit.abstract || null,\n          notes: lit.notes || null,\n          pdf_path: lit.pdf_path || null,\n          linked_topics: Array.isArray(lit.linked_topics) ? lit.linked_topics : [],\n          position: {\n            x: Number(lit.position?.x) || 0,\n            y: Number(lit.position?.y) || 0\n          },\n          created_at: lit.created_at || now,\n          updated_at: now\n        };\n      });\n      \n      // Clean and validate connections\n      cleanData.connections = cleanData.connections.map((conn, index) => {\n        // For connections, we only need these basic properties\n        return {\n          id: String(conn.id || `${Date.now()}-${index}-conn`),\n          source: conn.source || \"\",\n          target: conn.target || \"\",\n          label: conn.label || \"\"\n        };\n      });\n      \n      // Filter out any items with empty or invalid source/target\n      cleanData.connections = cleanData.connections.filter(conn => \n        conn.source && conn.target && \n        typeof conn.source === 'string' && \n        typeof conn.target === 'string' && \n        conn.source.length > 0 && \n        conn.target.length > 0\n      );\n      \n      console.log('Sending cleaned data to backend:', cleanData);\n      \n      const response = await axios.put(`${API}/mindmap-data`, cleanData, {\n        headers: { 'Content-Type': 'application/json' }\n      });\n      \n      console.log('Backend save successful:', response.data);\n    } catch (err) {\n      console.error('Failed to save to backend:', err.response?.data || err.message);\n      \n      // Log detailed validation errors\n      if (err.response?.status === 422 && err.response?.data?.detail) {\n        console.error('Validation errors:');\n        console.error(JSON.stringify(err.response.data.detail, null, 2));\n        \n        // Log the request data that caused the error\n        console.error('Request data that caused validation error:');\n        console.error(JSON.stringify(cleanData, null, 2));\n      }\n      \n      // Don't throw the error to prevent breaking the app\n    }\n  }, []);\n\n  const onConnect = useCallback((params) => {\n    const edgeId = `conn-${Date.now()}`;\n    const newEdge = { \n      ...params, \n      id: edgeId,\n      type: 'floating', // Use our high-performance floating edge type\n      style: { \n        strokeWidth: 2, \n        stroke: '#64748b',\n        opacity: 0.85,\n        transition: 'none' // Critical: disable transitions for immediate updates\n      },\n      // Add a unique timestamp to force React to re-render this edge when source or target nodes move\n      data: { __forceUpdate: Date.now() },\n      interactionWidth: 20 // Wider area for interaction\n    };\n    setEdges((eds) => addEdge(newEdge, eds));\n    setMindMapData(prev => {\n      const newConnections = [...prev.connections, { \n        id: newEdge.id, \n        source: params.source, \n        target: params.target, \n        label: '' \n      }];\n      const newData = { ...prev, connections: newConnections };\n      autoSaveMindMapData(newData);\n      return newData;\n    });\n  }, [setEdges, setMindMapData, autoSaveMindMapData]);\n\n  const onNodeClick = useCallback((event, node) => {\n    setSelectedNode(node);\n    // Visual feedback - highlight selected node\n    setNodes(currentNodes => currentNodes.map(n => ({\n      ...n,\n      selected: n.id === node.id\n    })));\n  }, [setNodes]);\n\n  const onNodeDoubleClick = useCallback((event, node) => {\n    // Handle multi-part IDs correctly by joining all parts after the type\n    const parts = node.id.split('-');\n    const type = parts[0];\n    const id = parts.slice(1).join('-'); // Join all parts after the first one\n    \n    // Prevent multiple rapid clicks by checking if modal is already open\n    if (type === 'case' && caseModal.isOpen) return;\n    if (type === 'topic' && topicModal.isOpen) return;\n    if (type === 'task' && taskModal.isOpen) return;\n    if (type === 'literature' && literatureModal.isOpen) return;\n    \n    // Route to appropriate specialized modal based on node type\n    if (type === 'literature') {\n      const dataItem = mindMapData.literature.find(item => String(item.id) === id);\n      if (dataItem) {\n        setLiteratureModal({ isOpen: true, data: dataItem });\n      }\n      return;\n    }\n    \n    if (type === 'case') {\n      const dataItem = mindMapData.cases.find(item => String(item.id) === id);\n      if (dataItem) {\n        setModalAnimationStates(prev => ({ ...prev, case: true }));\n        setCaseModal({ isOpen: true, data: dataItem });\n        // Clear animation state after modal animation completes\n        setTimeout(() => {\n          setModalAnimationStates(prev => ({ ...prev, case: false }));\n        }, 800);\n      }\n      return;\n    }\n    \n    if (type === 'topic') {\n      const dataItem = mindMapData.topics.find(item => String(item.id) === id);\n      if (dataItem) {\n        setModalAnimationStates(prev => ({ ...prev, topic: true }));\n        setTopicModal({ isOpen: true, data: dataItem });\n        // Clear animation state after modal animation completes\n        setTimeout(() => {\n          setModalAnimationStates(prev => ({ ...prev, topic: false }));\n        }, 800);\n      }\n      return;\n    }\n    \n    if (type === 'task') {\n      const dataItem = mindMapData.tasks.find(item => String(item.id) === id);\n      if (dataItem) {\n        setModalAnimationStates(prev => ({ ...prev, task: true }));\n        setTaskModal({ isOpen: true, data: dataItem });\n        // Clear animation state after modal animation completes\n        setTimeout(() => {\n          setModalAnimationStates(prev => ({ ...prev, task: false }));\n        }, 800);\n      }\n      return;\n    }\n  }, [mindMapData, caseModal.isOpen, topicModal.isOpen, taskModal.isOpen, literatureModal.isOpen]);\n\n  const onEdgeDoubleClick = useCallback((event, edge) => {\n    // Double-click to delete edge immediately\n    setEdges(eds => eds.filter(e => e.id !== edge.id));\n    setMindMapData(prev => {\n      const newConnections = prev.connections.filter(conn => conn.id !== edge.id);\n      const newData = { ...prev, connections: newConnections };\n      autoSaveMindMapData(newData);\n      addToast('Connection deleted', 'success');\n      return newData;\n    });\n  }, [setEdges, setMindMapData, autoSaveMindMapData, addToast]);\n\n  const onEdgeContextMenu = useCallback((event, edge) => {\n    // Right-click to edit edge label\n    event.preventDefault();\n    setEdgeModal({ isOpen: true, edge: edge });\n  }, []);\n\n  const handleSaveEdgeLabel = useCallback((edgeId, label) => {\n    setEdges(eds =>\n      eds.map(edge =>\n        edge.id === edgeId ? { ...edge, label: label } : edge\n      )\n    );\n    setMindMapData(prev => {\n      const newConnections = prev.connections.map(conn =>\n        conn.id === edgeId ? { ...conn, label: label } : conn\n      );\n      const newData = { ...prev, connections: newConnections };\n      autoSaveMindMapData(newData);\n      return newData;\n    });\n  }, [setEdges, setMindMapData, autoSaveMindMapData]);\n\n  // Edge hover handlers for highlighting\n  const onEdgeMouseEnter = useCallback((event, edge) => {\n    setEdges(eds =>\n      eds.map(e =>\n        e.id === edge.id ? { ...e, className: 'highlighted' } : e\n      )\n    );\n  }, [setEdges]);\n\n  const onEdgeMouseLeave = useCallback((event, edge) => {\n    setEdges(eds =>\n      eds.map(e =>\n        e.id === edge.id ? { ...e, className: '' } : e\n      )\n    );\n  }, [setEdges]);\n\n  // Lazy-loaded force-directed layout for better performance\n  const forceLayout = useCallback(async () => {\n    if (nodes.length === 0) return;\n\n    try {\n      // Lazy load D3 force simulation\n      const { \n        forceSimulation, \n        forceManyBody, \n        forceLink, \n        forceCenter, \n        forceCollide \n      } = await loadD3Force();\n\n      // Preserve the current edges before layout\n      const currentEdges = [...edges];\n      \n      // Create a set of valid node IDs for fast lookup\n      const nodeIdSet = new Set(nodes.map(node => node.id));\n      \n      // Filter edges to only include those with both source and target nodes present\n      const validEdges = currentEdges.filter(edge => \n        nodeIdSet.has(edge.source) && nodeIdSet.has(edge.target)\n      );\n\n      // Create D3-compatible edge objects for the force simulation\n      const d3Edges = validEdges.map(edge => ({\n        source: edge.source,\n        target: edge.target,\n        id: edge.id\n      }));\n\n      // Create a copy of nodes for simulation (D3 mutates the objects)\n      const simulationNodes = nodes.map(node => ({ \n        id: node.id,\n        x: node.position.x, \n        y: node.position.y,\n        fx: null, // Remove any fixed positions\n        fy: null\n      }));\n\n      // Create simulation with optimized forces for mind map layout\n      const simulation = forceSimulation(simulationNodes)\n        .force('link', forceLink(d3Edges).id(d => d.id).distance(200).strength(0.5))\n        .force('charge', forceManyBody().strength(-800).distanceMax(400))\n        .force('center', forceCenter(window.innerWidth / 3, window.innerHeight / 2))\n        .force('collision', forceCollide().radius(80))\n        .stop();\n\n      // Run simulation in chunks to prevent blocking\n      const ticksPerFrame = 50;\n      const totalTicks = 400;\n      let currentTick = 0;\n\n      const runSimulationChunk = () => {\n        const remainingTicks = Math.min(ticksPerFrame, totalTicks - currentTick);\n        for (let i = 0; i < remainingTicks; i++) {\n          simulation.tick();\n        }\n        currentTick += remainingTicks;\n\n        if (currentTick < totalTicks) {\n          requestAnimationFrame(runSimulationChunk);\n        } else {\n          // Simulation complete, update nodes\n          const updatedNodes = simulationNodes.map(simNode => {\n            const originalNode = nodes.find(n => n.id === simNode.id);\n            return {\n              ...originalNode,\n              position: { x: simNode.x, y: simNode.y },\n            };\n          });\n          \n          // Update both nodes and edges in a single batch\n          setNodes(updatedNodes);\n          setEdges(validEdges);\n\n          // Update mindMapData with new positions\n          setMindMapData(currentData => {\n            const updatedData = { ...currentData };\n            \n            updatedNodes.forEach(node => {\n              const [type, id] = node.id.split('-');\n              const key = type === 'literature' ? 'literature' : `${type}s`;\n              const item = updatedData[key]?.find(i => String(i.id) === id);\n              if (item) {\n                item.position = node.position;\n              }\n            });\n            \n            return updatedData;\n          });\n\n          // Smooth camera transition to fit the new layout\n          setTimeout(() => {\n            fitView({ duration: 800, padding: 0.2 });\n          }, 200);\n        }\n      };\n\n      // Start simulation in next frame\n      requestAnimationFrame(runSimulationChunk);\n    } catch (error) {\n      console.error('Force layout failed:', error);\n      addToast('Layout calculation failed', 'error');\n    }\n  }, [nodes, edges, setNodes, setEdges, setMindMapData, fitView, addToast]);\n\n  // applyForceLayout wrapper function (defined after forceLayout)\n  const applyForceLayout = useCallback(() => {\n    try {\n      forceLayout();\n      addToast('Nodes realigned successfully', 'success');\n    } catch (error) {\n      console.error('Force layout error:', error);\n      addToast('Failed to realign nodes', 'error');\n    }\n  }, [forceLayout, addToast]);\n\n  const handleClearMap = useCallback(() => {\n    if (!window.confirm('Are you sure you want to clear the entire mind map?')) return;\n\n    const empty = { topics: [], cases: [], tasks: [], literature: [], connections: [] };\n    setMindMapData(empty);\n    setNodes([]);\n    setEdges([]);\n    setSelectedNode(null);\n    // Clear all modal states\n    setCaseModal({ isOpen: false, data: null });\n    setTopicModal({ isOpen: false, data: null });\n    setTaskModal({ isOpen: false, data: null });\n    setLiteratureModal({ isOpen: false, data: null });\n    setFocusedCategory(null);\n    autoSaveMindMapData(empty);\n    addToast('Mind map cleared successfully', 'success');\n  }, [setNodes, setEdges, autoSaveMindMapData, addToast]);\n\n  const handleNodesChange = useCallback((changes) => {\n    // Apply the node changes to React Flow state immediately - this is critical!\n    onNodesChange(changes);\n    \n    // Skip heavy operations during animations to prevent interference\n    if (isAnimating) {\n      console.log('Skipping position updates during animation');\n      return;\n    }\n\n\n    \n    // Process position changes for data persistence - SIMPLIFIED\n    const positionChanges = changes.filter(change => \n      change.type === 'position' && change.position\n    );\n    \n    if (positionChanges.length > 0) {\n      console.log('Processing position changes:', positionChanges);\n      \n      // Update mindMapData immediately without complex debouncing\n      setMindMapData(currentData => {\n        const updatedData = { ...currentData };\n        \n        positionChanges.forEach(change => {\n          if (change.position) {\n            const [type, id] = change.id.split('-');\n            const key = type === 'literature' ? 'literature' : `${type}s`;\n            const item = updatedData[key]?.find(i => String(i.id) === id);\n            \n            if (item) {\n              item.position = { ...change.position };\n              console.log(`Updated ${type} ${id} position to:`, change.position);\n            }\n          }\n        });\n        \n        // Save to localStorage immediately\n        localStorageUtils.save(updatedData, null, null, false);\n        \n        return updatedData;\n      });\n      \n      // Simple auto-save without complex timeouts\n      setTimeout(() => {\n        autoSaveMindMapData(mindMapData);\n      }, 500);\n    }\n  }, [onNodesChange, setMindMapData, isAnimating, autoSaveMindMapData, mindMapData]);\n\n  const handleNodeDragStop = useCallback((event, node) => {\n    // Debounce the auto-save to prevent excessive backend calls\n    // Position updates are already handled in handleNodesChange during dragging\n    clearTimeout(window.dragSaveTimeout);\n    window.dragSaveTimeout = setTimeout(() => {\n      setMindMapData(currentData => {\n        autoSaveMindMapData(currentData);\n        return currentData;\n      });\n    }, 500);\n  }, [autoSaveMindMapData]);\n\n  const loadMindMapData = useCallback(async () => {\n    setLoading(true);\n    setLoadingProgress(10);\n    setLoadingMessage('Checking local data...');\n    \n    try {\n      // First, try loading from localStorage for instant startup\n      const local = localStorageUtils.load();\n      if (local) {\n        setLoadingProgress(30);\n        setLoadingMessage('Loading from cache...');\n        \n        if (!local.connections) local.connections = [];\n        setMindMapData(local);\n        \n        setLoadingProgress(60);\n        setLoadingMessage('Applying layout...');\n        \n        await convertDataToReactFlow(local, true); // Apply layout immediately\n        \n        setLoadingProgress(90);\n        setLoadingMessage('Finalizing...');\n        \n        setLoading(false);\n        setIsInitialLoad(false);\n        setLoadingProgress(100);\n        \n        // Background sync with backend without blocking UI\n        setTimeout(async () => {\n          try {\n            const response = await axios.get(`${API}/mindmap-data`);\n            if (JSON.stringify(response.data) !== JSON.stringify(local)) {\n              // Only update if data has changed\n              if (!response.data.connections) response.data.connections = [];\n              setMindMapData(response.data);\n              await convertDataToReactFlow(response.data);\n              autoSaveMindMapData(response.data);\n              addToast('Data synchronized with server', 'info');\n            }\n          } catch (err) {\n            console.warn('Background sync failed:', err);\n          }\n        }, 500);\n        \n        return;\n      }\n\n      // If no local data, load from backend\n      setLoadingProgress(20);\n      setLoadingMessage('Loading from server...');\n      \n      try {\n        const response = await axios.get(`${API}/mindmap-data`);\n        if (!response.data.connections) response.data.connections = [];\n        \n        setLoadingProgress(50);\n        setLoadingMessage('Processing data...');\n        \n        setMindMapData(response.data);\n        \n        setLoadingProgress(80);\n        setLoadingMessage('Applying layout...');\n        \n        await convertDataToReactFlow(response.data, true); // Apply layout immediately\n        autoSaveMindMapData(response.data);\n        \n        setLoadingProgress(100);\n        setLoading(false);\n        setIsInitialLoad(false);\n      } catch (backendError) {\n        console.warn('Backend loading failed, populating with sample data:', backendError);\n        \n        // If backend fails, populate with sample data for better UX\n        setLoadingProgress(60);\n        setLoadingMessage('Loading sample data...');\n        \n        // Populate sample data\n        const emptyData = { topics: [], cases: [], tasks: [], literature: [], connections: [] };\n        \n        setMindMapData(emptyData);\n        \n        // Populate sample data\n        setTimeout(() => {\n          populateSampleLiteratureData(setMindMapData, autoSaveMindMapData, addToast);\n        }, 100);\n        \n        setLoadingProgress(100);\n        setLoading(false);\n        setIsInitialLoad(false);\n      }\n    } catch (err) {\n      console.error('Error loading mind map:', err);\n      addToast('Failed to load mind map', 'error');\n      setLoading(false);\n      setIsInitialLoad(false);\n    }\n  }, [addToast, autoSaveMindMapData, convertDataToReactFlow]);\n\n  useEffect(() => {\n    // Load initial mind map data\n    loadMindMapData();\n    \n    // Load templates from a source (e.g., API or localStorage)\n    // For now, using mock data\n    setTemplates([\n      { id: 'template1', name: 'Schizophrenia Workup', nodeType: 'case', data: { primary_diagnosis: 'Schizophrenia', chief_complaint: 'Auditory hallucinations' } },\n      { id: 'template2', name: 'MDD Follow-up', nodeType: 'case', data: { primary_diagnosis: 'Major Depressive Disorder', status: 'follow_up' } },\n      { id: 'template3', name: 'CBT for Anxiety', nodeType: 'topic', data: { title: 'CBT for Anxiety', category: 'Anxiety Disorders' } }\n    ]);\n  }, []); // Run only once on mount\n\n  // Helper function to check if a node matches the search query\n  const nodeMatchesSearch = useCallback((node, query) => {\n    // Guard against null/undefined node\n    if (!node || !node.id || !node.data) return false;\n    \n    // Return early if no query\n    if (!query) return true;\n    \n    // Normalize and trim query\n    const searchTerm = query.toLowerCase().trim();\n    if (!searchTerm) return true;\n    \n    try {\n      // Safely extract node type and ID\n      const parts = node.id.split('-');\n      const nodeType = parts.length > 0 ? parts[0] : '';\n      const nodeId = parts.length > 1 ? parts[1] : '';\n      \n      // Start with no match\n      let hasMatch = false;\n      \n      // 1. Basic title/label matching - most common searches\n      if (!hasMatch && node.data.label) {\n        const label = node.data.label.toLowerCase();\n        hasMatch = label.includes(searchTerm);\n      }\n      \n      // 2. Node type matching\n      if (!hasMatch && nodeType) {\n        hasMatch = nodeType.includes(searchTerm);\n      }\n      \n      // 3. Case ID pattern matching for case nodes\n      if (!hasMatch && nodeType === 'case' && nodeId) {\n        hasMatch = (`case-${nodeId}`).toLowerCase().includes(searchTerm);\n      }\n      \n      // 4. Type-specific content matching\n      if (!hasMatch) {\n        if (nodeType === 'case') {\n          const diagnosis = (node.data.primary_diagnosis || node.data.primaryDiagnosis || '').toLowerCase();\n          hasMatch = diagnosis.includes(searchTerm);\n        } else if (nodeType === 'topic') {\n          const title = (node.data.title || '').toLowerCase();\n          hasMatch = title.includes(searchTerm);\n        } else if (nodeType === 'literature') {\n          const title = (node.data.title || '').toLowerCase();\n          const authors = (node.data.authors || '').toLowerCase();\n          hasMatch = title.includes(searchTerm) || authors.includes(searchTerm);\n        }\n      }\n      \n      // 5. Psychiatric category matching for all node types\n      if (!hasMatch && node.data.category) {\n        const category = node.data.category.toLowerCase();\n        hasMatch = category.includes(searchTerm);\n      }\n      \n      return hasMatch;\n    } catch (error) {\n      console.error('Error in nodeMatchesSearch for node:', node.id, error);\n      return false;\n    }\n  }, []);\n\n  // Keyboard shortcuts\n  useEffect(() => {\n    const handleKeyDown = (event) => {\n      // Only trigger shortcuts when not typing in input fields\n      if (event.target.tagName === 'INPUT' || event.target.tagName === 'TEXTAREA') return;\n      \n      if (event.ctrlKey || event.metaKey) {\n        switch (event.key) {\n          case 'n':\n            event.preventDefault();\n            setShowNodeSelector(true);\n            break;\n          case 'e':\n            event.preventDefault();\n            setIsEditing(!isEditing);\n            break;\n          case 'r':\n            event.preventDefault();\n            applyForceLayout();\n            break;\n          case 'f':\n            event.preventDefault();\n            // Focus the search box\n            document.querySelector('input[type=\"text\"][placeholder*=\"Search\"]')?.focus();\n            break;\n          default:\n            break;\n        }\n      }\n      \n      if (event.key === 'Escape') {\n        setSelectedNode(null);\n        // Close all modals\n        setCaseModal({ isOpen: false, data: null });\n        setTopicModal({ isOpen: false, data: null });\n        setTaskModal({ isOpen: false, data: null });\n        setLiteratureModal({ isOpen: false, data: null });\n        setShowNodeSelector(false);\n        setIsTemplateManagerOpen(false);\n        \n        // Clear search if no modals are open\n        if (!caseModal.isOpen && !topicModal.isOpen && !taskModal.isOpen && \n            !literatureModal.isOpen && !showNodeSelector && !isTemplateManagerOpen) {\n          // Search functionality removed\n        }\n      }\n    };\n\n    window.addEventListener('keydown', handleKeyDown);\n    return () => window.removeEventListener('keydown', handleKeyDown);\n  }, [isEditing, applyForceLayout, caseModal, topicModal, taskModal, literatureModal, showNodeSelector, isTemplateManagerOpen]);\n\n  useEffect(() => {\n    // DISABLED automatic force layout to prevent overriding individual node positions\n    // Force layout should only be applied manually via \"Realign Nodes\" button\n    if (isReactFlowReady && !hasAppliedInitialLayout && nodes.length > 0) {\n      // Just mark as applied without applying force layout \n      setHasAppliedInitialLayout(true);\n    } else if (isInitialLoad && nodes.length > 0) {\n      // For initial load, just mark as applied since layout was already done in convertDataToReactFlow\n      setHasAppliedInitialLayout(true);\n    }\n  }, [isReactFlowReady, hasAppliedInitialLayout, nodes, isInitialLoad]); // Removed forceLayout from dependencies\n\n  // Simplified search and category filtering - no style interference\n  useEffect(() => {\n    if (nodes.length === 0) return;\n    \n    // Skip during animations to prevent interference\n    const anyModalAnimating = Object.values(modalAnimationStates).some(state => state);\n    if (isAnimating || anyModalAnimating) return;\n    \n  }, [focusedCategory, nodes, nodeMatchesSearch, isAnimating, modalAnimationStates]);\n  \n  // CSS-based search filtering - no direct style manipulation\n  useEffect(() => {\n    if (!isReactFlowReady) return;\n    \n    // Apply CSS classes instead of direct style manipulation\n    const styleSheet = document.getElementById('search-filter-styles') || document.createElement('style');\n    styleSheet.id = 'search-filter-styles';\n    \n    if (!document.getElementById('search-filter-styles')) {\n      document.head.appendChild(styleSheet);\n    }\n    \n    // Generate CSS for search filtering\n    let css = `\n      /* Default node styling */\n      .react-flow__node {\n        transition: opacity 0.3s ease, transform 0.3s ease, filter 0.3s ease !important;\n      }\n      \n      /* Search dimmed nodes */\n      .react-flow__node.search-dimmed {\n        opacity: 0.15 !important;\n        filter: grayscale(0.7) !important;\n        transform: scale(0.9) !important;\n      }\n      \n      /* Selected node highlighting */\n      .react-flow__node.search-selected {\n        box-shadow: 0 0 0 2px #10b981, 0 0 20px rgba(16, 185, 129, 0.6) !important;\n        z-index: 1000 !important;\n      }\n      \n      /* Ensure dragging still works */\n      .react-flow__node.search-dimmed {\n        pointer-events: auto !important;\n      }\n    `;\n    \n    styleSheet.textContent = css;\n    \n  }, [isReactFlowReady]);\n\n  // Optionally: handle layout setup on first render if needed\n\n  // Show optimized loading screen during initial load\n  if (loading) {\n    return <OptimizedLoadingScreen message={loadingMessage} progress={loadingProgress} />;\n  }\n\n  // Sophisticated Animation Variants (matching Literature modal quality)\n  const modalVariants = {\n    hidden: {\n      opacity: 0,\n      scale: 0.3,\n      y: 50,\n      rotate: -5,\n    },\n    visible: {\n      opacity: 1,\n      scale: 1,\n      y: 0,\n      rotate: 0,\n      transition: {\n        type: \"spring\",\n        damping: 25,\n        stiffness: 300,\n        duration: 0.6,\n      }\n    },\n    exit: {\n      opacity: 0,\n      scale: 0.7,\n      y: 30,\n      rotate: -3,\n      transition: {\n        type: \"easeInOut\",\n        duration: 0.4,\n      }\n    }\n  };\n\n  const backdropVariants = {\n    hidden: { opacity: 0 },\n    visible: { \n      opacity: 1,\n      transition: { duration: 0.3 }\n    },\n    exit: { \n      opacity: 0,\n      transition: { duration: 0.4 }\n    }\n  };\n\n  const contentVariants = {\n    hidden: {\n      opacity: 0,\n      y: 20,\n      scale: 0.95,\n    },\n    visible: {\n      opacity: 1,\n      y: 0,\n      scale: 1,\n      transition: {\n        type: \"easeOut\",\n        duration: 0.3,\n        delay: 0.1,\n      }\n    },\n    exit: {\n      opacity: 0,\n      y: -10,\n      scale: 1.02,\n      transition: {\n        type: \"easeIn\",\n        duration: 0.2,\n      }\n    }\n  };\n\n  const buttonVariants = {\n    inactive: {\n      scale: 1,\n    },\n    active: {\n      scale: 1.05,\n      transition: {\n        type: \"spring\",\n        damping: 20,\n        stiffness: 300,\n      }\n    },\n    hover: {\n      scale: 1.03,\n      transition: {\n        type: \"easeOut\",\n        duration: 0.2,\n      }\n    }\n  };\n\n  // All modal components are now imported from separate files\n\n  return (\n    <div className=\"min-h-screen bg-gray-50 flex\">\n      {/* --- Left Sidebar --- */}\n      <div className=\"w-80 bg-gradient-to-b from-slate-800 to-slate-900 text-white p-6 shadow-2xl flex flex-col\">\n        <div className=\"mb-8\">\n          <div className=\"text-3xl font-bold tracking-wide text-white\">PGY-3 HQ</div>\n          <div className=\"text-sm text-slate-300 mt-2\">Psychiatry Resident Dashboard</div>\n        </div>\n\n        {/* --- Category Filters --- */}\n        <div className=\"mb-6\">\n          <h3 className=\"text-sm font-semibold text-slate-300 mb-3\">Filter by Category</h3>\n          <div className=\"grid grid-cols-2 gap-2\">\n            <button\n              onClick={() => setFocusedCategory(null)}\n              className={`px-3 py-2 rounded-lg text-xs transition-all ${\n                focusedCategory === null\n                  ? 'bg-teal-600 text-white'\n                  : 'bg-slate-700 text-slate-300 hover:bg-slate-600'\n              }`}\n            >\n              All\n            </button>\n            <button\n              onClick={() => setFocusedCategory('topic')}\n              className={`px-3 py-2 rounded-lg text-xs transition-all flex items-center gap-1 ${\n                focusedCategory === 'topic'\n                  ? 'bg-blue-600 text-white'\n                  : 'bg-slate-700 text-slate-300 hover:bg-slate-600'\n              }`}\n            >\n              <Brain size={12} />\n              Topics\n            </button>\n            <button\n              onClick={() => setFocusedCategory('case')}\n              className={`px-3 py-2 rounded-lg text-xs transition-all flex items-center gap-1 ${\n                focusedCategory === 'case'\n                  ? 'bg-indigo-600 text-white'\n                  : 'bg-slate-700 text-slate-300 hover:bg-slate-600'\n              }`}\n            >\n              <Users size={12} />\n              Cases\n            </button>\n            <button\n              onClick={() => setFocusedCategory('task')}\n              className={`px-3 py-2 rounded-lg text-xs transition-all flex items-center gap-1 ${\n                focusedCategory === 'task'\n                  ? 'bg-amber-600 text-white'\n                  : 'bg-slate-700 text-slate-300 hover:bg-slate-600'\n              }`}\n            >\n              <CheckSquare size={12} />\n              Tasks\n            </button>\n            <button\n              onClick={() => setFocusedCategory('literature')}\n              className={`px-3 py-2 rounded-lg text-xs transition-all flex items-center gap-1 ${\n                focusedCategory === 'literature'\n                  ? 'bg-purple-600 text-white'\n                  : 'bg-slate-700 text-slate-300 hover:bg-slate-600'\n              }`}\n            >\n              <BookOpen size={12} />\n              Literature\n            </button>\n          </div>\n        </div>\n\n        {/* --- Auto-save Status --- */}\n        <div className=\"mb-4 p-3 bg-slate-700 bg-opacity-50 rounded-lg\">\n          <div className=\"flex items-center gap-2 text-xs\">\n            {isSaving ? (\n              <>\n                <Loader2 size={12} className=\"animate-spin\" />\n                <span className=\"text-amber-300\">Saving...</span>\n              </>\n            ) : lastSaved ? (\n              <>\n                <CheckCircle size={12} className=\"text-green-400\" />\n                <span className=\"text-slate-300\">\n                  Last saved: {lastSaved.toLocaleTimeString()}\n                </span>\n              </>\n            ) : (\n              <>\n                <Cloud size={12} className=\"text-slate-400\" />\n                <span className=\"text-slate-400\">Auto-save enabled</span>\n              </>\n            )}\n          </div>\n        </div>\n\n        {/* --- Controls --- */}\n        <div className=\"space-y-3 mb-6\">\n          <LoadingButton onClick={applyForceLayout} icon={Shuffle} className=\"w-full bg-purple-600 hover:bg-purple-700 text-white px-4 py-2 rounded-md text-sm\">\n            Realign Nodes\n          </LoadingButton>\n          <LoadingButton onClick={() => setIsTemplateManagerOpen(true)} icon={Bookmark} className=\"w-full bg-indigo-600 hover:bg-indigo-700 text-white px-4 py-2 rounded-md text-sm\">\n            Manage Templates\n          </LoadingButton>\n          <LoadingButton \n            onClick={() => populateSampleLiteratureData(setMindMapData, autoSaveMindMapData, addToast)} \n            icon={BookOpen} \n            className=\"w-full bg-emerald-600 hover:bg-emerald-700 text-white px-4 py-2 rounded-md text-sm\"\n          >\n            Add Sample Literature\n          </LoadingButton>\n          <LoadingButton onClick={() => setIsEditing(!isEditing)} icon={isEditing ? Save : Edit3} className={`w-full px-4 py-2 rounded-md text-sm ${isEditing ? 'bg-teal-600' : 'bg-slate-600'}`}>\n            {isEditing ? 'Exit Edit Mode' : 'Edit Mind Map'}\n          </LoadingButton>\n          <LoadingButton onClick={() => setShowNodeSelector(true)} icon={Plus} className=\"w-full bg-blue-600 hover:bg-blue-700 text-white px-4 py-2 rounded-md text-sm\">\n            Add New Node\n          </LoadingButton>\n          <LoadingButton onClick={handleClearMap} icon={Trash2} className=\"w-full bg-red-600 hover:bg-red-700 text-white px-4 py-2 rounded-md text-sm\">\n            Clear All Data\n          </LoadingButton>\n        </div>\n\n        {/* --- Selected Node Panel --- */}\n        {selectedNode && (\n          <div className=\"mt-auto p-4 bg-slate-700 bg-opacity-50 rounded-lg\">\n            <h3 className=\"text-sm font-semibold text-slate-300 mb-2\">Selected Node</h3>\n            <div className=\"space-y-2\">\n              <div className=\"flex items-center gap-2\">\n                {selectedNode.type === 'topic' && <Brain size={14} className=\"text-blue-400\" />}\n                {selectedNode.type === 'case' && <Users size={14} className=\"text-indigo-400\" />}\n                {selectedNode.type === 'task' && <CheckSquare size={14} className=\"text-amber-400\" />}\n                {selectedNode.type === 'literature' && <BookOpen size={14} className=\"text-purple-400\" />}\n                <span className=\"text-sm text-white font-medium truncate\">\n                  {selectedNode.data.label}\n                </span>\n              </div>\n              {selectedNode.data.category && (\n                <div className=\"text-xs text-slate-400\">\n                  Category: {selectedNode.data.category}\n                </div>\n              )}\n              {selectedNode.data.status && (\n                <div className=\"text-xs text-slate-400\">\n                  Status: {selectedNode.data.status}\n                </div>\n              )}\n              <button\n                onClick={() => {\n                  const [type, id] = selectedNode.id.split('-');\n                  const key = type === 'literature' ? 'literature' : `${type}s`;\n                  const dataItem = mindMapData[key].find(item => String(item.id) === id);\n                  if (dataItem) {\n                    // Route to appropriate specialized modal\n                    if (type === 'case') {\n                      setCaseModal({ isOpen: true, data: dataItem });\n                    } else if (type === 'topic') {\n                      setTopicModal({ isOpen: true, data: dataItem });\n                    } else if (type === 'task') {\n                      setTaskModal({ isOpen: true, data: dataItem });\n                    } else if (type === 'literature') {\n                      handleLiteratureClick(dataItem);\n                    }\n                  }\n                }}\n                className=\"w-full mt-2 px-3 py-2 bg-slate-600 hover:bg-slate-500 text-white text-xs rounded-lg transition-colors flex items-center gap-2\"\n              >\n                <Eye size={12} />\n                View Details\n              </button>\n            </div>\n          </div>\n        )}\n\n        {/* --- Keyboard Shortcuts Help --- */}\n        {!selectedNode && (\n          <div className=\"mt-auto p-3 bg-slate-700 bg-opacity-30 rounded-lg\">\n            <h4 className=\"text-xs font-semibold text-slate-300 mb-2\">Keyboard Shortcuts</h4>\n            <div className=\"space-y-1 text-xs text-slate-400\">\n              <div>Ctrl+N - Add Node</div>\n              <div>Ctrl+E - Toggle Edit Mode</div>\n              <div>Ctrl+R - Realign Nodes</div>\n              <div>Esc - Clear Selection</div>\n            </div>\n          </div>\n        )}\n      </div>\n\n      {/* --- Main Mind Map Workspace --- */}\n      <div className=\"flex-1 relative\">\n        <ReactFlowErrorBoundary>\n          <ReactFlow\n            nodes={nodes}\n            edges={edges}\n            onNodesChange={handleNodesChange}\n            onEdgesChange={onEdgesChange}\n            onConnect={onConnect}\n            onNodeClick={onNodeClick}\n            onNodeDoubleClick={onNodeDoubleClick}\n            onNodeDragStop={handleNodeDragStop}\n            onEdgeDoubleClick={onEdgeDoubleClick}\n            onEdgeContextMenu={onEdgeContextMenu}\n            onEdgeMouseEnter={onEdgeMouseEnter}\n            onEdgeMouseLeave={onEdgeMouseLeave}\n            nodeTypes={nodeTypes}\n            edgeTypes={{ floating: FloatingEdge, enhanced: EnhancedEdge }}\n            nodesDraggable={true}\n            nodesConnectable={isEditing}\n            elementsSelectable={true}\n            onInit={(reactFlowInstance) => {\n              setIsReactFlowReady(true);\n              // Store reference for error recovery\n              window.reactFlowInstance = reactFlowInstance;\n            }}\n            onError={(id, message) => {\n              console.warn('React Flow Error:', id, message);\n              // Ignore dimension-related errors during animations\n              if (isAnimating && message.includes('dimensions')) {\n                return;\n              }\n            }}\n            fitView\n            snapToGrid={false}\n            snapGrid={[15, 15]}\n            elevateEdgesOnSelect={false}\n            connectionLineComponent={ConnectionLine}\n          connectionLineStyle={{\n            stroke: '#3b82f6', // Use a bright blue color for better visibility during connection\n            strokeWidth: 3.5, // Slightly thicker than regular edges\n            opacity: 0.9,\n            strokeLinecap: 'round',\n            strokeDasharray: '5,3', // Shorter dash pattern for more modern look\n            filter: 'drop-shadow(0 0 6px rgba(59, 130, 246, 0.6))', // Softer glow\n            animation: 'flowingDash 1s linear infinite' // Add flowing animation\n          }}\n          defaultEdgeOptions={{\n            type: 'enhanced', // Use our enhanced edge with proper prop handling\n            style: { \n              strokeWidth: 2.5, \n              stroke: '#64748b',\n              opacity: 0.9,\n              strokeLinecap: 'round',\n              transition: 'none'\n            }\n            // Remove pathOptions - this is not a standard React Flow prop\n          }}\n          className=\"bg-gradient-to-br from-blue-50 to-indigo-100\"\n        >\n          <Background color=\"#aaa\" gap={16} />\n          <Controls />\n          <MiniMap />\n        </ReactFlow>\n        </ReactFlowErrorBoundary>\n      </div>\n      \n      {/* --- Modals --- */}\n      {isTemplateManagerOpen && (\n        <TemplateManager\n          isOpen={isTemplateManagerOpen}\n          onClose={() => setIsTemplateManagerOpen(false)}\n          templates={templates}\n          setTemplates={setTemplates}\n        />\n      )}\n      \n      {/* Literature Modal */}\n      {literatureModal.isOpen && (\n        <LiteratureModal\n          isOpen={literatureModal.isOpen}\n          onClose={() => {\n            setIsAnimating(true); // Set animation state for closing\n            setLiteratureModal({ isOpen: false, data: null });\n            // Clear animation state after modal close animation completes\n            setTimeout(() => setIsAnimating(false), 500); // 400ms close animation + 100ms buffer\n          }}\n          onAnimationStart={() => setIsAnimating(true)}\n          onAnimationEnd={() => setIsAnimating(false)}\n          literatureData={literatureModal.data}\n          allNodes={nodes}\n          connections={mindMapData.connections || []}\n          setMindMapData={setMindMapData}\n          autoSaveMindMapData={autoSaveMindMapData}\n          addToast={addToast}\n        />\n      )}\n      {showNodeSelector && (\n        <NodeSelector\n          isOpen={showNodeSelector}\n          onClose={() => setShowNodeSelector(false)}\n          onSelect={(nodeType, templateId) => {\n            setShowNodeSelector(false);\n            const dataId = Date.now();\n            const id = `${nodeType}-${dataId}`;\n            \n            // Create node data object with appropriate fields based on type\n            let nodeData = { id: dataId, label: `New ${nodeType}` };\n            \n            // For case nodes, add structured fields\n            if (nodeType === 'case') {\n              nodeData = {\n                ...nodeData,\n                chiefComplaint: '',\n                initialPresentation: '',\n                currentPresentation: '',\n                medicationHistory: '',\n                therapyProgress: '',\n                defensePatterns: '',\n                clinicalReflection: ''\n              };\n            }\n            \n            // Calculate grid-based position for new nodes to avoid clustering\n            // Use current data count instead of nodes.length for more accurate positioning\n            const currentDataCount = (mindMapData.topics?.length || 0) + \n                                   (mindMapData.cases?.length || 0) + \n                                   (mindMapData.tasks?.length || 0) + \n                                   (mindMapData.literature?.length || 0);\n            \n            const gridSize = Math.ceil(Math.sqrt(currentDataCount + 1));\n            const nodeSpacing = 280;\n            const offsetX = 400; // Offset from left sidebar\n            const offsetY = 150; // Offset from top\n            \n            const gridPosition = {\n              x: (currentDataCount % gridSize) * nodeSpacing + offsetX,\n              y: Math.floor(currentDataCount / gridSize) * nodeSpacing + offsetY\n            };\n            \n            const newNode = {\n              id,\n              type: nodeType,\n              position: gridPosition,\n              data: { ...nodeData, onDelete: () => handleDeleteNode(id) }\n            };\n\n            setMindMapData(d => {\n              const key = nodeType === 'literature' ? 'literature' : `${nodeType}s`;\n              const dataToAdd = { ...newNode.data, position: newNode.position };\n              delete dataToAdd.onDelete;\n              const updatedData = {\n                ...d,\n                [key]: [...(d[key] || []), dataToAdd]\n              };\n              autoSaveMindMapData(updatedData);\n              return updatedData;\n            });\n\n            setNodes(n => n.concat(newNode));\n          }}\n          templates={templates}\n        />\n      )}\n\n      {/* Specialized Modals with optimized rendering */}\n      <AnimatePresence mode=\"wait\">\n        {caseModal.isOpen && (\n          <CaseModal \n            key={`case-modal-${caseModal.data?.id || 'default'}`}\n            isOpen={caseModal.isOpen} \n            data={caseModalStableData.current || caseModal.data} \n            onClose={() => {\n              setModalAnimationStates(prev => ({ ...prev, case: true }));\n              setCaseModal({ isOpen: false, data: null });\n            }}\n            onAnimationStart={() => {\n              setIsAnimating(true);\n              setModalAnimationStates(prev => ({ ...prev, case: true }));\n            }}\n            onAnimationEnd={() => {\n              setIsAnimating(false);\n              setModalAnimationStates(prev => ({ ...prev, case: false }));\n            }}\n            setMindMapData={setMindMapData}\n            autoSaveMindMapData={autoSaveMindMapData}\n            addToast={addToast}\n          />\n        )}\n      </AnimatePresence>\n      \n      <AnimatePresence mode=\"wait\">\n        {topicModal.isOpen && (\n          <TopicModal \n            key={`topic-modal-${topicModal.data?.id || 'default'}`}\n            isOpen={topicModal.isOpen} \n            data={topicModalStableData.current || topicModal.data} \n            onClose={() => {\n              setModalAnimationStates(prev => ({ ...prev, topic: true }));\n              setTopicModal({ isOpen: false, data: null });\n            }}\n            onAnimationStart={() => {\n              setIsAnimating(true);\n              setModalAnimationStates(prev => ({ ...prev, topic: true }));\n            }}\n            onAnimationEnd={() => {\n              setIsAnimating(false);\n              setModalAnimationStates(prev => ({ ...prev, topic: false }));\n            }}\n            setMindMapData={setMindMapData}\n            autoSaveMindMapData={autoSaveMindMapData}\n            addToast={addToast}\n            syncNodeData={syncNodeData}\n            forceNodeUpdate={() => setNodeUpdateTrigger(prev => prev + 1)}\n          />\n        )}\n      </AnimatePresence>\n      \n      <AnimatePresence mode=\"wait\">\n        {taskModal.isOpen && (\n          <TaskModal \n            key={`task-modal-${taskModal.data?.id || 'default'}`}\n            isOpen={taskModal.isOpen} \n            data={taskModalStableData.current || taskModal.data} \n            onClose={() => {\n              setModalAnimationStates(prev => ({ ...prev, task: true }));\n              setTaskModal({ isOpen: false, data: null });\n            }}\n            onAnimationStart={() => {\n              setIsAnimating(true);\n              setModalAnimationStates(prev => ({ ...prev, task: true }));\n            }}\n            onAnimationEnd={() => {\n              setIsAnimating(false);\n              setModalAnimationStates(prev => ({ ...prev, task: false }));\n            }}\n            setMindMapData={setMindMapData}\n            autoSaveMindMapData={autoSaveMindMapData}\n            addToast={addToast}\n          />\n        )}\n      </AnimatePresence>\n\n      <EdgeLabelModal \n        isOpen={edgeModal.isOpen} \n        edge={edgeModal.edge} \n        onClose={() => setEdgeModal({ isOpen: false, edge: null })} \n        onSave={handleSaveEdgeLabel} \n      />\n\n      {loading && (\n        <div className=\"absolute inset-0 bg-white bg-opacity-80 flex items-center justify-center z-50\">\n          <Loader2 size={48} className=\"animate-spin text-blue-600\" />\n        </div>\n      )}\n      \n      {toasts.map(toast => (\n        <Toast\n          key={toast.id}\n          message={toast.message}\n          type={toast.type}\n          duration={toast.duration}\n          onClose={() => removeToast(toast.id)}\n        />\n      ))}\n    </div>\n  );\n};\n\n// Error Boundary for React Flow\nclass ReactFlowErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { hasError: false };\n  }\n\n  static getDerivedStateFromError(error) {\n    // Check if it's a React Flow dimension error\n    if (error.message && error.message.includes('dimensions')) {\n      console.warn('React Flow dimension error caught, recovering...');\n      return { hasError: false }; // Don't show error, just recover\n    }\n    return { hasError: true };\n  }\n\n  componentDidCatch(error, errorInfo) {\n    if (error.message && error.message.includes('dimensions')) {\n      // For dimension errors, try to recover\n      setTimeout(() => {\n        if (window.reactFlowInstance) {\n          window.reactFlowInstance.fitView();\n        }\n      }, 100);\n      return;\n    }\n    console.error('React Flow Error:', error, errorInfo);\n  }\n\n  render() {\n    if (this.state.hasError) {\n      return (\n        <div className=\"flex-1 flex items-center justify-center\">\n          <div className=\"text-center\">\n            <h3 className=\"text-lg font-medium text-gray-900 mb-2\">Mind Map Temporarily Unavailable</h3>\n            <p className=\"text-gray-600 mb-4\">There was an issue with the mind map. Please refresh the page.</p>\n            <button \n              onClick={() => window.location.reload()} \n              className=\"px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700\"\n            >\n              Refresh Page\n            </button>\n          </div>\n        </div>\n      );\n    }\n\n    return this.props.children;\n  }\n}\n\nconst Dashboard = () => (\n  <ReactFlowProvider>\n    <DashboardComponent />\n  </ReactFlowProvider>\n);\n\nfunction App() {\n  return <Dashboard />;\n}\n\nexport default App;","import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n);\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","var getProto = Object.getPrototypeOf ? (obj) => (Object.getPrototypeOf(obj)) : (obj) => (obj.__proto__);\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; (typeof current == 'object' || typeof current == 'function') && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach((key) => (def[key] = () => (value[key])));\n\t}\n\tdef['default'] = () => (value);\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = (chunkId) => {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce((promises, key) => {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks\n__webpack_require__.u = (chunkId) => {\n\t// return url for filenames based on template\n\treturn \"static/js/\" + chunkId + \".\" + {\"213\":\"953ef4c7\",\"261\":\"de3004f3\",\"524\":\"c4c81a9f\"}[chunkId] + \".chunk.js\";\n};","// This function allow to reference async chunks\n__webpack_require__.miniCssF = (chunkId) => {\n\t// return url for filenames based on template\n\treturn undefined;\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","var inProgress = {};\nvar dataWebpackPrefix = \"frontend:\";\n// loadScript function to load a script via script tag\n__webpack_require__.l = (url, done, key, chunkId) => {\n\tif(inProgress[url]) { inProgress[url].push(done); return; }\n\tvar script, needAttach;\n\tif(key !== undefined) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tfor(var i = 0; i < scripts.length; i++) {\n\t\t\tvar s = scripts[i];\n\t\t\tif(s.getAttribute(\"src\") == url || s.getAttribute(\"data-webpack\") == dataWebpackPrefix + key) { script = s; break; }\n\t\t}\n\t}\n\tif(!script) {\n\t\tneedAttach = true;\n\t\tscript = document.createElement('script');\n\n\t\tscript.charset = 'utf-8';\n\t\tscript.timeout = 120;\n\t\tif (__webpack_require__.nc) {\n\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n\t\t}\n\t\tscript.setAttribute(\"data-webpack\", dataWebpackPrefix + key);\n\n\t\tscript.src = url;\n\t}\n\tinProgress[url] = [done];\n\tvar onScriptComplete = (prev, event) => {\n\t\t// avoid mem leaks in IE.\n\t\tscript.onerror = script.onload = null;\n\t\tclearTimeout(timeout);\n\t\tvar doneFns = inProgress[url];\n\t\tdelete inProgress[url];\n\t\tscript.parentNode && script.parentNode.removeChild(script);\n\t\tdoneFns && doneFns.forEach((fn) => (fn(event)));\n\t\tif(prev) return prev(event);\n\t}\n\tvar timeout = setTimeout(onScriptComplete.bind(null, undefined, { type: 'timeout', target: script }), 120000);\n\tscript.onerror = onScriptComplete.bind(null, script.onerror);\n\tscript.onload = onScriptComplete.bind(null, script.onload);\n\tneedAttach && document.head.appendChild(script);\n};","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","__webpack_require__.p = \"./\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t792: 0\n};\n\n__webpack_require__.f.j = (chunkId, promises) => {\n\t\t// JSONP chunk loading for javascript\n\t\tvar installedChunkData = __webpack_require__.o(installedChunks, chunkId) ? installedChunks[chunkId] : undefined;\n\t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n\t\t\t// a Promise means \"currently loading\".\n\t\t\tif(installedChunkData) {\n\t\t\t\tpromises.push(installedChunkData[2]);\n\t\t\t} else {\n\t\t\t\tif(true) { // all chunks have JS\n\t\t\t\t\t// setup Promise in chunk cache\n\t\t\t\t\tvar promise = new Promise((resolve, reject) => (installedChunkData = installedChunks[chunkId] = [resolve, reject]));\n\t\t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n\t\t\t\t\t// start chunk loading\n\t\t\t\t\tvar url = __webpack_require__.p + __webpack_require__.u(chunkId);\n\t\t\t\t\t// create error before stack unwound to get useful stacktrace later\n\t\t\t\t\tvar error = new Error();\n\t\t\t\t\tvar loadingEnded = (event) => {\n\t\t\t\t\t\tif(__webpack_require__.o(installedChunks, chunkId)) {\n\t\t\t\t\t\t\tinstalledChunkData = installedChunks[chunkId];\n\t\t\t\t\t\t\tif(installedChunkData !== 0) installedChunks[chunkId] = undefined;\n\t\t\t\t\t\t\tif(installedChunkData) {\n\t\t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n\t\t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n\t\t\t\t\t\t\t\terror.message = 'Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')';\n\t\t\t\t\t\t\t\terror.name = 'ChunkLoadError';\n\t\t\t\t\t\t\t\terror.type = errorType;\n\t\t\t\t\t\t\t\terror.request = realSrc;\n\t\t\t\t\t\t\t\tinstalledChunkData[1](error);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t\t__webpack_require__.l(url, loadingEnded, \"chunk-\" + chunkId, chunkId);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n};\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkfrontend\"] = self[\"webpackChunkfrontend\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [967,497,96], () => (__webpack_require__(8806)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["LoadingSpinner","_ref","message","_jsx","className","children","_jsxs","Loader2","LazyRichTextEditor","lazy","LazyTemplateManager","LazyLiteratureModal","withLazyLoading","LazyComponent","fallbackMessage","props","Suspense","fallback","TemplateManager","LiteratureModal","modalVariants","hidden","opacity","scale","y","rotate","visible","transition","type","damping","stiffness","duration","exit","backdropVariants","backdropFilter","ease","contentVariants","delay","cardVariants","edit","boxShadow","saved","TimelineEntryForm","_ref3","entry","onChange","onSave","onCancel","isNew","localEntry","setLocalEntry","useState","useEffect","handleFieldChange","field","value","updated","motion","div","initial","animate","e","target","timestamp","slice","content","rows","placeholder","author","button","whileHover","whileTap","onClick","handleSave","trim","disabled","Save","size","TimelineEditForm","_ref4","_sectionData$basic_in","_sectionData$basic_in2","_sectionData$initial_","_sectionData$narrativ","_sectionData$therapeu","isOpen","data","onClose","onAnimationStart","onAnimationEnd","setMindMapData","autoSaveMindMapData","addToast","isAnimating","setIsAnimating","isVisible","setIsVisible","isClosing","setIsClosing","editData","setEditData","isLoading","setIsLoading","hasInitialized","setHasInitialized","activeTab","setActiveTab","isTabTransitioning","setIsTabTransitioning","editingSections","setEditingSections","sectionData","setSectionData","scrollPositions","setScrollPositions","contentRefs","useRef","newMedication","setNewMedication","name","dosage","frequency","effect","showMedicationForm","setShowMedicationForm","newTimelineEntry","setNewTimelineEntry","Date","toISOString","showTimelineForm","setShowTimelineForm","editingTimelineEntry","setEditingTimelineEntry","timelineRef","initialData","narrative_summary","medications","therapeutic_highlights","timeline","last_updated","setTimeout","prevEditData","handleClose","useCallback","saveScrollPosition","async","updatedData","prevData","updatedCases","cases","map","caseItem","String","id","newData","error","console","tabId","contentRef","current","prev","scrollTop","restoreScrollPosition","savedPosition","handleTabSwitch","newTabId","startEditingSection","window","confirm","filter","sectionId","cancelEditingSection","saveSectionEdit","sectionChanges","updateSectionField","addMedication","updatedMedications","now","dateAdded","removeMedication","medicationId","med","getTimelineEntryColor","addTimelineEntry","timelineEntry","toString","updatedTimeline","scrollHeight","updateTimelineEntry","entryId","updatedEntry","removeTimelineEntry","scrollToLatest","scrollTo","top","behavior","scrollToShowEditingEntry","clientHeight","connectedNodes","useMemo","topics","literature","tabs","label","icon","Users","FileText","Pill","Brain","Clock","Link2","AnimatePresence","mode","onExitComplete","variants","style","willChange","backfaceVisibility","transform","currentTarget","stopPropagation","onAnimationComplete","X","_ref2","Icon","layoutId","ref","el","overview","x","basic_info","title","Edit3","caseName","case_name","status","initial_presentation","initialPresentation","toLocaleString","narrative","medication","index","Activity","Calendar","toLocaleDateString","Trash2","Plus","length","therapy","related","topic","BookOpen","lit","caseNode","_sectionData$title","_sectionData$definiti","_sectionData$diagnost","_sectionData$psychoth","syncNodeData","forceNodeUpdate","expandedCriteria","setExpandedCriteria","newTags","setNewTags","newResource","setNewResource","showResourceForm","setShowResourceForm","categoryColors","primary","secondary","Stethoscope","category","definition","diagnostic_criteria","comorbidities","differential_diagnoses","psychotherapy_modalities","flashcard_count","completed_flashcards","progressPercentage","total","completed","Math","round","updatedTopics","handleCategoryChange","_categoryColors$newCa","log","newCategory","newColor","Other","updatedEditData","color","setNewTag","tag","_sectionData$sectionI","currentTags","includes","tagToRemove","_sectionData$sectionI2","getNewTag","clearNewTag","addItemDirectly","item","currentItems","updatedItems","removeItemDirectly","itemToRemove","h1","select","whileFocus","Object","keys","width","concept","ChevronDown","ChevronRight","height","Array","isArray","join","split","criteria","clinical","comorbidity","onKeyPress","key","diagnosis","treatment","modality","connections","TaskModal","_priorityConfig$editD","isEditing","setIsEditing","priority","priorityConfig","low","Flag","medium","high","urgent","AlertTriangle","statusConfig","pending","in_progress","Play","CheckSquare","paused","Pause","isOverdue","due_date","updatedTasks","tasks","task","handleDelete","handleStatusChange","newStatus","updateField","renderField","arguments","undefined","options","toLowerCase","choices","choice","Number","repeat","Infinity","_Fragment","TrendingUp","bounce","layout","layoutRoot","Target","entries","config","isActive","created_at","updated_at","React","prevProps","nextProps","_prevProps$data","_nextProps$data","_prevProps$data2","_nextProps$data2","getIntersectionPoint","rect","center","point","rectX","rectY","centerX","centerY","pointX","pointY","left","right","bottom","dx","dy","abs","side","slope","yIntercept","intersections","leftY","push","distance","hypot","rightY","topX","bottomX","validIntersections","intersection","intersectionDx","intersectionDy","sort","a","b","FloatingEdge","memo","_sourceNode","_targetNode","_sourceNode2","_sourceNode3","_targetNode2","_targetNode3","source","sourceX","sourceY","targetX","targetY","sourcePosition","targetPosition","markerEnd","markerStart","getNode","useReactFlow","sourceNode","targetNode","edgePath","labelX","labelY","__isAnimating","__forceUpdate","_sourceNode$dimension","_sourceNode$data","_sourceNode$style","_targetNode$dimension","_targetNode$data","_targetNode$style","_sourceNode$positionA","_sourceNode$positionA2","_targetNode$positionA","_targetNode$positionA2","sourceHasDimensions","Boolean","dimensions","targetHasDimensions","getNodeDimensions","node","_node$dimensions","_node$data","_node$dimensions2","_node$data2","defaultWidth","defaultHeight","sourceDims","targetDims","floatingEdgeData","sourceWidth","sourceHeight","targetWidth","targetHeight","offset","sourceSide","targetSide","sourceCenter","targetCenter","sourceRect","targetRect","sourceIntersection","targetIntersection","sqrt","unitX","unitY","extensionAmount","debug","getFloatingEdgePath","positionAbsolute","position","sx","sy","tx","ty","warn","BaseEdge","path","stroke","strokeWidth","strokeLinecap","strokeOpacity","EnhancedEdge","sourceHandleId","targetHandleId","selected","animated","getBezierPath","EdgeLabelRenderer","fontSize","pointerEvents","displayName","fromX","fromY","toX","toY","connectionLineStyle","strokeDasharray","animation","d","fill","progress","Sparkles","max","min","sampleLiteratureData","authors","year","journal","volume","pages","doi","abstract","keywords","notes","pdf_url","sampleConnections","populateSampleLiteratureData","existingIds","Set","newLiterature","has","existingCaseIds","existingTopicIds","newCases","primary_diagnosis","chief_complaint","secondary_diagnoses","newTopics","tags","existingConnectionIds","conn","newConnections","loadD3Force","API","process","replace","originalError","_len2","args","_key2","Toast","timer","clearTimeout","success","info","saving","getIcon","CheckCircle2","AlertCircle","Info","LoadingButton","loading","STORAGE_KEY","localStorageUtils","save","timeoutId","onSaveStart","onSaveComplete","storageData","version","localStorage","setItem","JSON","stringify","removeItem","clearError","load","stored","getItem","parse","clear","getStorageInfo","Blob","nodeTypes","skipAnimation","completionPercentage","backgroundColor","borderRadius","WebkitBorderRadius","MozBorderRadius","overflow","Handle","Position","Top","zIndex","isConnectable","Right","Bottom","Left","Tag","onDelete","preventDefault","deleteTimeout","onDoubleClick","case","urgency","_data$chief_complaint","_data$diagnosis","complaint","some","keyword","getUrgencyLevel","linked_topics","age","getStatusColor","tasks_count","completed_tasks","_ref5","_ref6","clickTimeout","onLiteratureClick","NodeSelector","_ref9","onSelect","templates","selectedNodeType","setSelectedNodeType","description","handleFinalSelect","filteredTemplates","t","nodeType","ArrowLeft","minHeight","_ref0","template","_template$data","_template$data2","_template$data3","assessment_plan","EdgeLabelModal","_ref1","edge","setLabel","autoFocus","DashboardComponent","_caseModal$data2","_topicModal$data2","_taskModal$data2","_caseModal$data3","_topicModal$data3","_taskModal$data3","fitView","setCenter","zoomTo","getViewport","nodes","setNodes","onNodesChange","useNodesState","edges","setEdges","onEdgesChange","useEdgesState","nodeUpdateTrigger","setNodeUpdateTrigger","mindMapData","selectedNode","setSelectedNode","setLoading","loadingProgress","setLoadingProgress","loadingMessage","setLoadingMessage","isInitialLoad","setIsInitialLoad","focusedCategory","setFocusedCategory","showNodeSelector","setShowNodeSelector","caseModal","setCaseModal","topicModal","setTopicModal","taskModal","setTaskModal","caseModalStableData","topicModalStableData","taskModalStableData","isReactFlowReady","setIsReactFlowReady","hasAppliedInitialLayout","setHasAppliedInitialLayout","isExportingCSV","setIsExportingCSV","lastSaved","setLastSaved","isSaving","setIsSaving","edgeModal","setEdgeModal","setTemplates","exportProgress","setExportProgress","show","toasts","setToasts","isTemplateManagerOpen","setIsTemplateManagerOpen","literatureModal","setLiteratureModal","modalAnimationStates","setModalAnimationStates","newToast","removeToast","toast","_caseModal$data","_topicModal$data","_taskModal$data","anyModalOpen","anyModalAnimating","values","state","anyModalTransitioning","requestIdleCallback","saveToBackend","timeout","positionBackendSaveTimeout","handleDeleteNode","fullNodeId","idParts","nodeId","collectionKey","updatedCollection","updatedConnections","charAt","toUpperCase","nds","eds","handleLiteratureClick","literatureData","currentNodes","hasChanges","updatedNodes","newLabel","needsUpdate","_mindMapData$cases","caseData","find","c","expectedLabel","primaryDiagnosis","_mindMapData$topics","topicData","expectedColor","_mindMapData$tasks","taskData","_mindMapData$literatu","l","lastUpdated","_mindMapData$cases2","_mindMapData$topics2","_mindMapData$tasks2","_mindMapData$literatu2","convertDataToReactFlow","applyLayoutImmediately","allItems","layoutNodes","hasExistingPositions","forceSimulation","forceManyBody","forceLink","forceCenter","forceCollide","simulationNodes","_item$position","_item$position2","random","d3Edges","nodeIds","n","simulation","force","strength","distanceMax","innerWidth","innerHeight","radius","stop","i","tick","positionMap","Map","forEach","set","get","quickNodes","nodeData","chiefComplaint","currentPresentation","current_presentation","medicationHistory","medication_history","therapyProgress","therapy_progress","defensePatterns","defense_patterns","clinicalReflection","clinical_reflection","gridSize","ceil","nodeSpacing","offsetY","floor","optimizedEdges","createOptimizedEdges","nodeIdSet","updatable","cleanData","_topic$position","_topic$position2","resources","_caseItem$position","_caseItem$position2","case_id","encounter_date","gender","history_present_illness","medical_history","mental_status_exam","_task$position","_task$position2","linked_case_id","linked_topic_id","_lit$position","_lit$position2","publication","pdf_path","response","axios","put","headers","err","_err$response","_err$response2","_err$response3","_err$response3$data","detail","onConnect","params","edgeId","newEdge","interactionWidth","addEdge","onNodeClick","event","onNodeDoubleClick","parts","dataItem","onEdgeDoubleClick","onEdgeContextMenu","handleSaveEdgeLabel","onEdgeMouseEnter","onEdgeMouseLeave","forceLayout","currentEdges","validEdges","fx","fy","ticksPerFrame","totalTicks","currentTick","runSimulationChunk","remainingTicks","requestAnimationFrame","simNode","currentData","_updatedData$key","padding","applyForceLayout","handleClearMap","empty","handleNodesChange","changes","positionChanges","change","_updatedData$key2","handleNodeDragStop","dragSaveTimeout","loadMindMapData","local","backendError","nodeMatchesSearch","query","searchTerm","hasMatch","handleKeyDown","_document$querySelect","tagName","ctrlKey","metaKey","document","querySelector","focus","addEventListener","removeEventListener","styleSheet","getElementById","createElement","head","appendChild","textContent","OptimizedLoadingScreen","CheckCircle","toLocaleTimeString","Cloud","Shuffle","Bookmark","Eye","ReactFlowErrorBoundary","ReactFlow","onNodeDragStop","edgeTypes","floating","enhanced","nodesDraggable","nodesConnectable","elementsSelectable","onInit","reactFlowInstance","onError","snapToGrid","snapGrid","elevateEdgesOnSelect","connectionLineComponent","ConnectionLine","defaultEdgeOptions","Background","gap","Controls","MiniMap","allNodes","templateId","_mindMapData$topics3","_mindMapData$cases3","_mindMapData$tasks3","_mindMapData$literatu3","dataId","currentDataCount","gridPosition","newNode","dataToAdd","concat","CaseModal","TopicModal","constructor","super","this","hasError","getDerivedStateFromError","componentDidCatch","errorInfo","render","location","reload","Dashboard","ReactFlowProvider","ReactDOM","App","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","loaded","__webpack_modules__","m","deferred","O","result","chunkIds","fn","notFulfilled","fulfilled","j","every","splice","r","leafPrototypes","getProto","getPrototypeOf","obj","__esModule","then","ns","create","def","indexOf","getOwnPropertyNames","o","defineProperty","enumerable","f","chunkId","Promise","all","reduce","promises","u","miniCssF","g","globalThis","Function","prop","prototype","hasOwnProperty","call","inProgress","dataWebpackPrefix","url","done","script","needAttach","scripts","getElementsByTagName","s","getAttribute","charset","nc","setAttribute","src","onScriptComplete","onerror","onload","doneFns","parentNode","removeChild","bind","Symbol","toStringTag","nmd","paths","p","installedChunks","installedChunkData","promise","resolve","reject","Error","errorType","realSrc","request","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","chunkLoadingGlobal","self","__webpack_exports__"],"sourceRoot":""}